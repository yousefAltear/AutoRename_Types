{
  "Uuid": "1da1d0ef-0480-4148-9491-297eb361b3f3",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Auto Rename V 1.5 ",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "d9e4f9b5bb8748b49f845f216802a5a0",
      "Inputs": [
        {
          "Id": "9d5ebbddd3c54f86acaff6778b399353",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20d05b00ee3848ecb555c761102ca364",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ff9e43593514320b38fbd2c836d173a",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92858681a6bc422f85ffe96f532dea4e",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "4dcd509eac854c0c88652b4484ac1ec0",
      "Inputs": [
        {
          "Id": "3827de4c72f74be3bfa843077f337a03",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ded6d0ce6d2a4447bf0cc8470ea7bbf4",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6002f107a95f4f4dafddb64d89beae80",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66dc42fdbc864b229281d000bdc9096c",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05b86e1cda9444e4aa846a2f5e9d96ef",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "21e8ead88cdf4caea2a9a5ed0c0e7c65",
      "Inputs": [
        {
          "Id": "cb7f06abf91e4260b2afd176135b8014",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4807fd01cfff44ba992834c2ae490fcf",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Insert@string,int,string",
      "Id": "fd0911cb4946422fbc2ccad432272d07",
      "Inputs": [
        {
          "Id": "566665d6fe3448a28037f38256973261",
          "Name": "string",
          "Description": "String to insert into.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7e7b643fcce438aab283760f464b7d4",
          "Name": "index",
          "Description": "Index to insert at.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92b0bb547faf4b8f92692177d1c203e4",
          "Name": "toInsert",
          "Description": "String to be inserted.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7cef26f16e0a4eaea13aec0e61f972bd",
          "Name": "string",
          "Description": "String with inserted substring.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Inserts a string into another string at a given index.\n\nString.Insert (string: string, index: int, toInsert: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "e15f732335ca4d8db2046b4642688eea",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1a0b2358dd5c4fdd8a3f9b6557501a96",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "SerializedItems": [
        {
          "Name": "Main",
          "Item": "Main - "
        },
        {
          "Name": "Secondary",
          "Item": "Secondary - "
        },
        {
          "Name": "Interior",
          "Item": ""
        }
      ],
      "SelectedIndex": 1,
      "SelectedString": "Secondary",
      "NodeType": "ExtensionNode",
      "Id": "d7766b9b1b7d4c1da722fc4ae8ad2c13",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0043286341e148d29ccb9abf57143a4c",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "6f2aaa4b36e94c4d856c1483faf787f2",
      "Inputs": [
        {
          "Id": "f1e7021d5ae540a8bf932cbe7f00737b",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "707b36a4680e45e7ba902457f6f46445",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d38c9410fa14597895a2b1c7e80491d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99e7f2258c4347788378300194893a00",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "c7df159e9a224864acef4e56c36bc179",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e4b8f964fcd2412fa9ead109aa62002d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "0c3112cef80a48dfb15a922ff15db639",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0f1c9aad92134455a60bb342458b4f24",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "983a564b40a44f0c938ec66bce1f6983",
      "Inputs": [
        {
          "Id": "d9e924ea1c064dcaa291e8874c35d68c",
          "Name": "number",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a8c4de385c342a89d674dfb8618ca19",
          "Name": "fraction(str)",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a decimal foot value to a fractional foot/inch string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Width\";",
      "Id": "37191c85b2854318aff6857d8a567ae5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ddb21ff37a2d45688e304ca3da4a50a2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "3851bbc432044831bbd87b451405781f",
      "Inputs": [
        {
          "Id": "5078c1dbf662452996a6c1fff66516e0",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc70d926e5a241619f25bc0c7be92919",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c2bef96aae04bf49edcbb7c88bffb77",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 2.0,
      "Id": "fd93024517d84d1a9166f5f0b0ab9e42",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "894324b0f742436dbb66ba2627f84044",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "689d662f75fa487cae413710698642ed",
      "Inputs": [
        {
          "Id": "7e51ebeba02e41c085a1eef6fab6691e",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e4072a7b14b49d0a16e633ca2119beb",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb8d2bf3323041ed9afd8735cfa3b267",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "0795882a4a564a33b3d5939b719d600d",
      "Inputs": [
        {
          "Id": "f5a15fe15a1f49479cb5e6cbb36b845a",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6250bf90c7524b4ba47b81647f33625c",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "0db0bc0f4e1b4659a9978304a90231e7",
      "Inputs": [
        {
          "Id": "fcb922a2c4774724a324a0db9aec3746",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74aff7a878b748f584569af9d9cdf7e0",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "940295e061f1486284898cfb73fcd07c",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "699c937b7304412394ca0c4f6ad1d007",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "/",
      "Id": "d6993c0a65444b70b305315bdabbdf76",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "144a3879389c4cfcb9496b163ef51779",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "bd08ca69dcd343fb84f92ce2f148eedd",
      "Inputs": [
        {
          "Id": "4c660c469cd24c4daa2438b0a44631dc",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec73fc35078440299a2ce25b0c226297",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa99ae4013a948e4a5e86f0e3b0c7e59",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7338fa7208e4561b0d3ae9c273ba29a",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d86e2be241494d17b094e850b8661ddf",
      "Inputs": [
        {
          "Id": "18cd0851f95140169aa207b014c82981",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08d06b5de44743628531ae8477532c9b",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "843c9429d60548e2a87f50b35990b644",
      "Inputs": [
        {
          "Id": "238428ddccbb4e0e836834138a498e5b",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9012a1508a084536b228e19c800a34ef",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "228346de27bb4329a980d8b5073414a2",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "636687509236438d92ec4828f644b5fc",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4848e3fdf30f4d0a84d78b8fd41fd0d0",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20105d53dcef4aec968222085a020d22",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf145dceb9b446cbac9a9e0755a59e0b",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f45843a603e4acf91789be0792a4175",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "cba8b57bfb264143a1921d8a470615b0",
      "Inputs": [
        {
          "Id": "b560c2da168b4faeaad1f3a7970e18b2",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f114fb1e15bf40adb602cc137af47165",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e24bd8e1073b44c78709f92d67fcad48",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f343df30e7c84f69891185ecab6befcd",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d168518afa38469bbda638ef8549f646",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06319654592a45a480e7bff5f9c7a561",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "244fd5438635439fb1e94b3d64a27df8",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f2f8366d6bc4bc3b28baacb163c55b6",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a0267fc99af54bdf8d42cb83f51670f1",
      "Inputs": [
        {
          "Id": "ec90c41ae6b343238eabe49f42ea1548",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12df43672d7843d994816642956be2e8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b1bd294fa2e45489f59173804dc9572",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "270b6a1ccdf048578d915ce0d1cbbb88",
      "Inputs": [
        {
          "Id": "6d375422108f4172bc1da054ac20d9cb",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9e20490a61a491bb0ef68dd6c38380d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc08ba340dd2460388e37169e3bfccf0",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "eb3cb514c8dd41f6ab8ca1b7e8a19635",
      "Inputs": [
        {
          "Id": "6f3f8598d5dc43f39e7bb1c9edcdc67b",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18f505c7b23944b9a159f75c146e80e1",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d463fe5ae2f94076ad8150d1c6088f70",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1ab30be60c14efba56f1d58e993ed50",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "4a0483f237344627bb573921a82131ff",
      "Inputs": [
        {
          "Id": "1ca117845f374acba6e7ce5842dc8e28",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1ff82502e9f40c5896de960c06c7fd5",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0483c90ac474448286d272a842c81f33",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd007ed396e64c94a47b0d5a60194294",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "456a952e23504bbc96b817b965bb650f",
      "Inputs": [
        {
          "Id": "bf31159234c34dd78bb6d7f4b5bd90b7",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b52573c7dbd74700b3d8ed9fc9e66f18",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8114d914265d46b88a2cc2f7580a0ac0",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7e47ac855ae4c0fb5b3cb6b949086fb",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "7db689a447a74142b9383e83ca457500",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eeb5f8e7feb64e5c987c90b6768a059d",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\"",
      "Id": "46e09ad4f850420da36968292bd49f60",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4631c6105e3142e0abb192d54005907b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "667de9256ce04e9f950083778e7f89c6",
      "Inputs": [
        {
          "Id": "75ba90cf5b2f435d9a67d9929de9ddb6",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "885337c3335641949275dcb2914e66b8",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1534fe635df74585bf0bc4f6c1f34cfd",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2bd8fb2c47ed4bd1bf7828e42c604208",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "49756c7ff015452fb37936d081c3d4c2",
      "Inputs": [
        {
          "Id": "ae453ae6f26e4ec0b14c1858d079e9a4",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a984e5b328224f14afe4d0f51452e957",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88cd78f81ecd4057b1007c288fa7cf65",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "829ca92ad7a048f0835db3589e5287b2",
      "Inputs": [
        {
          "Id": "002aefdf640a43acb9cfa5a850dd1909",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1999dc172e34f7fb211ab344d47296a",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d5da7fa77654b068820990872d03637",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "8e1af4950cff4768ab378273c7f216d8",
      "Inputs": [
        {
          "Id": "94fafbe7d6bf4db1b80a006f55fa2d9f",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d51752aca1b48c586adc0a3a2d6203a",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d812545d856246948da09ceb7d629873",
      "Inputs": [
        {
          "Id": "78e8585efe5d465a800f62d0fc50f595",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6b238fa46cb4d799f9f18fac888a4c1",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "c7890b84017d40e8b0b498c3dfce5cd2",
      "Inputs": [
        {
          "Id": "06fd04135fde40b8929a9387c2b34628",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a790b60b2bd45aa84b595754187e43f",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cec3c52606cf49d9880d04a7dda9dfa1",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"    0\";",
      "Id": "c088e4ebe6aa4a9f9c91b05b8435b091",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "133728778e4c45b2b8bb4a472a9880eb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "c9605302d3124e51996a4d881634ef7f",
      "Inputs": [
        {
          "Id": "556fa8e05bce461d92cb56d4f271a51f",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4598afd907fd4dcb84981169f523ac62",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfa7e651881649a29b7c621745ce85b7",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"    0\";",
      "Id": "08b97b7e6465456987a7097d7e66c5eb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "23d52b6f2dd943678a66b0c118e36a7d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 3.0,
      "Id": "044c64326cc44b07bd43bd414b9ffda7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "41523831bfb04ebf9e1096cb7968a8e0",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "e5d138f4aa304b0eafa8d30157d4c315",
      "Inputs": [
        {
          "Id": "c46970005f9d40168d86268f8d68b6a4",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90864547c6a24425811757f3515ee733",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97d6e83f314e4f018d520024220673df",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "6dbf244f907042bea6ea47e71ae75225",
      "Inputs": [
        {
          "Id": "ee944b7b2e694ea1882d70308138eff8",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df2792266b434d2a9c023e272b84399f",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba0bdeaa79864db7bca6a5dacddc6621",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "593879b29e1e4853832c05a83bb26a04",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "6a481a593dcd4ca79664dbcf410c1ccb",
      "Inputs": [
        {
          "Id": "2bb7b808b9fe4627a375f44d154991e1",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f51d18ac7a9d4e8da45996eda4f219f4",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "6b0f02a662da4688bde83a382b932e98",
      "Inputs": [
        {
          "Id": "4d18666b38dc45f59e0470f34416a2ef",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ddb5c2806e8b4c4bb48cb67808370704",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d14416e76054c0692adf1d3c291e496",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 2.0,
      "Id": "28bc997f22e8463cafae02a7bcf35a56",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4a67a70762b04218896d85b0651d5ffb",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "8425291e46bf402dbebf1920ab4272df",
      "Inputs": [
        {
          "Id": "d8a14c39d7784b5487b56444514fdf6e",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "420578b581fe447ab2a809ef223dd49c",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "b6b062e7c4824e2eaeea34cb90bb266b",
      "Inputs": [
        {
          "Id": "53ce3240a306457497b224d7b3e12539",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "894afc8c28c44d48855ce68b35123998",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5da4f9ff54554a6083e0899e124decaf",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "af68dd3ecad047daa2ff31de8172ac4c",
      "Inputs": [
        {
          "Id": "189792d0ba574732a13d8e4d03d8af44",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f093a60d93d04e318046abafa77ddd0b",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e606bdb459624308897e956cedb49fb0",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58c35840e02b48cfb73e4ffd1977b6c3",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"0   \";",
      "Id": "49ea0f9ae3994dea9cd29c8b87a29003",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2fd867952fc74c17b7d25568937de6ae",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "9badc21f05d440c19a07c0608135df77",
      "Inputs": [
        {
          "Id": "00392a9d54534db7ac56da5e6ad9faae",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0a59deae0d247af82c61da5253b9adc",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c91ba13918eb4dd7a9d0b441ca962fe4",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "aa7040d486d64df78c3d7c5f5be9ebe6",
      "Inputs": [
        {
          "Id": "c2c1b66c0fb74e9cac892956afb71ea9",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eae52233d252493ca30137f1d28eacea",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "c4e90a70159e4f2891ff86cc520d6f03",
      "Inputs": [
        {
          "Id": "8cc0ba866b234076a2c00558157a742a",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a24619a747654dc6ae0bfdb79af9b9bd",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2fce50da0d54f3596d6d614a2954c6e",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "aaad4c090eaa42ddab8bc5ab190073b8",
      "Inputs": [
        {
          "Id": "a714554f982b4e208e3fcbb133edad4e",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7f894aeb75d443690ed10c6b1037c65",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16045061094b490f951bb4405ca19974",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\"",
      "Id": "f024b0ffd0604e5188b8ee2fe9b346fc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "195f78caed974214bd5b30257c18eae9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " ",
      "Id": "52178867440848399e5d11fbaa772a00",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9df0ca29f11d4e8e9d9d81b946f5d788",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "3d309a5d21c74032a93c472c563a99e5",
      "Inputs": [
        {
          "Id": "0579fb29378148bdb5971ece84c2dd7c",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dea4ec39658b4d58860319ea101fd590",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f449ebd03e9c4fc688f8d779db5b644d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d03db7df3984ec5ac8c91e3b934aeeb",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\"",
      "Id": "b4684253a14646de9511b30bce962d0c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cc9fdb77b6f14489bf930e85482dae68",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " ",
      "Id": "d83b0a0bfedc494b98e380f2f131a65f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "502bfe6ebc1c4da8b1a9990595ec0889",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "8916cf157af4470ea19d8376e696f09d",
      "Inputs": [
        {
          "Id": "bf627554ae69434dab39c9bfd06edd43",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe61477bfd2e4073a095cfdef67a5386",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "770a36c9c4cd4d7290e4ec4838253bcc",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3daf392d9254915bafbdf5560280634",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"0   \";",
      "Id": "333c96fe3b9e4c47b7233bccebff0d8c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "29ecbdee16c64e58b09a818bf568be4d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "c0d8beca8d6b4fa695706ecdbd19168b",
      "Inputs": [
        {
          "Id": "66be962e33b74491928eacbeb196036d",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afbcd2f3cfc6467faa4c4ad30a7045f8",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a9ddb6b884041c284a279cba83e3683",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "9bde6fedd1bc4dc1803bbc19aaeb9ebb",
      "Inputs": [
        {
          "Id": "70b24906b1ed4c67ba934eb87d3a4cb5",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49f42b4b32344c50bde4e5ca37dc654a",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "49d6b2ae66754a359d92938d803efa03",
      "Inputs": [
        {
          "Id": "0df04c102e954befa0c9eb18140bdb77",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "057392beab0b4137a2265159af86c2c4",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\"",
      "Id": "a5aa0956349b40129efa17660320e6d5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a68b2218869845f0a87979d1211c0c33",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " ",
      "Id": "bd7cbbfb898d4b05a9b65324bf8791b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48296c733123470a8e3f7b7db74504b9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "560115e793a14a969560dbf49fba58fe",
      "Inputs": [
        {
          "Id": "2773e4e2a437442397be8eae7632429e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d45780aa3d8456e9096ef5b01912768",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed885a1c3b9146b887f9963abf031bf3",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7391858405e64a2e92fad5367b8747ab",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "19a4318ed7454aabb72a37c18f3cd0c8",
      "Inputs": [
        {
          "Id": "97274d25593e4e41beea834945bb37d9",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e884e895df745e6a8914c1924b34a34",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Id": "ec758926060547fe8c97d76962181d19",
      "Inputs": [
        {
          "Id": "095a05563adc44b097691b52b8a39bc1",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "236c3089822947e4b17b1b3bed701218",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e1be8effc0a4027950bdfe6a0890683",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-6;\n1;",
      "Id": "bf06dd6f73ee4c38a38277b3108bd92a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4b342c75cd2349cb811b0e8c5b6a5291",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e35b1a1bdab145f7a35035d0540161be",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Remove@string,int,int",
      "Id": "6186ea8e736b4ca38d54c76266c6f8f6",
      "Inputs": [
        {
          "Id": "078264328d8e431f8abc1b89801fb013",
          "Name": "string",
          "Description": "String to remove characters from.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80af7af84181418585f2248c14e3c51e",
          "Name": "startIndex",
          "Description": "Index at which to start removal.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd1297acf76b4029b84c1ee562b9c4b3",
          "Name": "count",
          "Description": "Amount of characters to remove, Note: if the Count is negative, the removal process goes from right to left.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66b3c5cb81bb4e61b4a327c50342ca19",
          "Name": "string",
          "Description": "String with characters removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes characters from a string.\n\nString.Remove (string: string, startIndex: int, count: int): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "0198324a17ea4be1b7f46509443136d9",
      "Inputs": [
        {
          "Id": "073cc9b8e6584e82b4f75de159c9bd82",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "306b84daacb24d1c9feaef1ccbed13cc",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55a9ebd09d4449eaa519041e317abb3b",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "0278b3f3e781490986b38fce924ede68",
      "Inputs": [
        {
          "Id": "9e1739fac7304eac836dcc36c437095d",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15a6ec0821df4fb9a01e55172cace006",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 3.0,
      "Id": "c6350bab6b38422483d2b787e29bcad7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ffc9f91205f48619b4231004110d8bf",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "d8fec8710282439598afef4eb4072b79",
      "Inputs": [
        {
          "Id": "08478300c8834e499ecdd894f12c6486",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ba442aed1824990b3d7f2e263beeaa8",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e7507a77cce4a608d0818eab3123f2a",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "c281c4611d784e3cb1e733f2a8834a8d",
      "Inputs": [
        {
          "Id": "3ac6c8a8db9d418fb07d8e7c9dd94d8a",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93ccb4746ee4422d8338ba5d76bf0464",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6cc3994a16244a6895e00e466ec7425",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19bd73942c5d42768042a40d39096475",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "bfb2a30ee2cd4129b262248525820316",
      "Inputs": [
        {
          "Id": "e49a1bd568aa4c38aa9ff883d70b0a90",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b179c95784094d37935d2692692a59ad",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcbaf17dbc3040748f5962afadd4cf22",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "7c125ad03e344dc6b0cf2502d7f7349f",
      "Inputs": [
        {
          "Id": "fd993f481334418aaf933cbf058a39f8",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "212e38d914e54892b9d2636fcc16d418",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62ef9a207cb4438298ffd437dd4a6bf3",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3197b277bc5402b93dbb1f75ee7c224",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "aa4a7427c3564fc5b21360e3b5195117",
      "Inputs": [
        {
          "Id": "608fdcf27e4748dd8b89a830e6747f61",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d959b36f81664ebaa2ba6f7456b6106e",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "f9eb73a5dbc143818fbfb1c6c3bab8ae",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a42077491bf4668b712f948139e635d",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"  \";",
      "Id": "ad1f5587252045bc908bb38b7e35869b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "748449d302554bb4b0e24edab00d6986",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "d87a591ae85c412ea7828b55b7e1145e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4cce0208d3784342a15dcce9709135f6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "7ae992379b36456f82786552b2015caf",
      "Inputs": [
        {
          "Id": "0ebbe147fe55495abca18aaa86b29f5f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c741448f5eec44dabe3d279e58732fe0",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6a6e8177a304b39af51c79c153c768b",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3d38ece79ff486f8e73cf266da6e591",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "857006e5cf2d4a818c4b3e289d380fbb",
      "Inputs": [
        {
          "Id": "81813c4845544e4cbb5a7801087661f5",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8bf873c53c14477a8d3d9637bf41663",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1c7db1eddba4598bc73dd16aff0277f",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "877e86a64e38427cb80242ca1fffe34e",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "348c3ace26a24261b63fe88ab04a486b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fae154c0fba6491c932a0d3eaddb3fd7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"   \";",
      "Id": "94d57164d52640c396cb4e9b4a97703f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b2f641574e844b3eae0cc7e7bb3dbd9b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "e5c84ac0bc0743608c9694569cd96578",
      "Inputs": [
        {
          "Id": "83c9e618cb934a05b05ab3166d46b292",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e8784b6c39e4887962edc235d7ba893",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f1ad64537264ad8bd7eb3ff36fec28d",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "05887890e482411bb29350edbf13103c",
      "Inputs": [
        {
          "Id": "8457b58e177a4f44829f3f76da3f479b",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd667f26794243e0af864a0019ac9dea",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "c0f355f63d1e4301a5fcabe7f516839d",
      "Inputs": [
        {
          "Id": "3d7adb7504374e8aa8eca02ce7841a28",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aad520a4eb034d32a5224a0093dbfc00",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "3b394e2e5bda4223a6db01abc46234a4",
      "Inputs": [
        {
          "Id": "040942caae55498591fca9af2f43bec5",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae8ccf6f222e4d48b56d46db807f3aee",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "c64204f4fb034328ab2cdcbd1c8bda90",
      "Inputs": [
        {
          "Id": "c84bcbbb429644a4bd4e3b2062c72c81",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ed1d60778104328a9fb49a5299d8bd7",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0f0c00fee4d4ab1a4b4996497fa91b2",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "43688e1a58224dd88daee8eba221b962",
      "Inputs": [
        {
          "Id": "0ee8cc141f4043528d27e41b6a81c640",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d422a6161964c97a390122d01d76f87",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7578cedf39e45f8ab8d4ce4c5de92e7",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "4d32125ad0e746bd9e22785d66ef7825",
      "Inputs": [
        {
          "Id": "2272870cd01a4793b3d8c0b8b75eb128",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe58499933134f32a862eae4fc23f056",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c17171154ac46cc8f187bc7ce4783e8",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "a9634b8da5144ceeaccded9466d9f728",
      "Inputs": [
        {
          "Id": "1d6db2716afe4042a85f211ab61ba9d0",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7137914ad6b4477391291c98e36d7cd3",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eec65d648ef344748e9900ae188635e4",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"0\";",
      "Id": "8bdfef3d548e4d1d89e0111a5c60f084",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "569b03737b3d403bbe02305ff283db4f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "10f98889842840bb80ded38adc612b81",
      "Inputs": [
        {
          "Id": "69301d52100943c88ebd27dbe5bdf12e",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f0f7e6842574cc188c40cf6d6390137",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e22ad7bd1ba4f5ba45ced18b3f25d5e",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36cc22e7fe85441ba7a2856bf17fcde5",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "27645297301c42459f461e4c13f36ecb",
      "Inputs": [
        {
          "Id": "51afedb834734b1ab2bcfb340d175c22",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ff12be6c5c6472cb85d7fd175e70b70",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5aac6dbafca54b24ae8a3a8d3ffa2219",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "044bc396ef944051a56665cc7c844ada",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "865fa3359943482a9589ae84d2a647f2",
      "Inputs": [
        {
          "Id": "2ccbbffc5570423a9a05c5f9dbb6c6fe",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95e9a4f4d915466cade4bb657ff5535d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bffcd32773d74039b297e3ec6a858459",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d283bd12ea8d4e5c8aee05e47f1e7187",
      "Inputs": [
        {
          "Id": "7bd000e3d312438db8c0332be293b9cc",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c880de6a5c2343b9847c3b0ff6e1121e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43369eaf5a6642aaafb6d680a68694ac",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "301428e75323484eba831c9c2856edca",
      "Inputs": [
        {
          "Id": "5e35464879314fc4b80e4570fea196e4",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74cdf1bb841c47c19527d880ff7e6e38",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f37e3aa1fb84241a3303bd6053b2eda",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bc30b2a12d24742b253b1ed9d78652f",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "82f72681fe3a46c3b9a4c73a08c1ea8c",
      "Inputs": [
        {
          "Id": "af022f0ff9bb477ea5e083a5a165ca7b",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb3a76131bea4e8993b397831082195b",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7dfb0c307b2e4b57b4da45f23a8ec2d3",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b574c984e54f402a8eab3fea1156e0e4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4b4e07ee2ef54ec7a225b9e6eaf98291",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "'",
      "Id": "094eab8be14447af8cf0606023716421",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "26f6f5841b7d48a181547e09c7a41082",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "463caea7b718415a9dbc59924f9723e0",
      "Inputs": [
        {
          "Id": "30308c76556e47459eb145c4deaae4c7",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "41da2998995542af89c01f5b29090d6c",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9cb20214084845e7904ac4686c930474",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cd19a9495684367b296fdd6bcaa0ead",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "de69233861ad4d018d1e8ed3d1d8ee14",
      "Inputs": [
        {
          "Id": "99e713bec7714bd9ac9e9e3133fb657c",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd316c2c467c4b278d3ae59eeac5433c",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be63f52c4dcd473c9146b2b87678118a",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ae9c00412f2481aa664a955f0538493",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ab85cb423ecf444d93224b47ad74cf16",
      "Inputs": [
        {
          "Id": "483332ce7fde411a9049e5d9d798f295",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e33075427c7f40838c30e1e6fc0c6441",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8130e329c44742c0a90c79961223c613",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4049bc69a0ab4b44885824ecb56aee82",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " ",
      "Id": "88cc6ab5dc174b879ad42b908962931c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "22f206fedca04f4f9c80d15c602594d4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "'",
      "Id": "80e2f86509ed45ca9008acb2908f26ec",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "38e0c652427e40abb5457cd023302aad",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "cf3d2592bcc941df96a637074c278193",
      "Inputs": [
        {
          "Id": "78f2b78c2fd64d68810bfe895193e0d4",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd67ff9dd773405da337cf90ada2955b",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "e66a0606b1c74ec0a15695591a8dd8db",
      "Inputs": [
        {
          "Id": "cc583e8263424e56bdbf03bbdd8dfe3b",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "019e2c20ac724ea2abad6f7f741d6e0e",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "793a14977e584dbdad68cf7ea17b3ecf",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-5;\n1;",
      "Id": "109a2b49f774472aadbbfad4b6e542b5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f78d60fbd7e44a78923437509bc7a752",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3207e119a6749f6a94d283924046639",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Id": "4b7d372aa1cf42e186799d3a70844542",
      "Inputs": [
        {
          "Id": "b50778f6f31c493f92dab14b3dc0c113",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cd411df1a324d049e491e12f251ba27",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e4f5bd8a044478e91e84000c02ad4a2",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Remove@string,int,int",
      "Id": "fc22477e6c4949af818fee424376d39f",
      "Inputs": [
        {
          "Id": "c9d4339be75145fba2c1c030728494d0",
          "Name": "string",
          "Description": "String to remove characters from.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32db1f745d5a42098c36bf8bc4f4f3e3",
          "Name": "startIndex",
          "Description": "Index at which to start removal.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b7aec75a01b44c5a621e2bba91604e3",
          "Name": "count",
          "Description": "Amount of characters to remove, Note: if the Count is negative, the removal process goes from right to left.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e221a4eb7564ab58bf0c27a8a534b42",
          "Name": "string",
          "Description": "String with characters removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes characters from a string.\n\nString.Remove (string: string, startIndex: int, count: int): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "fa7e80ba54fd43a385768e0a4943ae0a",
      "Inputs": [
        {
          "Id": "14876fad140e4be2b0c9997c851a9cda",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eea8144c089f4c50bd38183d5fea4a61",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e8f42d3646b47658cc31564930abc75",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"0    \";",
      "Id": "e95e8d38483d4c4b95315e87d910078a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "01561d2c94a64cb381a0d7e89fb64e09",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "6506596fb1e549baa15dfb64dead94b0",
      "Inputs": [
        {
          "Id": "9f121d2b056445babf2f7eea451608a4",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36a0ebbb6bff47e8925b3f5c8feb9e84",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "9;",
      "Id": "f9a9830b93ce40d38fe51ed06fc40791",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "518755c56aa44d84b35d6e1c89337802",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "06af59db6d9c40c4b67526cf65dc911a",
      "Inputs": [
        {
          "Id": "ac945d63f7c9434bb1b958c2b8e229ae",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e86d0abf35f6450c99374b1f99a21997",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "678c61d6f1684154b0a2ecf596bad055",
      "Inputs": [
        {
          "Id": "6b7fb35c479d4235b1acde2807e7e100",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bfa1da1c2b84cbb8fd21690f5cae6ee",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "400af91d98e24a20a2c1f15e16cb4a46",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c2a21a0b523483fad85b703d478157d",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "f30043da73f6458e9ae2fcf90d73f5b5",
      "Inputs": [
        {
          "Id": "8d0eebfe60574370ae515f1ba05c80a4",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7d002bf21804002b5171fe85daa6337",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "3b86883c5bf04926b194ca96cacd426f",
      "Inputs": [
        {
          "Id": "c35f71fdea7f42b7a95dc5339e7b3afd",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "540944de518b42e7aac22194feeb718a",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ff08be627e04770823bd5e967370a8b",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "3278009996f1432daa41438a0c24be48",
      "Inputs": [
        {
          "Id": "38274f9ed78641ef8fef63667a5d54ca",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "443d2f54464a40adb1c4835bea3b21b4",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e01803ce3a248aba8090b5c2c3fd7d5",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f093dc379024034ac9cb4b276a5cf55",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "95ccd697c69d4670a2017b72bde77bd6",
      "Inputs": [
        {
          "Id": "0c0e09e49fea46f996758eb4935d1c9a",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a74fbaedf9a644abb1949a1d0aac5d76",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "671821d1506a4246a24798d81c5c710d",
      "Inputs": [
        {
          "Id": "8062f6afb77a4c25930288631880bfa6",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ddf3c3adbc44949bc51dcf10657ef9c",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0c2ce688532419187a4c26e1b798be4",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "0f4ef1c77b604421a9036159a8caeb46",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5309068fb0034f95966cdda5561e3990",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "a67438fed347417a9f68ba57fbbf3f3f",
      "Inputs": [
        {
          "Id": "af848ffa245746d48084600b48ea34dc",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e592d6ff1de3438ba32538143343121d",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c83042b1cfb44d8587034f73f05cb665",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "610e397d28b74a668095d669e373d762",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "1338ca1fe9f54b7799b79d94f6e2bf03",
      "Inputs": [
        {
          "Id": "2e55ecf4fcc647f8970e3afea2be10a4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cfff3b5319d4f3785c0ffc6ccca1170",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 717,
      "SelectedString": "OST_Windows",
      "NodeType": "ExtensionNode",
      "Id": "fcb343b09d344905850ca6df72f6f2dd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "75578660a1b749a1a1767c86831dac69",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "65f93a80-674c-4a98-9d0c-db3a138287e5",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "d507a004d281466da24fd924a2580ff6",
      "Inputs": [
        {
          "Id": "5e39b697937d4a009c28715efacd1240",
          "Name": "category",
          "Description": " Works with categories, BuiltInCategories and BuiltInCategories as strings\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c469e6003ea484ba0f6096b51b7d5ef",
          "Name": "toggle",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9461f468b734c8cae590a4f51e16e9d",
          "Name": "docOrRevitLinkInstance",
          "Description": " Use only if you want to query a linked model\n\nvar\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a7ef5c96fabe40e383268013a0d62035",
          "Name": "familyTypes",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all family types/symbols of a given category in the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Main\";",
      "Id": "40af56b272cc41a291808a55d6e12a01",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b88352eda91e497f8fbe2157105efb9e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "dcd32a60f84244e3b3b0a145eccc19a0",
      "Inputs": [
        {
          "Id": "f9708012e79d4b13929e6496e5753d28",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d71910c9722499bb54d01f855d66c15",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "713f13d88d1545da8eba852a5966b19d",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 4.0,
      "Id": "94810eba8b48409cacd2ccf2b46ab1b1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f9fad45792e44327a13c3fec8c7da85f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 0.0,
      "Id": "5d08703b244b4c869b2813824077769c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "354c2901579e428ba7c01271b58ccbbd",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Substring@string,int,int",
      "Id": "e09bdb5d28c04c5f98419b9299012930",
      "Inputs": [
        {
          "Id": "9c2daeee41b74bde8c99f0558ab92e0e",
          "Name": "string",
          "Description": "String to take substring of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eeca0469d0cc457db5093ec5b4b44309",
          "Name": "startIndex",
          "Description": "Starting character position of the substring in the original string\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82c65d3ac3684141a5357a22e7a92f88",
          "Name": "length",
          "Description": "Number of characters in the substring\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be9d22afe9d443d9875951c950e46571",
          "Name": "string",
          "Description": "Substring made from the original string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves a substring from the given string. The substring starts at the given character position and has the given length.\n\nString.Substring (string: string, startIndex: int, length: int): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "f9811aa23cd44203852c79a9d1ba3c62",
      "Inputs": [
        {
          "Id": "90df96e059a646d1be9790398780185d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fd7387be75047f1a2e713465720cdaf",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 2.0,
      "Id": "1c3a4abb3d1146feacb30840030a3e9e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b027f5bc236046268898cdadf1922777",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "fd5c2153bba9404188633f213a4af2d7",
      "Inputs": [
        {
          "Id": "77ba70f8b4ab42bc8e2ab220a818d4c2",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5335dbd6bf38411495eb5af35214d3cc",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9a25613063f493abc7ef3a70d98047d",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "b7e1e0903a98407486086761527fac22",
      "Inputs": [
        {
          "Id": "ba560cae8aae48a9af27e82cd2dca5d0",
          "Name": "number",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf11e8f537f94b2eb9c2488760ef7833",
          "Name": "fraction(str)",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a decimal foot value to a fractional foot/inch string."
    }
  ],
  "Connectors": [
    {
      "Start": "92858681a6bc422f85ffe96f532dea4e",
      "End": "ded6d0ce6d2a4447bf0cc8470ea7bbf4",
      "Id": "61519121b1744233ab40112379a29f7c",
      "IsHidden": "False"
    },
    {
      "Start": "4807fd01cfff44ba992834c2ae490fcf",
      "End": "9d5ebbddd3c54f86acaff6778b399353",
      "Id": "cb4bb4d6061c4001960641bca6922357",
      "IsHidden": "False"
    },
    {
      "Start": "4807fd01cfff44ba992834c2ae490fcf",
      "End": "20d05b00ee3848ecb555c761102ca364",
      "Id": "d46ea9d148d4451f904819cd80f63031",
      "IsHidden": "False"
    },
    {
      "Start": "7cef26f16e0a4eaea13aec0e61f972bd",
      "End": "6ff9e43593514320b38fbd2c836d173a",
      "Id": "bc35bf5c84b64b66815396b2ec611ed9",
      "IsHidden": "False"
    },
    {
      "Start": "1a0b2358dd5c4fdd8a3f9b6557501a96",
      "End": "d7e7b643fcce438aab283760f464b7d4",
      "Id": "8001c01042f14663a8cd0c9783cf13df",
      "IsHidden": "False"
    },
    {
      "Start": "0043286341e148d29ccb9abf57143a4c",
      "End": "92b0bb547faf4b8f92692177d1c203e4",
      "Id": "67f808f6f7dd431c97bccf5cec1f69af",
      "IsHidden": "False"
    },
    {
      "Start": "99e7f2258c4347788378300194893a00",
      "End": "566665d6fe3448a28037f38256973261",
      "Id": "4a1f930e02d242c4b0d149d8f7092c9c",
      "IsHidden": "False"
    },
    {
      "Start": "e4b8f964fcd2412fa9ead109aa62002d",
      "End": "5d38c9410fa14597895a2b1c7e80491d",
      "Id": "c568e2b04e5d47af96774487c8653fb4",
      "IsHidden": "False"
    },
    {
      "Start": "0f1c9aad92134455a60bb342458b4f24",
      "End": "707b36a4680e45e7ba902457f6f46445",
      "Id": "1155144ec5504d57ac2bca0ecd42b729",
      "IsHidden": "False"
    },
    {
      "Start": "3a8c4de385c342a89d674dfb8618ca19",
      "End": "bf31159234c34dd78bb6d7f4b5bd90b7",
      "Id": "ae903888fe254e3f93cb37957331e0c6",
      "IsHidden": "False"
    },
    {
      "Start": "3a8c4de385c342a89d674dfb8618ca19",
      "End": "ae453ae6f26e4ec0b14c1858d079e9a4",
      "Id": "5285d0f4771d47bd996de86e389148b7",
      "IsHidden": "False"
    },
    {
      "Start": "3a8c4de385c342a89d674dfb8618ca19",
      "End": "002aefdf640a43acb9cfa5a850dd1909",
      "Id": "7f619c3b16964cac8f68eebf35d865a8",
      "IsHidden": "False"
    },
    {
      "Start": "3a8c4de385c342a89d674dfb8618ca19",
      "End": "a714554f982b4e208e3fcbb133edad4e",
      "Id": "acbbb2abef8149c0ac3aca64703970ce",
      "IsHidden": "False"
    },
    {
      "Start": "3a8c4de385c342a89d674dfb8618ca19",
      "End": "c46970005f9d40168d86268f8d68b6a4",
      "Id": "0b363dfedbc04783b9e68dce84479bef",
      "IsHidden": "False"
    },
    {
      "Start": "3a8c4de385c342a89d674dfb8618ca19",
      "End": "8cc0ba866b234076a2c00558157a742a",
      "Id": "796c93be84774f74a10117db837309af",
      "IsHidden": "False"
    },
    {
      "Start": "3a8c4de385c342a89d674dfb8618ca19",
      "End": "75ba90cf5b2f435d9a67d9929de9ddb6",
      "Id": "a2e24b23202041e49541b4f0e21c041d",
      "IsHidden": "False"
    },
    {
      "Start": "3a8c4de385c342a89d674dfb8618ca19",
      "End": "073cc9b8e6584e82b4f75de159c9bd82",
      "Id": "ab777754386c4364945062a33db1d4be",
      "IsHidden": "False"
    },
    {
      "Start": "3a8c4de385c342a89d674dfb8618ca19",
      "End": "cc583e8263424e56bdbf03bbdd8dfe3b",
      "Id": "bdc5f291745f4069ac64f60397ba065f",
      "IsHidden": "False"
    },
    {
      "Start": "ddb21ff37a2d45688e304ca3da4a50a2",
      "End": "fc70d926e5a241619f25bc0c7be92919",
      "Id": "b0ede18b82004a3abd7d3b6e4ae655a4",
      "IsHidden": "False"
    },
    {
      "Start": "5c2bef96aae04bf49edcbb7c88bffb77",
      "End": "d9e924ea1c064dcaa291e8874c35d68c",
      "Id": "4c6ad595a1b14f62853f1e0c2f6e8f6e",
      "IsHidden": "False"
    },
    {
      "Start": "5c2bef96aae04bf49edcbb7c88bffb77",
      "End": "77ba70f8b4ab42bc8e2ab220a818d4c2",
      "Id": "05af06543c1d4457b6e3807dde819902",
      "IsHidden": "False"
    },
    {
      "Start": "894324b0f742436dbb66ba2627f84044",
      "End": "0e4072a7b14b49d0a16e633ca2119beb",
      "Id": "e68b67b9752f478f8340ea6092b6097d",
      "IsHidden": "False"
    },
    {
      "Start": "fb8d2bf3323041ed9afd8735cfa3b267",
      "End": "a1ff82502e9f40c5896de960c06c7fd5",
      "Id": "00006f4c0d8c43a2bfaa0a3fe691808c",
      "IsHidden": "False"
    },
    {
      "Start": "6250bf90c7524b4ba47b81647f33625c",
      "End": "7e51ebeba02e41c085a1eef6fab6691e",
      "Id": "0d2a7ab618834dab9d92d4728d430c69",
      "IsHidden": "False"
    },
    {
      "Start": "699c937b7304412394ca0c4f6ad1d007",
      "End": "ec73fc35078440299a2ce25b0c226297",
      "Id": "d62547cfaa9e4e5a9f8520e33a5a43be",
      "IsHidden": "False"
    },
    {
      "Start": "144a3879389c4cfcb9496b163ef51779",
      "End": "74aff7a878b748f584569af9d9cdf7e0",
      "Id": "17951b133bcc4852a55f787b91b211c3",
      "IsHidden": "False"
    },
    {
      "Start": "aa99ae4013a948e4a5e86f0e3b0c7e59",
      "End": "30308c76556e47459eb145c4deaae4c7",
      "Id": "f073daee56a24778a16dabed1dcc54f9",
      "IsHidden": "False"
    },
    {
      "Start": "aa99ae4013a948e4a5e86f0e3b0c7e59",
      "End": "99e713bec7714bd9ac9e9e3133fb657c",
      "Id": "73d85606cf2348e2aed93d29ead1385d",
      "IsHidden": "False"
    },
    {
      "Start": "b7338fa7208e4561b0d3ae9c273ba29a",
      "End": "d8a14c39d7784b5487b56444514fdf6e",
      "Id": "7287a65c21d34e7f9f88e05abe4c1cb9",
      "IsHidden": "False"
    },
    {
      "Start": "b7338fa7208e4561b0d3ae9c273ba29a",
      "End": "189792d0ba574732a13d8e4d03d8af44",
      "Id": "72b8bd90089e4ba1bff7966c2bf7d957",
      "IsHidden": "False"
    },
    {
      "Start": "08d06b5de44743628531ae8477532c9b",
      "End": "306b84daacb24d1c9feaef1ccbed13cc",
      "Id": "49e8f54a19c34890a4c0e11e16360b15",
      "IsHidden": "False"
    },
    {
      "Start": "08d06b5de44743628531ae8477532c9b",
      "End": "0ebbe147fe55495abca18aaa86b29f5f",
      "Id": "10ed88f22d77468e8bd542d059087d2d",
      "IsHidden": "False"
    },
    {
      "Start": "7f45843a603e4acf91789be0792a4175",
      "End": "ec90c41ae6b343238eabe49f42ea1548",
      "Id": "dd4644b0a6d641edbca89ae5d1477752",
      "IsHidden": "False"
    },
    {
      "Start": "1f2f8366d6bc4bc3b28baacb163c55b6",
      "End": "6d375422108f4172bc1da054ac20d9cb",
      "Id": "2947bfce6400484e845091751d810340",
      "IsHidden": "False"
    },
    {
      "Start": "7b1bd294fa2e45489f59173804dc9572",
      "End": "6f3f8598d5dc43f39e7bb1c9edcdc67b",
      "Id": "95be1b7587b84e509625d5b8126fa9fe",
      "IsHidden": "False"
    },
    {
      "Start": "dc08ba340dd2460388e37169e3bfccf0",
      "End": "18f505c7b23944b9a159f75c146e80e1",
      "Id": "8051b79eb91949bab77871cafb3fa841",
      "IsHidden": "False"
    },
    {
      "Start": "d463fe5ae2f94076ad8150d1c6088f70",
      "End": "9e1739fac7304eac836dcc36c437095d",
      "Id": "8f54ca4543134527aee3a97966b76d03",
      "IsHidden": "False"
    },
    {
      "Start": "d463fe5ae2f94076ad8150d1c6088f70",
      "End": "3ac6c8a8db9d418fb07d8e7c9dd94d8a",
      "Id": "4222938a63f6400ab0cd4a17a0bfdb7c",
      "IsHidden": "False"
    },
    {
      "Start": "d463fe5ae2f94076ad8150d1c6088f70",
      "End": "83c9e618cb934a05b05ab3166d46b292",
      "Id": "6795593fe962425493d49f56c23f54d7",
      "IsHidden": "False"
    },
    {
      "Start": "d463fe5ae2f94076ad8150d1c6088f70",
      "End": "c84bcbbb429644a4bd4e3b2062c72c81",
      "Id": "0744ac5dc3c847d2bd248ec4f7972df7",
      "IsHidden": "False"
    },
    {
      "Start": "d463fe5ae2f94076ad8150d1c6088f70",
      "End": "0ee8cc141f4043528d27e41b6a81c640",
      "Id": "17544c04e4a54ee8a7e1ac13060fc482",
      "IsHidden": "False"
    },
    {
      "Start": "0483c90ac474448286d272a842c81f33",
      "End": "a984e5b328224f14afe4d0f51452e957",
      "Id": "8e0cdf8b71a646f5af1c6d9c98234faa",
      "IsHidden": "False"
    },
    {
      "Start": "0483c90ac474448286d272a842c81f33",
      "End": "94fafbe7d6bf4db1b80a006f55fa2d9f",
      "Id": "7b2e325533904966a56e0aaaafc2964f",
      "IsHidden": "False"
    },
    {
      "Start": "fd007ed396e64c94a47b0d5a60194294",
      "End": "c1999dc172e34f7fb211ab344d47296a",
      "Id": "c5bb2a586fe14d388ae0fde92ec3912d",
      "IsHidden": "False"
    },
    {
      "Start": "fd007ed396e64c94a47b0d5a60194294",
      "End": "78e8585efe5d465a800f62d0fc50f595",
      "Id": "b7a91ca7ab534bc9aa3164977c7d5630",
      "IsHidden": "False"
    },
    {
      "Start": "d7e47ac855ae4c0fb5b3cb6b949086fb",
      "End": "885337c3335641949275dcb2914e66b8",
      "Id": "def732228338415ab7c149c7f991f390",
      "IsHidden": "False"
    },
    {
      "Start": "eeb5f8e7feb64e5c987c90b6768a059d",
      "End": "8114d914265d46b88a2cc2f7580a0ac0",
      "Id": "c77c8774c8c64730860a3cc43de4527d",
      "IsHidden": "False"
    },
    {
      "Start": "4631c6105e3142e0abb192d54005907b",
      "End": "b52573c7dbd74700b3d8ed9fc9e66f18",
      "Id": "50c219bb2b414078854b87a654b244a5",
      "IsHidden": "False"
    },
    {
      "Start": "1534fe635df74585bf0bc4f6c1f34cfd",
      "End": "4c660c469cd24c4daa2438b0a44631dc",
      "Id": "92834f435d794bf193aed444945680d2",
      "IsHidden": "False"
    },
    {
      "Start": "1534fe635df74585bf0bc4f6c1f34cfd",
      "End": "fcb922a2c4774724a324a0db9aec3746",
      "Id": "41cef04200ae4519b91f710488df03d5",
      "IsHidden": "False"
    },
    {
      "Start": "2bd8fb2c47ed4bd1bf7828e42c604208",
      "End": "f5a15fe15a1f49479cb5e6cbb36b845a",
      "Id": "5bcf182d2a8048bfb1021798d984cd65",
      "IsHidden": "False"
    },
    {
      "Start": "2bd8fb2c47ed4bd1bf7828e42c604208",
      "End": "1ca117845f374acba6e7ce5842dc8e28",
      "Id": "5e67e5abfdf148649c9e9dbb60ef0ccd",
      "IsHidden": "False"
    },
    {
      "Start": "88cd78f81ecd4057b1007c288fa7cf65",
      "End": "b560c2da168b4faeaad1f3a7970e18b2",
      "Id": "94f5504444e9428b8391ab4f81adeacf",
      "IsHidden": "False"
    },
    {
      "Start": "3d5da7fa77654b068820990872d03637",
      "End": "f114fb1e15bf40adb602cc137af47165",
      "Id": "c0709d5993834a058e1563661359b4c3",
      "IsHidden": "False"
    },
    {
      "Start": "9d51752aca1b48c586adc0a3a2d6203a",
      "End": "06fd04135fde40b8929a9387c2b34628",
      "Id": "695861bfaa0147f3b266931ad6283a8a",
      "IsHidden": "False"
    },
    {
      "Start": "e6b238fa46cb4d799f9f18fac888a4c1",
      "End": "556fa8e05bce461d92cb56d4f271a51f",
      "Id": "861f646f991f42958e79170e80cd1f6a",
      "IsHidden": "False"
    },
    {
      "Start": "cec3c52606cf49d9880d04a7dda9dfa1",
      "End": "238428ddccbb4e0e836834138a498e5b",
      "Id": "0a7f68008ed74bb384c639405b0ce6b7",
      "IsHidden": "False"
    },
    {
      "Start": "133728778e4c45b2b8bb4a472a9880eb",
      "End": "4a790b60b2bd45aa84b595754187e43f",
      "Id": "e25e697ee5be407bb327ea04ff37d143",
      "IsHidden": "False"
    },
    {
      "Start": "bfa7e651881649a29b7c621745ce85b7",
      "End": "9012a1508a084536b228e19c800a34ef",
      "Id": "04b9596e5641433bb3642869a27d76a9",
      "IsHidden": "False"
    },
    {
      "Start": "23d52b6f2dd943678a66b0c118e36a7d",
      "End": "4598afd907fd4dcb84981169f523ac62",
      "Id": "4433100c3789483e90c178ecaf2d0eb1",
      "IsHidden": "False"
    },
    {
      "Start": "41523831bfb04ebf9e1096cb7968a8e0",
      "End": "ddb5c2806e8b4c4bb48cb67808370704",
      "Id": "43d90addf5504bc58eb73e79119822e8",
      "IsHidden": "False"
    },
    {
      "Start": "97d6e83f314e4f018d520024220673df",
      "End": "d168518afa38469bbda638ef8549f646",
      "Id": "ebd91f6c10a5496b92ef0af4b0e3c42e",
      "IsHidden": "False"
    },
    {
      "Start": "ba0bdeaa79864db7bca6a5dacddc6621",
      "End": "a24619a747654dc6ae0bfdb79af9b9bd",
      "Id": "cadad026419d481d900ef4e17b90cca0",
      "IsHidden": "False"
    },
    {
      "Start": "ba0bdeaa79864db7bca6a5dacddc6621",
      "End": "70b24906b1ed4c67ba934eb87d3a4cb5",
      "Id": "1c1b5fa070874573a4f1d44f425d24da",
      "IsHidden": "False"
    },
    {
      "Start": "593879b29e1e4853832c05a83bb26a04",
      "End": "90864547c6a24425811757f3515ee733",
      "Id": "68224f81a11b4ad78fdacd739e76800d",
      "IsHidden": "False"
    },
    {
      "Start": "593879b29e1e4853832c05a83bb26a04",
      "End": "0df04c102e954befa0c9eb18140bdb77",
      "Id": "263d1833e4d7439cae9e65194a150b74",
      "IsHidden": "False"
    },
    {
      "Start": "f51d18ac7a9d4e8da45996eda4f219f4",
      "End": "4d18666b38dc45f59e0470f34416a2ef",
      "Id": "b96dd42f40c044f283175f5bd269d23c",
      "IsHidden": "False"
    },
    {
      "Start": "1d14416e76054c0692adf1d3c291e496",
      "End": "df2792266b434d2a9c023e272b84399f",
      "Id": "018a2d4cf54940eb8156be987884b280",
      "IsHidden": "False"
    },
    {
      "Start": "4a67a70762b04218896d85b0651d5ffb",
      "End": "894afc8c28c44d48855ce68b35123998",
      "Id": "72454757577f43b2be5bc66b3dd72a40",
      "IsHidden": "False"
    },
    {
      "Start": "420578b581fe447ab2a809ef223dd49c",
      "End": "53ce3240a306457497b224d7b3e12539",
      "Id": "c9a14eebe78f4e2ca5cdc262899e4e87",
      "IsHidden": "False"
    },
    {
      "Start": "5da4f9ff54554a6083e0899e124decaf",
      "End": "f093a60d93d04e318046abafa77ddd0b",
      "Id": "3a11919e5a74493f9ff48f2a1f92a122",
      "IsHidden": "False"
    },
    {
      "Start": "e606bdb459624308897e956cedb49fb0",
      "End": "c2c1b66c0fb74e9cac892956afb71ea9",
      "Id": "3156ab77929045fc81b08c7c6f7eb69e",
      "IsHidden": "False"
    },
    {
      "Start": "e606bdb459624308897e956cedb49fb0",
      "End": "a7f894aeb75d443690ed10c6b1037c65",
      "Id": "22cc8a7b617e4747bc77f9b4f51155d1",
      "IsHidden": "False"
    },
    {
      "Start": "58c35840e02b48cfb73e4ffd1977b6c3",
      "End": "2bb7b808b9fe4627a375f44d154991e1",
      "Id": "73b6fff0d2a248f3b58bf2c815671c57",
      "IsHidden": "False"
    },
    {
      "Start": "58c35840e02b48cfb73e4ffd1977b6c3",
      "End": "ee944b7b2e694ea1882d70308138eff8",
      "Id": "82483d3038854e65b2ab973c79601a62",
      "IsHidden": "False"
    },
    {
      "Start": "2fd867952fc74c17b7d25568937de6ae",
      "End": "00392a9d54534db7ac56da5e6ad9faae",
      "Id": "3e92e27bcb1e41acaf3e258dccd4250c",
      "IsHidden": "False"
    },
    {
      "Start": "c91ba13918eb4dd7a9d0b441ca962fe4",
      "End": "228346de27bb4329a980d8b5073414a2",
      "Id": "ea19f4ac149a4e289fac517a4f71f329",
      "IsHidden": "False"
    },
    {
      "Start": "eae52233d252493ca30137f1d28eacea",
      "End": "0579fb29378148bdb5971ece84c2dd7c",
      "Id": "c274fd4d3e844360aa3eaa8409d49da9",
      "IsHidden": "False"
    },
    {
      "Start": "f2fce50da0d54f3596d6d614a2954c6e",
      "End": "f343df30e7c84f69891185ecab6befcd",
      "Id": "eb0dfe37848f42f2a41d38f399d6f8a8",
      "IsHidden": "False"
    },
    {
      "Start": "16045061094b490f951bb4405ca19974",
      "End": "e24bd8e1073b44c78709f92d67fcad48",
      "Id": "a85966272f67469e9c429c02b367e895",
      "IsHidden": "False"
    },
    {
      "Start": "195f78caed974214bd5b30257c18eae9",
      "End": "dea4ec39658b4d58860319ea101fd590",
      "Id": "c868f865685a4c14994ecfedbb4484e5",
      "IsHidden": "False"
    },
    {
      "Start": "9df0ca29f11d4e8e9d9d81b946f5d788",
      "End": "f449ebd03e9c4fc688f8d779db5b644d",
      "Id": "b9b682a5cd984c1882155d623b4f066e",
      "IsHidden": "False"
    },
    {
      "Start": "5d03db7df3984ec5ac8c91e3b934aeeb",
      "End": "c0a59deae0d247af82c61da5253b9adc",
      "Id": "9e4ec87729da45ab89be9c5165deca04",
      "IsHidden": "False"
    },
    {
      "Start": "cc9fdb77b6f14489bf930e85482dae68",
      "End": "fe61477bfd2e4073a095cfdef67a5386",
      "Id": "3a5622b55b3c4cb486971ab8a45bfa24",
      "IsHidden": "False"
    },
    {
      "Start": "502bfe6ebc1c4da8b1a9990595ec0889",
      "End": "770a36c9c4cd4d7290e4ec4838253bcc",
      "Id": "3c28cb7abc1345489dda1063b775d45b",
      "IsHidden": "False"
    },
    {
      "Start": "f3daf392d9254915bafbdf5560280634",
      "End": "afbcd2f3cfc6467faa4c4ad30a7045f8",
      "Id": "368068845f89441fb1e282227a77c412",
      "IsHidden": "False"
    },
    {
      "Start": "29ecbdee16c64e58b09a818bf568be4d",
      "End": "66be962e33b74491928eacbeb196036d",
      "Id": "19a20639b1d34ae1a39810a0c1d410ed",
      "IsHidden": "False"
    },
    {
      "Start": "0a9ddb6b884041c284a279cba83e3683",
      "End": "636687509236438d92ec4828f644b5fc",
      "Id": "7fca806741a340e0bc9a9daf48e9f618",
      "IsHidden": "False"
    },
    {
      "Start": "49f42b4b32344c50bde4e5ca37dc654a",
      "End": "bf627554ae69434dab39c9bfd06edd43",
      "Id": "3273a0df725e475380a376716e8144ec",
      "IsHidden": "False"
    },
    {
      "Start": "057392beab0b4137a2265159af86c2c4",
      "End": "2773e4e2a437442397be8eae7632429e",
      "Id": "52bfbd6933fe4fd5859c8320aefd194d",
      "IsHidden": "False"
    },
    {
      "Start": "a68b2218869845f0a87979d1211c0c33",
      "End": "1d45780aa3d8456e9096ef5b01912768",
      "Id": "ce3c25943e95497ca2b9b2226f96dbc9",
      "IsHidden": "False"
    },
    {
      "Start": "48296c733123470a8e3f7b7db74504b9",
      "End": "ed885a1c3b9146b887f9963abf031bf3",
      "Id": "943df8d6c74d488096e7a30f791c1ca8",
      "IsHidden": "False"
    },
    {
      "Start": "7391858405e64a2e92fad5367b8747ab",
      "End": "81813c4845544e4cbb5a7801087661f5",
      "Id": "545933a6e6b64602912db9540ade0db5",
      "IsHidden": "False"
    },
    {
      "Start": "4e884e895df745e6a8914c1924b34a34",
      "End": "095a05563adc44b097691b52b8a39bc1",
      "Id": "127caf17018f42deb64244e261a4996c",
      "IsHidden": "False"
    },
    {
      "Start": "4e1be8effc0a4027950bdfe6a0890683",
      "End": "80af7af84181418585f2248c14e3c51e",
      "Id": "aaa3bb6cb4b74021b71a7546e4844796",
      "IsHidden": "False"
    },
    {
      "Start": "4b342c75cd2349cb811b0e8c5b6a5291",
      "End": "cd1297acf76b4029b84c1ee562b9c4b3",
      "Id": "643e08cb280a461390d93b70bfba5326",
      "IsHidden": "False"
    },
    {
      "Start": "e35b1a1bdab145f7a35035d0540161be",
      "End": "236c3089822947e4b17b1b3bed701218",
      "Id": "765efdc434f34c02955cc397b6b32ae5",
      "IsHidden": "False"
    },
    {
      "Start": "66b3c5cb81bb4e61b4a327c50342ca19",
      "End": "20105d53dcef4aec968222085a020d22",
      "Id": "3d1d0204eb514876bb1b1089bdf9c412",
      "IsHidden": "False"
    },
    {
      "Start": "55a9ebd09d4449eaa519041e317abb3b",
      "End": "06319654592a45a480e7bff5f9c7a561",
      "Id": "216ede154897479bbacef41de03317b6",
      "IsHidden": "False"
    },
    {
      "Start": "15a6ec0821df4fb9a01e55172cace006",
      "End": "08478300c8834e499ecdd894f12c6486",
      "Id": "9b1bf2dae9dd476284768a58573f94c7",
      "IsHidden": "False"
    },
    {
      "Start": "7ffc9f91205f48619b4231004110d8bf",
      "End": "4ba442aed1824990b3d7f2e263beeaa8",
      "Id": "e68ea1868793437da99f3fccddba2df9",
      "IsHidden": "False"
    },
    {
      "Start": "6e7507a77cce4a608d0818eab3123f2a",
      "End": "93ccb4746ee4422d8338ba5d76bf0464",
      "Id": "811657aa76c4416bb24c8fca47bfffe8",
      "IsHidden": "False"
    },
    {
      "Start": "c6cc3994a16244a6895e00e466ec7425",
      "End": "8457b58e177a4f44829f3f76da3f479b",
      "Id": "52e298e29c3a48f5ba9ae06fa9fbb750",
      "IsHidden": "False"
    },
    {
      "Start": "19bd73942c5d42768042a40d39096475",
      "End": "fd993f481334418aaf933cbf058a39f8",
      "Id": "cd8cccabb3194ddc85932647e8240a43",
      "IsHidden": "False"
    },
    {
      "Start": "19bd73942c5d42768042a40d39096475",
      "End": "608fdcf27e4748dd8b89a830e6747f61",
      "Id": "2d870eb9afa74b0b97f128a8a6ddd6c2",
      "IsHidden": "False"
    },
    {
      "Start": "fcbaf17dbc3040748f5962afadd4cf22",
      "End": "212e38d914e54892b9d2636fcc16d418",
      "Id": "885e42707b184b658a7f75bb2dc000fd",
      "IsHidden": "False"
    },
    {
      "Start": "62ef9a207cb4438298ffd437dd4a6bf3",
      "End": "040942caae55498591fca9af2f43bec5",
      "Id": "c8ad06c0e9f74d3c9dc08e7a9635088f",
      "IsHidden": "False"
    },
    {
      "Start": "a3197b277bc5402b93dbb1f75ee7c224",
      "End": "3d7adb7504374e8aa8eca02ce7841a28",
      "Id": "2f94cab5ce104c888c423d03246cec07",
      "IsHidden": "False"
    },
    {
      "Start": "d959b36f81664ebaa2ba6f7456b6106e",
      "End": "e49a1bd568aa4c38aa9ff883d70b0a90",
      "Id": "db0631970ea9486ebc5ad56b6322b3b7",
      "IsHidden": "False"
    },
    {
      "Start": "0a42077491bf4668b712f948139e635d",
      "End": "b179c95784094d37935d2692692a59ad",
      "Id": "274707991f284782bcffcb14cdb5a62d",
      "IsHidden": "False"
    },
    {
      "Start": "748449d302554bb4b0e24edab00d6986",
      "End": "d6a6e8177a304b39af51c79c153c768b",
      "Id": "f93825651a6a4b06b2b7b5d9486bf9db",
      "IsHidden": "False"
    },
    {
      "Start": "4cce0208d3784342a15dcce9709135f6",
      "End": "c741448f5eec44dabe3d279e58732fe0",
      "Id": "2ce4914c7a354441a399dac644472924",
      "IsHidden": "False"
    },
    {
      "Start": "d3d38ece79ff486f8e73cf266da6e591",
      "End": "078264328d8e431f8abc1b89801fb013",
      "Id": "6823fb45ce25475d87587ec23bcf7111",
      "IsHidden": "False"
    },
    {
      "Start": "d3d38ece79ff486f8e73cf266da6e591",
      "End": "97274d25593e4e41beea834945bb37d9",
      "Id": "c6032e4a652a4367bc1ff8dd25e54654",
      "IsHidden": "False"
    },
    {
      "Start": "877e86a64e38427cb80242ca1fffe34e",
      "End": "4848e3fdf30f4d0a84d78b8fd41fd0d0",
      "Id": "2f808bed916942a6952e691a5f6dc8a4",
      "IsHidden": "False"
    },
    {
      "Start": "fae154c0fba6491c932a0d3eaddb3fd7",
      "End": "d8bf873c53c14477a8d3d9637bf41663",
      "Id": "411f84151ec147dfac80e0fe6c96bab7",
      "IsHidden": "False"
    },
    {
      "Start": "b2f641574e844b3eae0cc7e7bb3dbd9b",
      "End": "a1c7db1eddba4598bc73dd16aff0277f",
      "Id": "8fbabd2fb836411f99b947504588a426",
      "IsHidden": "False"
    },
    {
      "Start": "1f1ad64537264ad8bd7eb3ff36fec28d",
      "End": "51afedb834734b1ab2bcfb340d175c22",
      "Id": "9ea232e863bf4bd58eb8f54d9ccdadde",
      "IsHidden": "False"
    },
    {
      "Start": "cd667f26794243e0af864a0019ac9dea",
      "End": "2e8784b6c39e4887962edc235d7ba893",
      "Id": "716cea73b84049398c7fa6f9651305d9",
      "IsHidden": "False"
    },
    {
      "Start": "cd667f26794243e0af864a0019ac9dea",
      "End": "2272870cd01a4793b3d8c0b8b75eb128",
      "Id": "d9146dd43726477cb710a49560aa92a7",
      "IsHidden": "False"
    },
    {
      "Start": "aad520a4eb034d32a5224a0093dbfc00",
      "End": "9d422a6161964c97a390122d01d76f87",
      "Id": "5260e200dbcc4bc2a55c84161a748b74",
      "IsHidden": "False"
    },
    {
      "Start": "aad520a4eb034d32a5224a0093dbfc00",
      "End": "6f0f7e6842574cc188c40cf6d6390137",
      "Id": "7edc923c61f542a3964264ba546c2130",
      "IsHidden": "False"
    },
    {
      "Start": "ae8ccf6f222e4d48b56d46db807f3aee",
      "End": "4ed1d60778104328a9fb49a5299d8bd7",
      "Id": "ea0b295ea0cc49bb911c80534324a301",
      "IsHidden": "False"
    },
    {
      "Start": "ae8ccf6f222e4d48b56d46db807f3aee",
      "End": "1d6db2716afe4042a85f211ab61ba9d0",
      "Id": "13acea4b148547c58bb5885312b83bc8",
      "IsHidden": "False"
    },
    {
      "Start": "c0f0c00fee4d4ab1a4b4996497fa91b2",
      "End": "5aac6dbafca54b24ae8a3a8d3ffa2219",
      "Id": "965cd4df4d3a4f29992c6160c734cfd9",
      "IsHidden": "False"
    },
    {
      "Start": "e7578cedf39e45f8ab8d4ce4c5de92e7",
      "End": "6ff12be6c5c6472cb85d7fd175e70b70",
      "Id": "89341facedeb43238ac6cc32259147f0",
      "IsHidden": "False"
    },
    {
      "Start": "5c17171154ac46cc8f187bc7ce4783e8",
      "End": "69301d52100943c88ebd27dbe5bdf12e",
      "Id": "1159cf12d7b94e5592616bd06052c0a6",
      "IsHidden": "False"
    },
    {
      "Start": "eec65d648ef344748e9900ae188635e4",
      "End": "4e22ad7bd1ba4f5ba45ced18b3f25d5e",
      "Id": "02401043566442a3a8bb0093e176efc0",
      "IsHidden": "False"
    },
    {
      "Start": "569b03737b3d403bbe02305ff283db4f",
      "End": "7137914ad6b4477391291c98e36d7cd3",
      "Id": "4a644b14e3da4f56bec9d85660d5008c",
      "IsHidden": "False"
    },
    {
      "Start": "569b03737b3d403bbe02305ff283db4f",
      "End": "fe58499933134f32a862eae4fc23f056",
      "Id": "8ad10f349a364185b9c43bab83edb170",
      "IsHidden": "False"
    },
    {
      "Start": "36cc22e7fe85441ba7a2856bf17fcde5",
      "End": "2ccbbffc5570423a9a05c5f9dbb6c6fe",
      "Id": "cc8316946f66401492dd4244141f41c1",
      "IsHidden": "False"
    },
    {
      "Start": "044bc396ef944051a56665cc7c844ada",
      "End": "7bd000e3d312438db8c0332be293b9cc",
      "Id": "c148a59199064dcc968087b28b91d2c4",
      "IsHidden": "False"
    },
    {
      "Start": "bffcd32773d74039b297e3ec6a858459",
      "End": "5e35464879314fc4b80e4570fea196e4",
      "Id": "45f0e88195ec4c3eac3a5b0083ad9b88",
      "IsHidden": "False"
    },
    {
      "Start": "43369eaf5a6642aaafb6d680a68694ac",
      "End": "74cdf1bb841c47c19527d880ff7e6e38",
      "Id": "36c23ff668fd46979797ede648fd4f00",
      "IsHidden": "False"
    },
    {
      "Start": "0f37e3aa1fb84241a3303bd6053b2eda",
      "End": "483332ce7fde411a9049e5d9d798f295",
      "Id": "7b1609b859b24c0f9774cc58d580f4dd",
      "IsHidden": "False"
    },
    {
      "Start": "7dfb0c307b2e4b57b4da45f23a8ec2d3",
      "End": "f1e7021d5ae540a8bf932cbe7f00737b",
      "Id": "6e0e2534033b4c09b08dd0c34a574b4f",
      "IsHidden": "False"
    },
    {
      "Start": "4b4e07ee2ef54ec7a225b9e6eaf98291",
      "End": "9cb20214084845e7904ac4686c930474",
      "Id": "cf7db97448bc407d884b0b131b116e30",
      "IsHidden": "False"
    },
    {
      "Start": "26f6f5841b7d48a181547e09c7a41082",
      "End": "41da2998995542af89c01f5b29090d6c",
      "Id": "314dbfb7e33d4126b960a09c6ddb8be7",
      "IsHidden": "False"
    },
    {
      "Start": "3cd19a9495684367b296fdd6bcaa0ead",
      "End": "bd316c2c467c4b278d3ae59eeac5433c",
      "Id": "7fe88c47c7f04c68a2c5a458e12c99d2",
      "IsHidden": "False"
    },
    {
      "Start": "be63f52c4dcd473c9146b2b87678118a",
      "End": "18cd0851f95140169aa207b014c82981",
      "Id": "96b3cad8507940bcb97a7f71da844928",
      "IsHidden": "False"
    },
    {
      "Start": "6ae9c00412f2481aa664a955f0538493",
      "End": "78f2b78c2fd64d68810bfe895193e0d4",
      "Id": "73f5eca9561a48929fcbfc41dc10c57d",
      "IsHidden": "False"
    },
    {
      "Start": "4049bc69a0ab4b44885824ecb56aee82",
      "End": "af022f0ff9bb477ea5e083a5a165ca7b",
      "Id": "6c5a0f912235413bb71d32a4b6abf2f8",
      "IsHidden": "False"
    },
    {
      "Start": "22f206fedca04f4f9c80d15c602594d4",
      "End": "8130e329c44742c0a90c79961223c613",
      "Id": "8d0c27a6f1b64e8f89c1f557b8341672",
      "IsHidden": "False"
    },
    {
      "Start": "38e0c652427e40abb5457cd023302aad",
      "End": "e33075427c7f40838c30e1e6fc0c6441",
      "Id": "c8783415668744fca6ddf26c87820f04",
      "IsHidden": "False"
    },
    {
      "Start": "fd67ff9dd773405da337cf90ada2955b",
      "End": "019e2c20ac724ea2abad6f7f741d6e0e",
      "Id": "59cacf772d4b44f3bf35e4342cd811a9",
      "IsHidden": "False"
    },
    {
      "Start": "fd67ff9dd773405da337cf90ada2955b",
      "End": "c9d4339be75145fba2c1c030728494d0",
      "Id": "718d69424e0e4a82817da71178c98929",
      "IsHidden": "False"
    },
    {
      "Start": "fd67ff9dd773405da337cf90ada2955b",
      "End": "9f121d2b056445babf2f7eea451608a4",
      "Id": "9b20f7d9e6474da1bc97c307f3c9e791",
      "IsHidden": "False"
    },
    {
      "Start": "793a14977e584dbdad68cf7ea17b3ecf",
      "End": "244fd5438635439fb1e94b3d64a27df8",
      "Id": "80d162ee406848ba85f52b6cdeee18cc",
      "IsHidden": "False"
    },
    {
      "Start": "f78d60fbd7e44a78923437509bc7a752",
      "End": "9b7aec75a01b44c5a621e2bba91604e3",
      "Id": "ebe448dbcd1f42ebaa679a8645a5dfaf",
      "IsHidden": "False"
    },
    {
      "Start": "a3207e119a6749f6a94d283924046639",
      "End": "8cd411df1a324d049e491e12f251ba27",
      "Id": "1566481d28cf42d3ad26c43a73e90f5a",
      "IsHidden": "False"
    },
    {
      "Start": "0e4f5bd8a044478e91e84000c02ad4a2",
      "End": "32db1f745d5a42098c36bf8bc4f4f3e3",
      "Id": "22b5b1e024674eea9409e8850031053d",
      "IsHidden": "False"
    },
    {
      "Start": "4e221a4eb7564ab58bf0c27a8a534b42",
      "End": "eea8144c089f4c50bd38183d5fea4a61",
      "Id": "9e8af4eb84c846449e357f9438756873",
      "IsHidden": "False"
    },
    {
      "Start": "9e8f42d3646b47658cc31564930abc75",
      "End": "bf145dceb9b446cbac9a9e0755a59e0b",
      "Id": "1c8bc28cd21647b8b882238b5bc94749",
      "IsHidden": "False"
    },
    {
      "Start": "01561d2c94a64cb381a0d7e89fb64e09",
      "End": "14876fad140e4be2b0c9997c851a9cda",
      "Id": "d34d20f7545f46bfa4c233789d1b6f77",
      "IsHidden": "False"
    },
    {
      "Start": "36a0ebbb6bff47e8925b3f5c8feb9e84",
      "End": "b50778f6f31c493f92dab14b3dc0c113",
      "Id": "fae228785e0d4f6d82be9655f568b645",
      "IsHidden": "False"
    },
    {
      "Start": "518755c56aa44d84b35d6e1c89337802",
      "End": "540944de518b42e7aac22194feeb718a",
      "Id": "8e58dbb11b8d4f9d9e26b556f70fe235",
      "IsHidden": "False"
    },
    {
      "Start": "e86d0abf35f6450c99374b1f99a21997",
      "End": "8d0eebfe60574370ae515f1ba05c80a4",
      "Id": "c6e7d8f7d4e644b2b1783c08db9ba898",
      "IsHidden": "False"
    },
    {
      "Start": "5c2a21a0b523483fad85b703d478157d",
      "End": "90df96e059a646d1be9790398780185d",
      "Id": "bd9baf6e02604614b0b42ebbb32b4e27",
      "IsHidden": "False"
    },
    {
      "Start": "5c2a21a0b523483fad85b703d478157d",
      "End": "af848ffa245746d48084600b48ea34dc",
      "Id": "e9a1366cf27848319029bf6b2f5a9a31",
      "IsHidden": "False"
    },
    {
      "Start": "e7d002bf21804002b5171fe85daa6337",
      "End": "c35f71fdea7f42b7a95dc5339e7b3afd",
      "Id": "078fbb3ba0934d11a07eec430e5602ab",
      "IsHidden": "False"
    },
    {
      "Start": "9ff08be627e04770823bd5e967370a8b",
      "End": "0bfa1da1c2b84cbb8fd21690f5cae6ee",
      "Id": "71f17e19fd8e4a8daf88492a447f1e84",
      "IsHidden": "False"
    },
    {
      "Start": "3f093dc379024034ac9cb4b276a5cf55",
      "End": "6b7fb35c479d4235b1acde2807e7e100",
      "Id": "f2e32d1983934ba89e77518036c3cc1d",
      "IsHidden": "False"
    },
    {
      "Start": "3f093dc379024034ac9cb4b276a5cf55",
      "End": "ac945d63f7c9434bb1b958c2b8e229ae",
      "Id": "658f6b0761ab49ef92b70917088488e0",
      "IsHidden": "False"
    },
    {
      "Start": "a74fbaedf9a644abb1949a1d0aac5d76",
      "End": "8062f6afb77a4c25930288631880bfa6",
      "Id": "d755cb8e1a3347f6b8b2798261096e38",
      "IsHidden": "False"
    },
    {
      "Start": "a0c2ce688532419187a4c26e1b798be4",
      "End": "443d2f54464a40adb1c4835bea3b21b4",
      "Id": "438e53931cb94051a0924dc9be4f3b84",
      "IsHidden": "False"
    },
    {
      "Start": "5309068fb0034f95966cdda5561e3990",
      "End": "3ddf3c3adbc44949bc51dcf10657ef9c",
      "Id": "b9baab71a8394e4eb90611076095b4bf",
      "IsHidden": "False"
    },
    {
      "Start": "610e397d28b74a668095d669e373d762",
      "End": "3827de4c72f74be3bfa843077f337a03",
      "Id": "2a64639fe51e4c14952c88ba0faddb04",
      "IsHidden": "False"
    },
    {
      "Start": "610e397d28b74a668095d669e373d762",
      "End": "cb7f06abf91e4260b2afd176135b8014",
      "Id": "00114193c953475e95897d097e77789d",
      "IsHidden": "False"
    },
    {
      "Start": "610e397d28b74a668095d669e373d762",
      "End": "5078c1dbf662452996a6c1fff66516e0",
      "Id": "a58ffc99033a4deda769dda46cfccb93",
      "IsHidden": "False"
    },
    {
      "Start": "4cfff3b5319d4f3785c0ffc6ccca1170",
      "End": "0c0e09e49fea46f996758eb4935d1c9a",
      "Id": "bb311df92f9d4ccb99ddbd2ea79f1af6",
      "IsHidden": "False"
    },
    {
      "Start": "75578660a1b749a1a1767c86831dac69",
      "End": "5e39b697937d4a009c28715efacd1240",
      "Id": "ac9ff4d31df54e8885d34878d4dde569",
      "IsHidden": "False"
    },
    {
      "Start": "a7ef5c96fabe40e383268013a0d62035",
      "End": "2e55ecf4fcc647f8970e3afea2be10a4",
      "Id": "4ba9c109e6bd4ee6b50546413ce1bcac",
      "IsHidden": "False"
    },
    {
      "Start": "a7ef5c96fabe40e383268013a0d62035",
      "End": "38274f9ed78641ef8fef63667a5d54ca",
      "Id": "7e6db86d5bb140f2a6311e08d61e44e2",
      "IsHidden": "False"
    },
    {
      "Start": "b88352eda91e497f8fbe2157105efb9e",
      "End": "3d71910c9722499bb54d01f855d66c15",
      "Id": "6b4a194c21334f7eaf5a79246258d3d7",
      "IsHidden": "False"
    },
    {
      "Start": "713f13d88d1545da8eba852a5966b19d",
      "End": "e592d6ff1de3438ba32538143343121d",
      "Id": "834e1e6e06724e28a351a3494e9162e9",
      "IsHidden": "False"
    },
    {
      "Start": "f9fad45792e44327a13c3fec8c7da85f",
      "End": "82c65d3ac3684141a5357a22e7a92f88",
      "Id": "24ae8af692dc4fdd878de7175f1efc80",
      "IsHidden": "False"
    },
    {
      "Start": "354c2901579e428ba7c01271b58ccbbd",
      "End": "eeca0469d0cc457db5093ec5b4b44309",
      "Id": "9fc3242ba21b4aa899721dc30945bf5d",
      "IsHidden": "False"
    },
    {
      "Start": "be9d22afe9d443d9875951c950e46571",
      "End": "f9708012e79d4b13929e6496e5753d28",
      "Id": "11d61930c8c848d9a8942bb068a34736",
      "IsHidden": "False"
    },
    {
      "Start": "6fd7387be75047f1a2e713465720cdaf",
      "End": "9c2daeee41b74bde8c99f0558ab92e0e",
      "Id": "883aa64447794670b813eb55d414a863",
      "IsHidden": "False"
    },
    {
      "Start": "b027f5bc236046268898cdadf1922777",
      "End": "5335dbd6bf38411495eb5af35214d3cc",
      "Id": "6798747d8dbd4dba9580f916ff17fbc5",
      "IsHidden": "False"
    },
    {
      "Start": "c9a25613063f493abc7ef3a70d98047d",
      "End": "ba560cae8aae48a9af27e82cd2dca5d0",
      "Id": "3489c57cd079422481fe3981f9d3054b",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "2f56d88b-a263-45de-b9e5-e074dbe52635",
    "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
    "65f93a80-674c-4a98-9d0c-db3a138287e5"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.6.0",
      "ReferenceType": "Package",
      "Nodes": [
        "4dcd509eac854c0c88652b4484ac1ec0",
        "d507a004d281466da24fd924a2580ff6"
      ]
    },
    {
      "Name": "spring nodes",
      "Version": "210.1.1",
      "ReferenceType": "Package",
      "Nodes": [
        "983a564b40a44f0c938ec66bce1f6983",
        "b7e1e0903a98407486086761527fac22"
      ]
    },
    {
      "Name": "Rhythm",
      "Version": "2023.9.1",
      "ReferenceType": "Package",
      "Nodes": [
        "3851bbc432044831bbd87b451405781f"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 43.417026519775391,
      "EyeY": 29.100912094116211,
      "EyeZ": -9.529749870300293,
      "LookX": 0.79330062866210938,
      "LookY": -26.0732364654541,
      "LookZ": 11.921990394592285,
      "UpX": 0.053075250238180161,
      "UpY": 0.60181629657745361,
      "UpZ": 0.79686909914016724
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "d9e4f9b5bb8748b49f845f216802a5a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14224.986279520252,
        "Y": 331.71678422068953
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": true,
        "Id": "4dcd509eac854c0c88652b4484ac1ec0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 14510.538672898152,
        "Y": 48.717528946829361
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "21e8ead88cdf4caea2a9a5ed0c0e7c65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13756.399129544421,
        "Y": -71.6823626520395
      },
      {
        "Name": "String.Insert",
        "ShowGeometry": true,
        "Id": "fd0911cb4946422fbc2ccad432272d07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13339.818439308176,
        "Y": 137.99375934214822
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e15f732335ca4d8db2046b4642688eea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13013.183593445076,
        "Y": 264.26307642470056
      },
      {
        "Name": "Door / Window Location",
        "ShowGeometry": true,
        "Id": "d7766b9b1b7d4c1da722fc4ae8ad2c13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12983.073704863617,
        "Y": 551.45227275109983
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "6f2aaa4b36e94c4d856c1483faf787f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12926.816469214682,
        "Y": -126.84521886829612
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "c7df159e9a224864acef4e56c36bc179",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12790.689437134164,
        "Y": 412.70266237614715
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0c3112cef80a48dfb15a922ff15db639",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12710.507671804231,
        "Y": 163.54192069282431
      },
      {
        "Name": "ꟿ Feet.ToFraction",
        "ShowGeometry": true,
        "Id": "983a564b40a44f0c938ec66bce1f6983",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4176.6353495013882,
        "Y": -251.51125383223479
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "37191c85b2854318aff6857d8a567ae5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2668.06699219335,
        "Y": 1076.4778299993036
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "3851bbc432044831bbd87b451405781f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2833.4660145106709,
        "Y": 159.21467975413077
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "fd93024517d84d1a9166f5f0b0ab9e42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6102.661051256272,
        "Y": -589.86370309131155
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "689d662f75fa487cae413710698642ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6312.6546224127214,
        "Y": -879.18459247437659
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "0795882a4a564a33b3d5939b719d600d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6099.8176047976012,
        "Y": -1148.5928838528266
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "0db0bc0f4e1b4659a9978304a90231e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4163.4772834554078,
        "Y": 272.17349704227473
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "d6993c0a65444b70b305315bdabbdf76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3833.5178830190466,
        "Y": 664.79617976327222
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "bd08ca69dcd343fb84f92ce2f148eedd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4559.8848829612234,
        "Y": 204.86155612591898
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "d86e2be241494d17b094e850b8661ddf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5915.3550276619726,
        "Y": 1277.398754729169
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "843c9429d60548e2a87f50b35990b644",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8398.0474278296024,
        "Y": 80.494623793506122
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "cba8b57bfb264143a1921d8a470615b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8405.9553038878967,
        "Y": 526.16060664809709
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "a0267fc99af54bdf8d42cb83f51670f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8680.2157030697927,
        "Y": 18.521075911246925
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "270b6a1ccdf048578d915ce0d1cbbb88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8689.4233679587251,
        "Y": 623.66464676948362
      },
      {
        "Name": "List.SortByKey",
        "ShowGeometry": true,
        "Id": "eb3cb514c8dd41f6ab8ca1b7e8a19635",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8970.5054332064374,
        "Y": 361.27459504893278
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "4a0483f237344627bb573921a82131ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6614.8211893032058,
        "Y": -890.09041970514522
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "456a952e23504bbc96b817b965bb650f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3777.0755400135754,
        "Y": 356.73734085332893
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "7db689a447a74142b9383e83ca457500",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3352.2749696904652,
        "Y": 654.98120073527184
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "46e09ad4f850420da36968292bd49f60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3371.2610045157853,
        "Y": 417.56843357426368
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "667de9256ce04e9f950083778e7f89c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4925.2308753775669,
        "Y": -234.53172803476502
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "49756c7ff015452fb37936d081c3d4c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6937.7815327872313,
        "Y": -1215.6181345214466
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "829ca92ad7a048f0835db3589e5287b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6939.1088654475216,
        "Y": -715.6678670326296
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "8e1af4950cff4768ab378273c7f216d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6955.3186556381916,
        "Y": -953.81373948539658
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "d812545d856246948da09ceb7d629873",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6960.5965679164819,
        "Y": -469.00331083330855
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "c7890b84017d40e8b0b498c3dfce5cd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7612.6783526583713,
        "Y": -1169.7112684151866
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c088e4ebe6aa4a9f9c91b05b8435b091",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7351.810758570602,
        "Y": -1025.3656192060866
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "c9605302d3124e51996a4d881634ef7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7625.2555965529618,
        "Y": -708.52684767906658
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "08b97b7e6465456987a7097d7e66c5eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7315.9681193150518,
        "Y": -613.81311423310558
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "044c64326cc44b07bd43bd414b9ffda7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5984.786299618866,
        "Y": 903.19061302946307
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "e5d138f4aa304b0eafa8d30157d4c315",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6886.1487566664364,
        "Y": 322.33785089168009
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "6dbf244f907042bea6ea47e71ae75225",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6524.8364019955861,
        "Y": 480.5415990696099
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "6a481a593dcd4ca79664dbcf410c1ccb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6049.8786396562164,
        "Y": 614.98332741025183
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "6b0f02a662da4688bde83a382b932e98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6296.9633691786357,
        "Y": 856.23291857306117
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "28bc997f22e8463cafae02a7bcf35a56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5924.2770839164623,
        "Y": 341.31253020376721
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "8425291e46bf402dbebf1920ab4272df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5860.5093817925681,
        "Y": 65.325142839983755
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "b6b062e7c4824e2eaeea34cb90bb266b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6152.69325516949,
        "Y": 261.60306872322366
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "af68dd3ecad047daa2ff31de8172ac4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6383.9265469797929,
        "Y": 143.49819040507759
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "49ea0f9ae3994dea9cd29c8b87a29003",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7535.5757977740959,
        "Y": -130.59851725201202
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "9badc21f05d440c19a07c0608135df77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7944.9031393469058,
        "Y": -106.60261426101192
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "aa7040d486d64df78c3d7c5f5be9ebe6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6885.4168652456865,
        "Y": 83.335459511378986
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "c4e90a70159e4f2891ff86cc520d6f03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6872.6300534167158,
        "Y": 842.54713752373914
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "aaad4c090eaa42ddab8bc5ab190073b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6865.9137504680657,
        "Y": -162.94022243691393
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "f024b0ffd0604e5188b8ee2fe9b346fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7155.3058101686956,
        "Y": -44.385977623875988
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "52178867440848399e5d11fbaa772a00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7256.1783720111862,
        "Y": 95.039826816563391
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "3d309a5d21c74032a93c472c563a99e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7476.6072977284957,
        "Y": 18.965440463035975
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "b4684253a14646de9511b30bce962d0c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7126.5878087564561,
        "Y": 739.160860205533
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "d83b0a0bfedc494b98e380f2f131a65f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7141.7590393181263,
        "Y": 872.02647379424
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "8916cf157af4470ea19d8376e696f09d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7444.5284580718362,
        "Y": 749.64106726106888
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "333c96fe3b9e4c47b7233bccebff0d8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7688.695056718856,
        "Y": 632.12523821052991
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "c0d8beca8d6b4fa695706ecdbd19168b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7942.304938006976,
        "Y": 676.87458086720994
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "9bde6fedd1bc4dc1803bbc19aaeb9ebb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6882.1217927116259,
        "Y": 610.5245270785399
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "49d6b2ae66754a359d92938d803efa03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6897.7591280021461,
        "Y": 479.36604083527891
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "a5aa0956349b40129efa17660320e6d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7158.2435324400658,
        "Y": 326.73351227646003
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "bd7cbbfb898d4b05a9b65324bf8791b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7156.8318447982665,
        "Y": 503.69100864904703
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "560115e793a14a969560dbf49fba58fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7341.665725963936,
        "Y": 287.231321512892
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "19a4318ed7454aabb72a37c18f3cd0c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7246.6344013874714,
        "Y": 1324.7338511304522
      },
      {
        "Name": "-",
        "ShowGeometry": true,
        "Id": "ec758926060547fe8c97d76962181d19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7544.47913339588,
        "Y": 1324.4792324754651
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bf06dd6f73ee4c38a38277b3108bd92a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7586.5088394845952,
        "Y": 1528.3077927371075
      },
      {
        "Name": "String.Remove",
        "ShowGeometry": true,
        "Id": "6186ea8e736b4ca38d54c76266c6f8f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7918.3768073343153,
        "Y": 1270.9124571475982
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "0198324a17ea4be1b7f46509443136d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6269.6837118445374,
        "Y": 1201.6510293362658
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "0278b3f3e781490986b38fce924ede68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9163.461150619105,
        "Y": 98.328900761491155
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "c6350bab6b38422483d2b787e29bcad7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9239.4359204245138,
        "Y": 472.70942605205641
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "d8fec8710282439598afef4eb4072b79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9408.422622514805,
        "Y": 289.32098543831432
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "c281c4611d784e3cb1e733f2a8834a8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9642.4468067829512,
        "Y": 74.5421921086265
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "bfb2a30ee2cd4129b262248525820316",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9473.9615627570583,
        "Y": 812.76600166061837
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "7c125ad03e344dc6b0cf2502d7f7349f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9550.08387504052,
        "Y": 660.82170893304169
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "aa4a7427c3564fc5b21360e3b5195117",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9347.4818072658818,
        "Y": 652.52562386256272
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "f9eb73a5dbc143818fbfb1c6c3bab8ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9322.5707690523777,
        "Y": 864.65318921241715
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ad1f5587252045bc908bb38b7e35869b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6569.5387277409982,
        "Y": 1515.8824179521282
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d87a591ae85c412ea7828b55b7e1145e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6566.5088125931961,
        "Y": 1385.0682762356655
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "7ae992379b36456f82786552b2015caf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6902.16386554505,
        "Y": 1219.1833357713069
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "857006e5cf2d4a818c4b3e289d380fbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7873.1018642033059,
        "Y": 317.86274706006907
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "348c3ace26a24261b63fe88ab04a486b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7655.0008956114461,
        "Y": 258.8791925534199
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "94d57164d52640c396cb4e9b4a97703f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7672.0513244506665,
        "Y": 430.44913274815394
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "e5c84ac0bc0743608c9694569cd96578",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10128.62996775749,
        "Y": -12.186508209327741
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "05887890e482411bb29350edbf13103c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10088.368316497861,
        "Y": 227.36126222560316
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "c0f355f63d1e4301a5fcabe7f516839d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9899.0018715039714,
        "Y": 669.69330162597521
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "3b394e2e5bda4223a6db01abc46234a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10224.648228015723,
        "Y": 957.77831652168038
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "c64204f4fb034328ab2cdcbd1c8bda90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10401.504335942154,
        "Y": 867.99227227617655
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "43688e1a58224dd88daee8eba221b962",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10180.530639102719,
        "Y": 501.33534637905171
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "4d32125ad0e746bd9e22785d66ef7825",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10514.44899885815,
        "Y": -171.84565277791015
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "a9634b8da5144ceeaccded9466d9f728",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10432.112876378475,
        "Y": 460.13611946852859
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8bdfef3d548e4d1d89e0111a5c60f084",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10316.069058533829,
        "Y": 180.81203804523486
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "10f98889842840bb80ded38adc612b81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10816.73221930295,
        "Y": 56.064224335406664
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "27645297301c42459f461e4c13f36ecb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10720.907294820914,
        "Y": 562.3372305899112
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "865fa3359943482a9589ae84d2a647f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11045.625426335462,
        "Y": -12.265839321514221
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "d283bd12ea8d4e5c8aee05e47f1e7187",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10946.934109482034,
        "Y": 493.88706403548122
      },
      {
        "Name": "List.SortByKey",
        "ShowGeometry": true,
        "Id": "301428e75323484eba831c9c2856edca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11383.997302226029,
        "Y": 149.13994046532713
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "82f72681fe3a46c3b9a4c73a08c1ea8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12384.560726061902,
        "Y": 175.69766606427652
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "b574c984e54f402a8eab3fea1156e0e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4349.198287842024,
        "Y": 853.9401232246239
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "094eab8be14447af8cf0606023716421",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4415.53682960488,
        "Y": 697.5728422786367
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "463caea7b718415a9dbc59924f9723e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4691.8843158989948,
        "Y": 746.913607646361
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "de69233861ad4d018d1e8ed3d1d8ee14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4951.2292278333807,
        "Y": 399.5366094019318
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "ab85cb423ecf444d93224b47ad74cf16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11998.131900939889,
        "Y": 203.80253645809589
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "88cc6ab5dc174b879ad42b908962931c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11722.55657076346,
        "Y": 519.75746516074275
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "80e2f86509ed45ca9008acb2908f26ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11738.044152804288,
        "Y": 346.18181452190487
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "cf3d2592bcc941df96a637074c278193",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5955.0688301652144,
        "Y": 1796.3840466759957
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "e66a0606b1c74ec0a15695591a8dd8db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6281.2743437163217,
        "Y": 1632.5930110281529
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "109a2b49f774472aadbbfad4b6e542b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6719.5951491921223,
        "Y": 2002.3200666498096
      },
      {
        "Name": "-",
        "ShowGeometry": true,
        "Id": "4b7d372aa1cf42e186799d3a70844542",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6800.55709506617,
        "Y": 1790.3827620376951
      },
      {
        "Name": "String.Remove",
        "ShowGeometry": true,
        "Id": "fc22477e6c4949af818fee424376d39f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7153.963081725723,
        "Y": 1738.1850284260127
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "fa7e80ba54fd43a385768e0a4943ae0a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7941.1470020480692,
        "Y": 1750.6020540948189
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e95e8d38483d4c4b95315e87d910078a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7476.090110857951,
        "Y": 1911.1736974472294
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "6506596fb1e549baa15dfb64dead94b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6515.2249403848846,
        "Y": 1888.3128125828703
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f9a9830b93ce40d38fe51ed06fc40791",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 574.0405946665154,
        "Y": 624.26767812793923
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "06af59db6d9c40c4b67526cf65dc911a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 441.16918184574479,
        "Y": 183.88373672902426
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "678c61d6f1684154b0a2ecf596bad055",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 865.1758662849636,
        "Y": -83.0198611899634
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "f30043da73f6458e9ae2fcf90d73f5b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 432.30543217266779,
        "Y": 345.30083205947085
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "3b86883c5bf04926b194ca96cacd426f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 784.31828764915838,
        "Y": 315.46662624749331
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "3278009996f1432daa41438a0c24be48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 122.31774059656595,
        "Y": 68.985140469427989
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "95ccd697c69d4670a2017b72bde77bd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -273.24434043281508,
        "Y": 286.90116059339061
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "671821d1506a4246a24798d81c5c710d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -57.909570825683659,
        "Y": 616.37081415114153
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0f4ef1c77b604421a9036159a8caeb46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -222.25507146865812,
        "Y": 765.0377437509726
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "a67438fed347417a9f68ba57fbbf3f3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2201.2936613452075,
        "Y": 18.691979440746451
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "1338ca1fe9f54b7799b79d94f6e2bf03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -529.54346296815015,
        "Y": 160.52581919631055
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "fcb343b09d344905850ca6df72f6f2dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1249.3422920805033,
        "Y": 89.557682513250455
      },
      {
        "Name": "All Family Types Of Category",
        "ShowGeometry": true,
        "Id": "d507a004d281466da24fd924a2580ff6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -938.75299027776236,
        "Y": 61.292018566766984
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "40af56b272cc41a291808a55d6e12a01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1694.835156602127,
        "Y": 652.26238990481556
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "dcd32a60f84244e3b3b0a145eccc19a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1937.0823729705894,
        "Y": 454.12093921464896
      },
      {
        "Name": "Number Slider",
        "ShowGeometry": true,
        "Id": "94810eba8b48409cacd2ccf2b46ab1b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1209.060615485846,
        "Y": 471.12717495820141
      },
      {
        "Name": "Number Slider",
        "ShowGeometry": true,
        "Id": "5d08703b244b4c869b2813824077769c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1215.3966868753635,
        "Y": 321.05419180920069
      },
      {
        "Name": "String.Substring",
        "ShowGeometry": true,
        "Id": "e09bdb5d28c04c5f98419b9299012930",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1710.2390948878995,
        "Y": 202.84389150469289
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "f9811aa23cd44203852c79a9d1ba3c62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1380.975837333451,
        "Y": -113.97381839863809
      },
      {
        "Name": "Number Slider",
        "ShowGeometry": true,
        "Id": "1c3a4abb3d1146feacb30840030a3e9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2909.4602813616807,
        "Y": -76.480437861217013
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": true,
        "Id": "fd5c2153bba9404188633f213a4af2d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3611.313169097511,
        "Y": -258.71545226504821
      },
      {
        "Name": "ꟿ Feet.ToFraction",
        "ShowGeometry": true,
        "Id": "b7e1e0903a98407486086761527fac22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3881.4365454689028,
        "Y": -248.15672196822919
      }
    ],
    "Annotations": [
      {
        "Id": "cee0bdeef1b54bf98d01f1159c8b430f",
        "Title": "' Single",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "49756c7ff015452fb37936d081c3d4c2",
          "829ca92ad7a048f0835db3589e5287b2",
          "8e1af4950cff4768ab378273c7f216d8",
          "d812545d856246948da09ceb7d629873",
          "c7890b84017d40e8b0b498c3dfce5cd2",
          "c088e4ebe6aa4a9f9c91b05b8435b091",
          "c9605302d3124e51996a4d881634ef7f",
          "08b97b7e6465456987a7097d7e66c5eb",
          "4a0483f237344627bb573921a82131ff",
          "689d662f75fa487cae413710698642ed",
          "0795882a4a564a33b3d5939b719d600d",
          "fd93024517d84d1a9166f5f0b0ab9e42"
        ],
        "HasNestedGroups": false,
        "Left": 6089.8176047976012,
        "Top": -1288.6181345214466,
        "Width": 1702.4379917553606,
        "Height": 951.614823688138,
        "FontSize": 36.0,
        "InitialTop": -1215.6181345214466,
        "InitialHeight": 891.614823688138,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8d8f49248cd043bd9334df4f1707f0b4",
        "Title": "Filtration Area",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "983a564b40a44f0c938ec66bce1f6983",
          "3851bbc432044831bbd87b451405781f",
          "0db0bc0f4e1b4659a9978304a90231e7",
          "d6993c0a65444b70b305315bdabbdf76",
          "bd08ca69dcd343fb84f92ce2f148eedd",
          "456a952e23504bbc96b817b965bb650f",
          "7db689a447a74142b9383e83ca457500",
          "46e09ad4f850420da36968292bd49f60",
          "667de9256ce04e9f950083778e7f89c6",
          "b574c984e54f402a8eab3fea1156e0e4",
          "094eab8be14447af8cf0606023716421",
          "463caea7b718415a9dbc59924f9723e0",
          "de69233861ad4d018d1e8ed3d1d8ee14",
          "1c3a4abb3d1146feacb30840030a3e9e",
          "fd5c2153bba9404188633f213a4af2d7",
          "b7e1e0903a98407486086761527fac22"
        ],
        "HasNestedGroups": false,
        "Left": 2823.4660145106709,
        "Top": -331.71545226504821,
        "Width": 2372.76321332271,
        "Height": 1317.6555754896722,
        "FontSize": 36.0,
        "InitialTop": -258.71545226504821,
        "InitialHeight": 1233.471851259389,
        "TextblockHeight": 63.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "f3914c4d99cb412fa97e7e696c9dddb2",
        "Title": "\" Double",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "aaad4c090eaa42ddab8bc5ab190073b8",
          "c4e90a70159e4f2891ff86cc520d6f03",
          "aa7040d486d64df78c3d7c5f5be9ebe6",
          "9badc21f05d440c19a07c0608135df77",
          "49ea0f9ae3994dea9cd29c8b87a29003",
          "af68dd3ecad047daa2ff31de8172ac4c",
          "b6b062e7c4824e2eaeea34cb90bb266b",
          "8425291e46bf402dbebf1920ab4272df",
          "28bc997f22e8463cafae02a7bcf35a56",
          "6b0f02a662da4688bde83a382b932e98",
          "6a481a593dcd4ca79664dbcf410c1ccb",
          "6dbf244f907042bea6ea47e71ae75225",
          "e5d138f4aa304b0eafa8d30157d4c315",
          "044c64326cc44b07bd43bd414b9ffda7",
          "3d309a5d21c74032a93c472c563a99e5",
          "52178867440848399e5d11fbaa772a00",
          "f024b0ffd0604e5188b8ee2fe9b346fc",
          "c0d8beca8d6b4fa695706ecdbd19168b",
          "8916cf157af4470ea19d8376e696f09d",
          "d83b0a0bfedc494b98e380f2f131a65f",
          "b4684253a14646de9511b30bce962d0c",
          "333c96fe3b9e4c47b7233bccebff0d8c",
          "9bde6fedd1bc4dc1803bbc19aaeb9ebb",
          "49d6b2ae66754a359d92938d803efa03",
          "a5aa0956349b40129efa17660320e6d5",
          "bd7cbbfb898d4b05a9b65324bf8791b0",
          "560115e793a14a969560dbf49fba58fe",
          "857006e5cf2d4a818c4b3e289d380fbb",
          "348c3ace26a24261b63fe88ab04a486b",
          "94d57164d52640c396cb4e9b4a97703f"
        ],
        "HasNestedGroups": false,
        "Left": 5850.5093817925681,
        "Top": -235.94022243691393,
        "Width": 2266.5924824107378,
        "Height": 1271.130835466377,
        "FontSize": 36.0,
        "InitialTop": -162.94022243691393,
        "InitialHeight": 1211.130835466377,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "66747eb191184a2cb8bafa09dd179c60",
        "Title": "Fraction",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d86e2be241494d17b094e850b8661ddf",
          "19a4318ed7454aabb72a37c18f3cd0c8",
          "ec758926060547fe8c97d76962181d19",
          "bf06dd6f73ee4c38a38277b3108bd92a",
          "6186ea8e736b4ca38d54c76266c6f8f6",
          "d87a591ae85c412ea7828b55b7e1145e",
          "7ae992379b36456f82786552b2015caf",
          "0198324a17ea4be1b7f46509443136d9",
          "ad1f5587252045bc908bb38b7e35869b",
          "cf3d2592bcc941df96a637074c278193",
          "e66a0606b1c74ec0a15695591a8dd8db",
          "4b7d372aa1cf42e186799d3a70844542",
          "109a2b49f774472aadbbfad4b6e542b5",
          "fc22477e6c4949af818fee424376d39f",
          "fa7e80ba54fd43a385768e0a4943ae0a",
          "e95e8d38483d4c4b95315e87d910078a",
          "6506596fb1e549baa15dfb64dead94b0"
        ],
        "HasNestedGroups": false,
        "Left": 5905.3550276619726,
        "Top": 1128.6510293362658,
        "Width": 2249.0217796723427,
        "Height": 1015.6690373135439,
        "FontSize": 36.0,
        "InitialTop": 1201.6510293362658,
        "InitialHeight": 945.66903731354387,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8835d7063c3c4e478ed693d14e12dc60",
        "Title": "After Rename",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "843c9429d60548e2a87f50b35990b644",
          "cba8b57bfb264143a1921d8a470615b0",
          "a0267fc99af54bdf8d42cb83f51670f1",
          "270b6a1ccdf048578d915ce0d1cbbb88",
          "eb3cb514c8dd41f6ab8ca1b7e8a19635",
          "0278b3f3e781490986b38fce924ede68",
          "c6350bab6b38422483d2b787e29bcad7",
          "d8fec8710282439598afef4eb4072b79",
          "c281c4611d784e3cb1e733f2a8834a8d",
          "bfb2a30ee2cd4129b262248525820316",
          "7c125ad03e344dc6b0cf2502d7f7349f",
          "aa4a7427c3564fc5b21360e3b5195117",
          "f9eb73a5dbc143818fbfb1c6c3bab8ae",
          "e5c84ac0bc0743608c9694569cd96578",
          "05887890e482411bb29350edbf13103c",
          "c0f355f63d1e4301a5fcabe7f516839d",
          "3b394e2e5bda4223a6db01abc46234a4",
          "c64204f4fb034328ab2cdcbd1c8bda90",
          "43688e1a58224dd88daee8eba221b962",
          "4d32125ad0e746bd9e22785d66ef7825",
          "a9634b8da5144ceeaccded9466d9f728",
          "8bdfef3d548e4d1d89e0111a5c60f084",
          "27645297301c42459f461e4c13f36ecb",
          "10f98889842840bb80ded38adc612b81",
          "865fa3359943482a9589ae84d2a647f2",
          "d283bd12ea8d4e5c8aee05e47f1e7187",
          "301428e75323484eba831c9c2856edca",
          "80e2f86509ed45ca9008acb2908f26ec",
          "88cc6ab5dc174b879ad42b908962931c",
          "ab85cb423ecf444d93224b47ad74cf16"
        ],
        "HasNestedGroups": false,
        "Left": 8388.0474278296024,
        "Top": -244.84565277791015,
        "Width": 3854.0844731102861,
        "Height": 1334.6239692995905,
        "FontSize": 36.0,
        "InitialTop": -171.84565277791015,
        "InitialHeight": 1274.6239692995905,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "834c04ed9416443382190cd80448ae6f",
        "Title": "Add Type",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fd0911cb4946422fbc2ccad432272d07",
          "e15f732335ca4d8db2046b4642688eea",
          "d7766b9b1b7d4c1da722fc4ae8ad2c13",
          "6f2aaa4b36e94c4d856c1483faf787f2",
          "c7df159e9a224864acef4e56c36bc179",
          "0c3112cef80a48dfb15a922ff15db639",
          "82f72681fe3a46c3b9a4c73a08c1ea8c"
        ],
        "HasNestedGroups": false,
        "Left": 12374.560726061902,
        "Top": -199.84521886829612,
        "Width": 1188.2577132462739,
        "Height": 883.29749161939594,
        "FontSize": 36.0,
        "InitialTop": -126.84521886829612,
        "InitialHeight": 823.29749161939594,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "1e005336e4df41f3b2702ff3aeffadad",
        "Title": "Secondary Windows",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d9e4f9b5bb8748b49f845f216802a5a0",
          "4dcd509eac854c0c88652b4484ac1ec0",
          "21e8ead88cdf4caea2a9a5ed0c0e7c65"
        ],
        "HasNestedGroups": false,
        "Left": 13746.399129544421,
        "Top": -144.6823626520395,
        "Width": 1109.1395433537309,
        "Height": 673.399146872729,
        "FontSize": 36.0,
        "InitialTop": -71.6823626520395,
        "InitialHeight": 548.399146872729,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "b96179677915406d9f049030813755e5",
        "Title": "Windows Control",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e09bdb5d28c04c5f98419b9299012930",
          "5d08703b244b4c869b2813824077769c",
          "94810eba8b48409cacd2ccf2b46ab1b1",
          "dcd32a60f84244e3b3b0a145eccc19a0",
          "40af56b272cc41a291808a55d6e12a01",
          "d507a004d281466da24fd924a2580ff6",
          "fcb343b09d344905850ca6df72f6f2dd",
          "1338ca1fe9f54b7799b79d94f6e2bf03",
          "a67438fed347417a9f68ba57fbbf3f3f",
          "0f4ef1c77b604421a9036159a8caeb46",
          "671821d1506a4246a24798d81c5c710d",
          "95ccd697c69d4670a2017b72bde77bd6",
          "3278009996f1432daa41438a0c24be48",
          "3b86883c5bf04926b194ca96cacd426f",
          "f30043da73f6458e9ae2fcf90d73f5b5",
          "678c61d6f1684154b0a2ecf596bad055",
          "06af59db6d9c40c4b67526cf65dc911a",
          "f9a9830b93ce40d38fe51ed06fc40791",
          "f9811aa23cd44203852c79a9d1ba3c62"
        ],
        "HasNestedGroups": false,
        "Left": -1259.3422920805033,
        "Top": -186.97381839863809,
        "Width": 3705.6359534257108,
        "Height": 1084.0115621496107,
        "FontSize": 36.0,
        "InitialTop": -113.97381839863809,
        "InitialHeight": 1024.0115621496107,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      }
    ],
    "X": -4348.336189163474,
    "Y": 449.02505949258153,
    "Zoom": 1.2492108038587992
  }
}
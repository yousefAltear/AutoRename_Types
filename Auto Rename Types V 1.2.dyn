{
  "Uuid": "1da1d0ef-0480-4148-9491-297eb361b3f3",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Auto Rename Types V 1.2",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "964c67fc0c814a84a91113e19d8223a7",
      "Inputs": [
        {
          "Id": "5b6c6d337cdc47119cc38ae23d54b03a",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcf5415984f444459c6d26d953b27cdf",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b92e483dd764acba6dc0fd0b9433b41",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13a3e4ce11d04af081370bd5524545cb",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bccf7acf59a47c5be7d1a15b85f5fdc",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "79b6e10786124e2ea736ecdd4ed1429a",
      "Inputs": [
        {
          "Id": "bf1ac8742678450993ad686a4a22b9d1",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df4b06775e8f48a0b7488cfb15d2f25a",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e063df0d3fc49ccab79af9a9969f21c",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b9d5559654f44adb1d894194f71a52c",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "29b4bec2eabc4014a95509c8b62e3000",
      "Inputs": [
        {
          "Id": "92ba852ba03147c7a2eac7f434b5ffbf",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8a9a322ea494a8b9880911de360797b",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbe224e758d5414a9ebea5c1351986a9",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5347ebec6e74aefb687cd806794e68d",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "a9b3a79cfca4471d87b7f3336defc256",
      "Inputs": [
        {
          "Id": "3973042d09014f5eb556b18b160395eb",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c98d44f011a467bb08c0895d0d278cb",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0911988e32304ac897836b5615332703",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "96e93d302753419eb8e797d36d738ea9",
      "Inputs": [
        {
          "Id": "c21fc99f5809494a8e616f5f259b780a",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51bc482c198e43c6b1ec717b8a69e3ce",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db9360d6477b494da7e4fcbc9362ef1a",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "7ca8431af5684ce1897f370d03fad8a4",
      "Inputs": [
        {
          "Id": "d538e6f681584263b58644b25d32083c",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53b4f3cc492a412888981e92881baf84",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "775a9111b0414ce3aad5bcb037e63204",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "62a0e152a29a47adaa84947579ae8367",
      "Inputs": [
        {
          "Id": "7edea94220aa41469bfe134ce5598a2d",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1153ae5d4aa9417b845931171267363d",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5853568595334c27a3f0fe851ffea5ef",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "fea9b2d4d2364d1dbd5e1ed237b0b7fe",
      "Inputs": [
        {
          "Id": "5d47d345a13c4e45909dc58ea58ba32c",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d4c0eaa10d543cd9e640563a4348557",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef1fc50aab804f7aa52098b441a70b04",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c5df9bc6dea44749d502ba339272679",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dba0bbacb8c240d799b8270db3d56e67",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "0b9302c29f434455b241c0e2f79cee6d",
      "Inputs": [
        {
          "Id": "8f63623e6ad440329e419a497ad150ba",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8b199822e164f8b9bc97eb0ac17cf34",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "726a7c0398904b4c93489f419f22486c",
      "Inputs": [
        {
          "Id": "2e7559bd1d984c84bc8d637ca1bdf5e9",
          "Name": "number",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bce51a2022e84625a25c5c01f2472ae5",
          "Name": "fraction(str)",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a decimal foot value to a fractional foot/inch string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " - ",
      "Id": "a935958a3ca44b0a8c582cc6d6c8e43a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f05097eea7c5471387da5b36dc1575e4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Stone-Brick_Interior_1\";",
      "Id": "0532424486ca4c25a4ff51175a3186fd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2b25c5f912104ebcb10f5ccd1850b3ef",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Stone-Brick_4\";",
      "Id": "5317240ef6eb42c0ad95cd245080a55a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0853e08af6b94966a1a34bab026156e6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "0b73b43e63644b4d810f9c702722514d",
      "Inputs": [
        {
          "Id": "cd652924ceb94eeb8aac1c056634a856",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "234b7845e65346dbace5e32dd85b2b30",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " - ",
      "Id": "780629fb6f68480eafb844a92564cbe8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5b25a29c8c28434aa7ca0fca714c0be8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "6b8eadca39fb4b4dbb277b0cdcba9853",
      "Inputs": [
        {
          "Id": "033de1f7b35947e5b34b26f57a29d114",
          "Name": "number",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0b3cbc59ea34a12b35183e49e7b1c01",
          "Name": "fraction(str)",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a decimal foot value to a fractional foot/inch string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "b4c232158bfd4bd4bd8337c700795441",
      "Inputs": [
        {
          "Id": "c460368247cd41ccb1d6edd12a32091a",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81525dc705c7496086ad9745ee621337",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "265a2996072446d6ada76d37a582e197",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58963c8d403144df804a95c632874b8c",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "1f2b48882c5e4024a43b0cb72713247d",
      "Inputs": [
        {
          "Id": "ac76d3c5dcef444eb18b3455b9d82277",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b92e3e5ed914100972fb98872057bf3",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d419ad5b7f649f4855182cd01ec33fa",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Width\";",
      "Id": "12a1bda9c314440dbefcade0e91c3831",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ce484a6448ec41b68b9aaf7ceab7cf3d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Width\";",
      "Id": "6e65282f2d844176b766a92522c10a56",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5a1ca008563c41f38ca9fb95c533746d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "1df1bcd61b8b4bb580c4863957d452ca",
      "Inputs": [
        {
          "Id": "31a33b9403074278bdb5d92de4da3311",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b04bb955924d47efa4de9f957d3acb96",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "831f42d087ab48dcaaf5a3c823061ec3",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "5df4fbc938ed4a5d9f9b5090e5edc08e",
      "Inputs": [
        {
          "Id": "80cff19d51824c6cab9d333ac24c5ede",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eafc413fbbfa414b96127cd56b27d3ec",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04c5de9cd9524bce9d3894c0ab42d997",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f07a8f093f9d4b1fbc070049ed0200c6",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cba9c8279a14f75a64a4b9c0aaf927e",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "5e195ade9da3431b8210090b788e5697",
      "Inputs": [
        {
          "Id": "dcf2ece369094458b864b1ed8b3b1ea3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4d86afd27e844649e413060274d93c5",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "ff539f8a52f84b02a25af458195427f7",
      "Inputs": [
        {
          "Id": "3bbd14f0ddcd4513bc64cd00ffa9fdd7",
          "Name": "number",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0cb28e544df42c29cc8ea8e2bc065ee",
          "Name": "fraction(str)",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a decimal foot value to a fractional foot/inch string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "7bd4e9879b1b4fc0bc65d73096239346",
      "Inputs": [
        {
          "Id": "972a0cbc3d964052b8d6a254b44355c4",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52edaaabe40042cd8a4ec72892a35c2f",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eaec6c534f09402999132a8fedc19917",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " - ",
      "Id": "42c622022e314bd499275c5fbc2363b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9e2bba49b808407b980fed7da315b67a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "902515992a934f858b0effa8faf238bd",
      "Inputs": [
        {
          "Id": "204d1f073836479ba840ce4a515bdd63",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12981ca5fdc44b039272fc20fd072d06",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7edac3ec73054a1ebed2f189a199e048",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Stone-Brick_3\";",
      "Id": "bcefc0c44e554813861e055abeb77a58",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "36fa05e36b864556ae8e3d79a2ba9171",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "0128af8914f14fb792e91f9463e4f3f3",
      "Inputs": [
        {
          "Id": "fdb7915392654d4096d49af37d46cf0a",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5308854c91fe4403a29edf03cf8934c5",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0af7b821a504461f85cf1bac1da5f816",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e724114da14403ba8119c10a9e0ab9e",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "30b25f02536f44098e845b6fd766b38e",
      "Inputs": [
        {
          "Id": "f878bb216826419588d36beed3e2ace7",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a262b40a06a4fcdace87a8bf2e2bd88",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef4f4efb739d4ec68a86fb396398a8f1",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Width\";",
      "Id": "d4ac4aae22254c318248517772c92602",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "273591eef7ef4e73a67f6e99a16b53f5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "429440ee8cd547bf8569028e555351ec",
      "Inputs": [
        {
          "Id": "89cca748cf0647f5883c85609d80c3be",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "688acdfcd94a46f49ef5315149910834",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8b215f13f7c428591d01ec89a1642fb",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a760a97ad0974892a5043881d3425eee",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd02b7f1270246069c867ea6d5ae0c96",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "2205df10f7134b3db0215b35f9e1d2cc",
      "Inputs": [
        {
          "Id": "9f8d38ddb26c408293d1c22607f3609f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1422b317f4cb48abb970de424b864c6f",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "aae757674dc144c897fa6af4115be329",
      "Inputs": [
        {
          "Id": "2c7cf6166054466bbd055083fdc4eb13",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "925acb47371247ddb7bb41e8943e066c",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d612d0630e942c89c2403bd85743678",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "94880211591643c7b7e84c20641f2edf",
      "Inputs": [
        {
          "Id": "220ad2a392c643da8a2ce1f17805d71f",
          "Name": "number",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54e30df995a34eb4bce30535f7be38b5",
          "Name": "fraction(str)",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a decimal foot value to a fractional foot/inch string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Width\";",
      "Id": "fc5b2c07563e4af3b6e4fcfcf66063d3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "141eed266dfa4e5d82885c66cb3b5adf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "f25142412648423f8eaca4e30c71e1d0",
      "Inputs": [
        {
          "Id": "751596bbddc34d84a92b7aa75e4dc368",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3258a7013264e9a90b839bf3d56d2b2",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1fa0d9d3bef4adfb4a1171215e7e8fd",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " - ",
      "Id": "9b26f7b182fe48aba1274c070edbe66f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91819bb9b9a248e088db11b01ef2ef75",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "eeebfb5428c84510bf2eb236e47c5f9e",
      "Inputs": [
        {
          "Id": "a3d2d2a0878b47a69f629258ad94919c",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9f7ede6bb03439d8000d11df3b0860c",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9cae6a8a45024a34a5d179a1b1d20d74",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Stone-Brick_2\";",
      "Id": "7fb2f5c5b95f4eb79ba10ecc47693a52",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "088e8eb3ad95444a80645c67af394d98",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "73f3c4f0980a4d7ca0e13c83223f6db7",
      "Inputs": [
        {
          "Id": "16a1037bc70e4957bbb11e492016ae48",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "027112159fe34a75b795ca1fd79280db",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cafd931577c4afcaac9705d7f3ed2b7",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "1af928dd20594c1b973285d8d826d423",
      "Inputs": [
        {
          "Id": "1c84bc19960e46f98be60603f60a50cb",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b1e5d3e1ede4f548b9d16ca3a8ecca6",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a102319ef8b8439899225f9a3454d0de",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "d8b6510f56964548bf913a84604d0fcb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ee30e4398fe4050a6d507e49a9ed6e2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "f2f125ca97f04029868a0960fd321b44",
      "Inputs": [
        {
          "Id": "0d8c353620ef45feaac2080843bd26aa",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea00899eca3540a4990aa08473db08b7",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "151bd1d7120443768397659853e29f76",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "ccfe5cf3162e40dfafda03e07dd16049",
      "Inputs": [
        {
          "Id": "5e6de892d3744368be95d5d150b413a4",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87ba448b7b614765ad4d47fb2251d5c2",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d63610c313f24c5997612529e51dc449",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e40336191af4df589b306aa31e8a3ed",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "0da3ef5129844ea3b38b2875f6135ef6",
      "Inputs": [
        {
          "Id": "3c173e3723484ab39441655fe1555224",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79757e6f36ae41db912a71b567893d82",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e155812503541078481b8881fba8134",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ac4a2c465994191af45f4f77ed70088",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Stone-Brick_4",
      "Id": "b03a1761a59143f9a0e549abfa560727",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "11149d7fe04748e79eb080b753d15949",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "5aefebc786da4423b68796ccbd0291ed",
      "Inputs": [
        {
          "Id": "743c52e3c78647498273e717532f704c",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "749e863c13e94985a7fd58f6de69a578",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "2858b3f9ee3c4855867be9bb3879add4",
      "Inputs": [
        {
          "Id": "a795765c2b0049808f5d212ea66205e4",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9ec35dc67c5445392e60eea8a0167c5",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f09f57ebd5944118bcd07354ad11de23",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "76eb809c3e4243e59ed60f7048d34c8b",
      "Inputs": [
        {
          "Id": "38b5aca01f944330b9446f39e680d11b",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b25e8320e93f4e87805c552bd8d95fe6",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9ec63036dda44f0a07d5dbc5d2132db",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d60280eeebc4fb9bbb1daadc97ee5aa",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Stone-Brick_3",
      "Id": "587c959b10214b798fa8e99594fbd9fc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d21c79ac979540899bf528bf9ec0f4a1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "7df5c2f2fca14b5cae0d5d8f57ad2385",
      "Inputs": [
        {
          "Id": "2b45f8349e9640cc9ac1b3e43ee71b35",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0765d114870545cab0078f3c93bdc648",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d3176439e7f4116b09287035fa087a5",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c439e2e682d4f63b59ea95be2cb7d81",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "7c025db7f0ef4c3aa2ea0e8a10c12ca8",
      "Inputs": [
        {
          "Id": "76b44519429f4d90a176466260146ccd",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97b7daad959f4079a3cd637b10a09eae",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "4c03b27c91fa464d86a071ea2d2f8660",
      "Inputs": [
        {
          "Id": "3e0e941f0ec141a18dc44b45536c6ec7",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a659bd114ed4ce99621f478b8089583",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc3859c92a81447d83f6b5b6764c8dc0",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Stone-Brick_1\";",
      "Id": "7b624952459d45a1bdfb2199212ab262",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2cb34b7b946040858dd402392e524877",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "1b0aa7349d9f4f1ba7a670a7751d6f9e",
      "Inputs": [
        {
          "Id": "d79433e566334747b5ca03af661cc055",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13f15e720d7949c2ac809f81fe566258",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc58309c2b78429cb094d2f87eebb77f",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c202247d18cc473a8ff584d8cf95b479",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b5179111fa844f28b4fd8491e897309",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "4c8725bed1b148c7ac39957f2bc0cf46",
      "Inputs": [
        {
          "Id": "7f3a001842114962b3a09e805c381621",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9cbe12fdf794c37b0724718d20cfa74",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e27c4bc9a44747e9b97de52c60a4679c",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc25ed5c7ce143db8ca13c5f1ab9c140",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "afe7eb22adff4bd39a2ed0649d702774",
      "Inputs": [
        {
          "Id": "df3e859f289d4002992f06200a529331",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3991ea4155b492cb0c1e95409551c64",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "2480940dbe3f444ab4c1216d45686b59",
      "Inputs": [
        {
          "Id": "43be417760434b529629620763c7b641",
          "Name": "number",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72d7a98c4f31413f8d2bd1e07ad4fe38",
          "Name": "fraction(str)",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a decimal foot value to a fractional foot/inch string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "5aa6337eb43e44b9a173c955d77e0422",
      "Inputs": [
        {
          "Id": "e081950312e848ef8ef27870c030d4e4",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ef2f9def5b040f1841ed73c2bf6be37",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fda423761fb944548f1909dae159f711",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": " - ",
      "Id": "87fe705a8978427fa5208c53b6299b7e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6d8ad8dd94bf4b089026a8dcd3f45e07",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "e12499a4685f47c9a1664a7d5b6da72a",
      "Inputs": [
        {
          "Id": "e167867126ad43568d1d205f5620cb90",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0c49aeebd34466d88fc63024f464a47",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf08df35a5ad4522b13b4010868e5196",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de83a57c4fa648b0ab90c294a170cecd",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc1b2f9e11f54366b1ca8e5b556baa31",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "3719722ab45e4b5db8bf5bcf0bf43a3e",
      "Inputs": [
        {
          "Id": "6b436653466b4cd1b8512377eb06e6e8",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8fd0cfc132a4cd3b0c2f36af0662ad6",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "244787f736414818a4eefc36c7318372",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b854e3bca18248ce8766a7fa7b45a485",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "0a1ec4f75b67425d8a9d28b868a47ca6",
      "Inputs": [
        {
          "Id": "a6e06c1ac35643dda3625d813f6d1588",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "673f2e413bb54d759ef2ff056d6ec5bf",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "fe96347ef6b1497e9bc373d8c28231fd",
      "Inputs": [
        {
          "Id": "f0757fdec282450eac45a81c3b6b972d",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca2ee5c79d544b6c8ee9ad26787bac0c",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ebc3f27361344508cae05633e3ae8a3",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77c89018ab6041819ff8a0e037b432d6",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "WTS_Interior_Ceiling ",
      "Id": "fd727c9eedaa42d5b2aaf2e29c285903",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dfa25c6d78b14ae38aa629f3accf3c1a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "9d579d333ab746929afe5628862b7a81",
      "Inputs": [
        {
          "Id": "94e47038c698472fb2544428fc43ed69",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa229ce868ea4fb3bdd080a5aae42f65",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "bf93309d23174a31b39b601666d591ab",
      "Inputs": [
        {
          "Id": "381cba9eb6034e1cbdf40357b10b70de",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78f2bd89d69940ff8ca590a4b630d8f3",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44eb89999f5d497a8ada1938568f5a45",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Thickness\";",
      "Id": "823fab830629470db44ee39db4712368",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "54d0ed829e9749caa08f1a6102276119",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "444e099ce0f34997bfd593c31372668f",
      "Inputs": [
        {
          "Id": "cf78692d77a141589db5129ffbdefc03",
          "Name": "number",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e29affc502046a9b209ec1bdd092f09",
          "Name": "fraction(str)",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a decimal foot value to a fractional foot/inch string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "1c9c221d571d4b56b9892e528e933b99",
      "Inputs": [
        {
          "Id": "883eabb54f664f79909d26325e33b27c",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a2ceac0f30e4c0a9f4d3dc38bd65b45",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f61880eb415d46a895f22ba576522481",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Generic\";",
      "Id": "e9d6b031333b48469f2defc8411caca1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b475e68e9ea43f1a88d8c39f8b2cb31",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "09a2f838d69e4cccb3e72aacfedaa253",
      "Inputs": [
        {
          "Id": "6705523ae4f2440c8a56fd77dfe2a81d",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "890f36b19ae44728ba34023a67aa6aa4",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa76dab673964a969d830920d12a12df",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a631be710c2e492c956ada3b0f691ea0",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "80e02e4dc15e4320b4cec567a6c89076",
      "Inputs": [
        {
          "Id": "6c398662fa6149678cc8fabc1f8b4872",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32df692f068d4ed19cdc022476fe4889",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "5ac67c3ea1ed4ebba3b14e8a1001c215",
      "Inputs": [
        {
          "Id": "435b68f70d12414c8680f8df161e8592",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "530ef4e7474c4f0e8b98ccb8649ab813",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a46d1612db6d4d8eb3252f698b5640a7",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c296e8bbb02b41f1a29e535129407e11",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "477eaedea9fe4c04ad318aafdf7a421b",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "94187446c1ff427780d0d624d514d56e",
      "Inputs": [
        {
          "Id": "806eb9b83bed4f4cb3ecc105193e6cdd",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "253ff9796544441f8789ce86dc524a3d",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0a5dbc32a264d53b517cfa4afcdc201",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "413316bb2dc14119ad94a62a8e8c15f2",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "457c56611ed548d1ae17816006e128ee",
      "Inputs": [
        {
          "Id": "929db225a77d49c5b64d38b5e7ae21ce",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd527aaf5c6a49249155d1bb997bfe9f",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48053f3d7e844ecc8d648a42d9fd87ae",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Width\";",
      "Id": "050d9c5060c54a8085b93664d47e4962",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "20e80b34ae294bc78abc00880a9c2bb6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5e411750872f4f89a1eb99bfd9a2111c",
      "Inputs": [
        {
          "Id": "a601fbcf03bd496bb583d1a3be95e2db",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4d27915eb3a47e2941dd0ba55945622",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "ff04037be1284d539a9354de5e47598c",
      "Inputs": [
        {
          "Id": "81e795e5b42e4311b351d3dce078a693",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9de4ded09dee47e4b978a048410816ec",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aef9929193ef45c3807e6245d03584ac",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Basic Roof ",
      "Id": "b46d8ca2ca7d4da39647b7c705d59fe1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e055ec534db6453682ecabf99346e257",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "e9fe51dcfd8d4e5c893fe3d60a808655",
      "Inputs": [
        {
          "Id": "3c4b154f6cd242f1b5110e43efa49772",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4aff084fda04a44b35ec8f0ab5cc86c",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec1cf4e7eaac49cba5c62a7729602e9a",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "b1e2b7db732f451dae9d12fd3d2b7846",
      "Inputs": [
        {
          "Id": "e79afc2b23d04cc4b29824b0a33f2f31",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7757b2e08279415a906c1fb138f365fe",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4cbbbbaecb25428fb07b05969fa72814",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39da84c3872b4e409b9684fc8fa6877c",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "70d137dc93974912b3a969ed6c315a90",
      "Inputs": [
        {
          "Id": "15e469b43d994662bd8ab15f40a189f7",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aac2f5dc037f4775823ffc50636fe047",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "709174d2844b4a90880e99d0da896dc4",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "748431e8e35f46d3bab6e3c46edd1d7b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3f428734ba634449843f0762c36c102c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "a1304d38da1849dfa393af1a4527fd69",
      "Inputs": [
        {
          "Id": "aeb5e3d931d941f8b968b6a0bd9ed215",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4496a5ae9a0429eadfe406d23398feb",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f836a2c4e0024245b2b2096069286b9a",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c9524773ca84175aa03e0715d01bdf6",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "4c48455fac8b4b8eb78b6ee2310e1af0",
      "Inputs": [
        {
          "Id": "f7adb7db561e49628ac9d0c7f7ae2ebe",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e86a5d06755144f49ebe4f4e9d2bf01d",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a2467533ded4b4a82a8c321b1f1bf4d",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "0c412d8756984a2e96b97ba84378cc5c",
      "Inputs": [
        {
          "Id": "a6c5eb185a3148c7a0fe547fbe29dc3f",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "085c4b13d3e84ec0a0c1de5c898004bd",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6cba9632fe494a7e8a55b605cbcad267",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2bc4cedac86407bacf013630aebbd73",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "7f82bc47f2a74c919d2a41cec0843d8e",
      "Inputs": [
        {
          "Id": "79ba88b2d1144caf9e86809412ad4ad9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "991709dc8135420f9dca0d2e57c9cea7",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "5cb0c7b0009443f69b38a66dbe74c5f8",
      "Inputs": [
        {
          "Id": "0d630f4cf10e416884ea597d5b84f2f6",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b09be5abfe74c0586d230095169a48d",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f453ce625be643bca7832b3978491f9d",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3ccbaf48ad646cbaf8c2562378a6652",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "584e87b245ef46cc951808e143d8faf2",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "10176dd7af16463191710ce4e5363740",
      "Inputs": [
        {
          "Id": "48f7154dbe5f4a32b58a847ec2cb0de8",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b32af7e5be14ada983821badca0ce1d",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51cdc7d8607740cf8f21b666502a542c",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb4ca6f98e4f4595af216468f597ed81",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "b013cc977b414e2fbe8ad1e499587a74",
      "Inputs": [
        {
          "Id": "47cb1e3f093f4ead8a393d1f9e2e52c7",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f2ccd7164574261863a540ae6b92534",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "838d2e670afb43f291317d6b12fe8137",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee8cc096cd6f4bd9b2b279d8fb980742",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fcc0d470da54fca867293be3b02ffe1",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "47295936f8784b4686afaf53d8ad4d1e",
      "Inputs": [
        {
          "Id": "bd3a952562d24dd7ad57ce7969008be6",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f1c587ea7a44dc297741c011b8d0efa",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82c4869e490e4e8ea908480806dfb569",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c81780506534583b52fca3a85d7b80e",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "19845586f82c4c14a7f0ed3e1468d77a",
      "Inputs": [
        {
          "Id": "e9531eb0f2504f3f940b256557373703",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cac301b8df184cd38569d72f0c68fdb0",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "WTS_Interior_Ceiling ",
      "Id": "eda5b5de9c7d4c2bb4c295893db753f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48c2d18477184188a3454fc0f615330c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "60ee38c0383e432a873bb8d98f6085ba",
      "Inputs": [
        {
          "Id": "30949d0e04194601b578c24ae22f330e",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "086664237e6b4d6c880660a4e33fbcd0",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94939f722c30424c9d5cb658cf80dcfd",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "ca26d41c34dc4bb09e3f392f08ff4aba",
      "Inputs": [
        {
          "Id": "229fb56396cb4906b8c8d2952053980f",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c680cfd20fa41caa849c67abdce8e26",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c804be629fe4464d94d2bf1032cb314f",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37de26544a974babbf577eb6513072f3",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "478bc734046a41faa69998c05738c633",
      "Inputs": [
        {
          "Id": "fcbf5375e63747edb98503b200af1db9",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3510283341ca4e6a9db151012d8cd578",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bb2229ac43a4ac28f02ce2cc042396e",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c743328f20ab4f398f1b05584055b441",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "d076945453284774b6353fbe9458492c",
      "Inputs": [
        {
          "Id": "e09dd91492614a229179c8e4e8aad0a9",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b95216b8b6574c0c9e3033a54adb1166",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Ceilings",
      "Id": "05ff7b2449964ccc882ea6d65eb3fc1d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f85e98893d21441fae7606db707120ea",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "5d91352f116a448296fbc2045a47b3bb",
      "Inputs": [
        {
          "Id": "6f8a50b9c00d4c29bdfea3ebd5476fcb",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3643b480da084db0a42f3fc76abaf172",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "60b2f73a2c2d4cfbab99b2e1480e2d98",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Stone-Brick_2",
      "Id": "0b1afdec327041c2b3c513d19db3236e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e2928f8affe147beb21b869a74f51a73",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "4f39f7fbe7c0490b8b6deb770706445c",
      "Inputs": [
        {
          "Id": "ff120902446c4200a6404ccbff720771",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb6f0306eb8a4f7b83a1f89d766d6e7d",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d75cfb1f9f04418c853723880db77fec",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92d3b77f64474b99b4246dccfacc5c95",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "3e04a8735b174c58be933722c87c2ace",
      "Inputs": [
        {
          "Id": "a874f0a02e41464f97a4a62876e7b638",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74bc5a7c19ec40b2b9cad6ee66e5dd40",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "d221fae9acc84ddb9517404da976b3bb",
      "Inputs": [
        {
          "Id": "6a79fb771703467aaa79f00f78796564",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aad24d52d28341c6815c4fed8b4bc105",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdbcb50da2024d8f9c94c751980a99c1",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2143589aafa5458a83a084d90a897dad",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "2d781e2754454080978e39e99df50bff",
      "Inputs": [
        {
          "Id": "ea26a6d9a291406ab3a76ee2b16bc581",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "935b4473a52249ffb1581703a731f9a4",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Stone-Brick_1",
      "Id": "e0d06655ffa84829913b486b0cdecc89",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ce51a99dda546eba0268bfe08856dff",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "608b93aa0a9c4f68be11e1979fe9f31b",
      "Inputs": [
        {
          "Id": "827f791f248d409881af20fc3553f956",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed6135fc0dbe4f6a8018fe9e0057e8a6",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e7e6686889141a7bac249325abb5e6a",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "042b1fe960e14bb2986bb7d400c48916",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "c79649a178494f55b7ea79343c101ef6",
      "Inputs": [
        {
          "Id": "2468de41a8244a2d9ec4df2b0cbbc007",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bef136d0b164453b5d3eea7be781e17",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d51f61ce89d4f388f3d1e941a16312e",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "fa26860da197435f95a979a347c79281",
      "Inputs": [
        {
          "Id": "a2721395cf5d4c63b926898275a1d685",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "119ce72e73914acfb7d5e6473a0d08de",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adef2b7ed38a4a50973cf2a4b6d1536f",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c9c96c19a5c4aee86903612ac0d9a1b",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "f6f72cb13e2e46058724ccdb8544ceac",
      "Inputs": [
        {
          "Id": "229599d42d7c4cd1b53b3a45d35b7b44",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "055313bd1fe046e0b05f74781542a6f7",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b78783cafe614644930c49304ef116b9",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "65f93a80-674c-4a98-9d0c-db3a138287e5",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "d8b2f27169cf4ff19e76c1fcda479ff4",
      "Inputs": [
        {
          "Id": "59a29c7fa1df46078b9ba728c7d570c1",
          "Name": "category",
          "Description": " Works with categories, BuiltInCategories and BuiltInCategories as strings\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf92a25db1cf440fa0676506ffd77c08",
          "Name": "toggle",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aabab1887c0047eeb35e1acc8ea4f670",
          "Name": "docOrRevitLinkInstance",
          "Description": " Use only if you want to query a linked model\n\nvar\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01a95ff6c50047b589857ce05b3e4fa2",
          "Name": "familyTypes",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all family types/symbols of a given category in the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2a75c2fa-c410-434d-87af-f9d59ee44c4b",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9bceecdc76f44afb8d23969c40321a44",
      "Inputs": [
        {
          "Id": "9251eb7acfde4b7699ba858bea778f07",
          "Name": "category",
          "Description": " Works with categories, BuiltInCategories and BuiltInCategories as strings\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "662ba8d002fc43eaadce0ddab2ed2dd3",
          "Name": "toggle",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aebd54180b9b46948ad48ad3d445a47a",
          "Name": "docOrRevitLinkInstance",
          "Description": " Use only if you want to query a linked model\n\nvar\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "669d3501ef274346b8175df646fcfee4",
          "Name": "families",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all famiies of a given category in the model  (does *not *work for system families)"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "be8048c60e4e4294b5e1d5c28712e19a",
      "Inputs": [
        {
          "Id": "87e59845ed6149feab7b7a92c1b8d6af",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fdc7450b6a624091933b057af37818c3",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "b1c5204043c34e86875d4d0eb428c988",
      "Inputs": [
        {
          "Id": "f8ff3905f5e64739b72a74f67008cbeb",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ddc14dff326a415da7ff1dac3a306616",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "beff988b5594404885c865a02fa0e6fa",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05969f625f2b47fe9a92ee6ab492b816",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "0bbadd7068d048dfbd6fc9268d978385",
      "Inputs": [
        {
          "Id": "93dcd76448704a14b7bb364bc58d4e3e",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e3ccd34230b4de89c55c9bb0a84f6a9",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d424bf0a5fe4a539f4c54d45fd05d42",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eaa4c3ab6d9f4edea60d6fb8db8c20d7",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "0",
      "Id": "5ceb8fde2c844cd283132249df2a01d6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fb4bb4c7a2a4406aa3d329402596bccb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "a425b6977f21476ea2cc887df3c0698e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eccf34f5b4aa4099ad64a2fc292c23eb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "9dce70d3d6d8433f9fa38f508424100e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bb9a54b461804e36b2fca8fd33dedd14",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "ee3ec0dddbe94f53b04847632500a0ee",
      "Inputs": [
        {
          "Id": "3b3bd86a974f45e38333033b8ea64e95",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "205a9b37051447368483809f8dab1d8a",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd5635f57fdc4d25a8be593582ba5ad6",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "274e412bf6384f2994906cd1d0de77e7",
      "Inputs": [
        {
          "Id": "cf0b6c47196e475da124140c94e818c4",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "358c9628f9fa44bbbc25eb296b3ca1c3",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57ecae6275184308b547fd2248add5b7",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "4c7c2bb31aad473aa79994a294dfc48b",
      "Inputs": [
        {
          "Id": "b22078a8fb46431195dbed6594cb4e17",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d6e83a891374ba29e934e097904f157",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 480,
      "SelectedString": "OST_Roofs",
      "NodeType": "ExtensionNode",
      "Id": "5c1141d1a2894e49b9125d75415596ca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a6809375a72457793040151b44ef951",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Roofs ",
      "Id": "725a31a68c2c4f75a6cd27473fae5839",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6741a87ee0eb430f820a7648f492a316",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 121,
      "SelectedString": "OST_Ceilings",
      "NodeType": "ExtensionNode",
      "Id": "4bb3678959c243379eb841f10c112ed0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d7c27c50bb6e4ff6a2b642a976cbbdee",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Compound Ceiling Cut",
      "Id": "80fd82ad4c6c4c9f9ded7db7adbdf784",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1c679400b3b0495fadc590230118aed2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f0abedb1d58a43c1a0093aef9c032d05",
      "Inputs": [
        {
          "Id": "9e3ccc89acda4beabebcd67ef2ae9076",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0746f8fbb83749a4acb1547e8a86236b",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "821aa0ae5a2a494586d5f7f9e342692b",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab965aa0c3e94a1c9900b8488df253a1",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "e5f5c825cff14c7d977ad0ed1e172bdd",
      "Inputs": [
        {
          "Id": "e0073bafef02456c9a04b27e116039a8",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "970eb1ea28914542a46e4999a3cd4c75",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0809d0aeadf847b8afb37a665e7997c5",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0baa31f7ede4269a3b57d6e04d9444f",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "1245269aef3c448f943f22a65fee4dff",
      "Inputs": [
        {
          "Id": "1061c0e9fe984337a367dc400fb9e29c",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "951d0cb88e194be9a2ff7a2d9b42e913",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d388651f37c4577b215c1d325e2752f",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "3f427c47f3624faeb04f2aee37bae01d",
      "Inputs": [
        {
          "Id": "c03209aa4b2a4c0894f49f9717996c80",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3076f30f9e094b4d9dda42fb21a3eaf1",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9561f5431c4f42be98d663c668c9840c",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aef993e5bff546cebb236c1e29d8656f",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2f56d88b-a263-45de-b9e5-e074dbe52635",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "f8e4bc5a6833499091b9fa17b29d8e1c",
      "Inputs": [
        {
          "Id": "29d8fac478a6488593f8734c75944b98",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7264a87fd9bd47489cf85933d58cee53",
          "Name": "name",
          "Description": "string[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55cdc1ab67c74347b04e553ef801f019",
          "Name": "replacementForIllegalChars",
          "Description": "string\nDefault value : \"_\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0242f7d0c0042c88ffa63bf58a3963d",
          "Name": "element",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4d10b5782b54b5b950f67f7cd699f94",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name of a given Revit element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "84532fe3c8394689a47743bc2ea0943c",
      "Inputs": [
        {
          "Id": "41f858706ec44fd0a7a651883dc0a15e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d4bfaf84b2e42938c77201475ec4bfd",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.TrimTrailingWhitespace@string",
      "Id": "93662293c1ef4cb5b386768b288a7bf7",
      "Inputs": [
        {
          "Id": "b321dce9afc14d0bb40f312a094208f2",
          "Name": "string",
          "Description": "String to trim.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a63fb12bb6c4313934e902c9f76255b",
          "Name": "string",
          "Description": "String with white spaces at end removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes all whitespace from the end of the given string.\n\nString.TrimTrailingWhitespace (string: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "cb2f4a92b6584e75a8c7e9999ed9a1d6",
      "Inputs": [
        {
          "Id": "3f4c30486052473ebc5900e3f24db27a",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea48c10bfe6e487280e44e8e2336a5a4",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc1fccfda807406b895b2c25df3b1509",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "a6abddc2e95a401ba9af75488735470c",
      "Inputs": [
        {
          "Id": "cef9823d666249649c5509cf56d1aed6",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4ae32e560084ef39ebeaeaa0c9a6f76",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "0a64d7c01eb3462aa81818fcd168b388",
      "Inputs": [
        {
          "Id": "12a3324bfc3b42a697708db50b79eb43",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a93197f214f4a4c93ce9494e87c9db5",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60257cca96b54924aaf6dbebd7fd948c",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91faa0a8202f483995ea39dc39ed1dc2",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "e8f99579084a4a39b54cca253ec85e7d",
      "Inputs": [
        {
          "Id": "30b7de3c19cb4f15b289b29505a69519",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3429a5dc9154928a0c0b408cfd8bf67",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9167ad8147f45d0b241311c4f2f545b",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f38756209404a4183e6356168b8ce58",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "3acdec91cc294978a358e03b2b63835c",
      "Inputs": [
        {
          "Id": "d354f13f7d704c72967628b7e464c3a3",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "14378d04e8ae491d8a55c34c8ee5a9f1",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "1bdbb7fad5fa42a89dd0c6a727008b64",
      "Inputs": [
        {
          "Id": "b36c3bd0643f4644ad59d969334504fe",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b779ef0f567b448391a967f3c2584d57",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03bfc4c9b0e746f7b95cdf9affc4cff9",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "c8af5a3bea6d47c5b551523afba4c7f6",
      "Inputs": [
        {
          "Id": "ba7bae7d4bdb486ab3eaa3509d2f557f",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "784b6a3aea744fe1ae8082a427d26df5",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b402e2dc4a2b4873a09482b1b6c4597e",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5248040726394169af7d8d13b48d5157",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2a75c2fa-c410-434d-87af-f9d59ee44c4b",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8e2b2679d3124bc1992936e8ddabd04f",
      "Inputs": [
        {
          "Id": "670849877d3e4634a8ef78d91da95208",
          "Name": "category",
          "Description": " Works with categories, BuiltInCategories and BuiltInCategories as strings\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "274dea2f44d340dfb4f34d793c47e311",
          "Name": "toggle",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b863619f93444c8b7baca8ab36a79a5",
          "Name": "docOrRevitLinkInstance",
          "Description": " Use only if you want to query a linked model\n\nvar\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c723f6d272294625909044cf21bf9f3f",
          "Name": "families",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all famiies of a given category in the model  (does *not *work for system families)"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Ceilings",
      "Id": "d7b0bb4db9f84de3881801408c690499",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d138adab39184a51aca553fe1f5bf42d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 121,
      "SelectedString": "OST_Ceilings",
      "NodeType": "ExtensionNode",
      "Id": "4f3b92786e6d4acfa99c9f332c6589ff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ef10d13d28b549659d3f3841ffb49df0",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 121,
      "SelectedString": "OST_Ceilings",
      "NodeType": "ExtensionNode",
      "Id": "b774a0a1bd01412faf9497521cabb6c1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "818bd1fdfc6b4d70a19fc8a4ffe0e2b5",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "65f93a80-674c-4a98-9d0c-db3a138287e5",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "5a93a5fe911047878674f9dccc67b4c2",
      "Inputs": [
        {
          "Id": "f5b9a4982eba4038b260a97ba72d8e59",
          "Name": "category",
          "Description": " Works with categories, BuiltInCategories and BuiltInCategories as strings\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "370fa377cbaf465aa237822ae83f504f",
          "Name": "toggle",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a435dcc5fcdd4ea58056acf6f0590ee1",
          "Name": "docOrRevitLinkInstance",
          "Description": " Use only if you want to query a linked model\n\nvar\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb3aa4faf2984d5ab24a3ac2b356390b",
          "Name": "familyTypes",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all family types/symbols of a given category in the model."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Ceilings",
      "Id": "03e70b5972a446c18a9462facdd6f7da",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "78b0cc6343504963b0af3b44da1357f5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Stone",
      "Id": "e69823b60268464687b25c380540b08b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8b8186c782644aa9680a79fee41bfe1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8f4cd686745f4a54834f8dff509c592c",
      "Inputs": [
        {
          "Id": "9be234663f494c5495f1ac7c61900f37",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96fd7aade01b49ceb6e61c90c416cdc5",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for *all* Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types, unit types and ForgeTypeIds."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 700,
      "SelectedString": "OST_Walls",
      "NodeType": "ExtensionNode",
      "Id": "1dcccf567542465ba45de671d4206c1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34f2d3d1aa19425a87080f31533c587d",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "65f93a80-674c-4a98-9d0c-db3a138287e5",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "f7d2005e229842be82c73e518c3a3e18",
      "Inputs": [
        {
          "Id": "cf2420e30f7a43c5ae6fa9b92faf518c",
          "Name": "category",
          "Description": " Works with categories, BuiltInCategories and BuiltInCategories as strings\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96c7d4dbad954e2fbb53db9af64f96a9",
          "Name": "toggle",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24594d81dc8c42c5926cfc09d93e110d",
          "Name": "docOrRevitLinkInstance",
          "Description": " Use only if you want to query a linked model\n\nvar\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4648c15bd1b5470eb07aed6d79925b0f",
          "Name": "familyTypes",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all family types/symbols of a given category in the model."
    }
  ],
  "Connectors": [
    {
      "Start": "7b9d5559654f44adb1d894194f71a52c",
      "End": "dcf5415984f444459c6d26d953b27cdf",
      "Id": "629cdb106e054666a4ba47eb79a83936",
      "IsHidden": "False"
    },
    {
      "Start": "a5347ebec6e74aefb687cd806794e68d",
      "End": "1d4c0eaa10d543cd9e640563a4348557",
      "Id": "b8aec256b25240a3b5e1488459e25736",
      "IsHidden": "False"
    },
    {
      "Start": "0911988e32304ac897836b5615332703",
      "End": "51bc482c198e43c6b1ec717b8a69e3ce",
      "Id": "d30fe5c2d8d044bfbbe9b79db20c5898",
      "IsHidden": "False"
    },
    {
      "Start": "db9360d6477b494da7e4fcbc9362ef1a",
      "End": "6e063df0d3fc49ccab79af9a9969f21c",
      "Id": "e49babd3b7834aa9a09529d008c090e5",
      "IsHidden": "False"
    },
    {
      "Start": "775a9111b0414ce3aad5bcb037e63204",
      "End": "bbe224e758d5414a9ebea5c1351986a9",
      "Id": "c731a6ff8ac9457d8805f2d599597593",
      "IsHidden": "False"
    },
    {
      "Start": "5853568595334c27a3f0fe851ffea5ef",
      "End": "53b4f3cc492a412888981e92881baf84",
      "Id": "b67b6cf527534f0881c4d291a2e2201f",
      "IsHidden": "False"
    },
    {
      "Start": "e8b199822e164f8b9bc97eb0ac17cf34",
      "End": "bf1ac8742678450993ad686a4a22b9d1",
      "Id": "afea8ff29b4442f7954f327ec5b2dc12",
      "IsHidden": "False"
    },
    {
      "Start": "e8b199822e164f8b9bc97eb0ac17cf34",
      "End": "df4b06775e8f48a0b7488cfb15d2f25a",
      "Id": "bd91c2aacb124a1c9fa441fd547f2bcd",
      "IsHidden": "False"
    },
    {
      "Start": "bce51a2022e84625a25c5c01f2472ae5",
      "End": "9c98d44f011a467bb08c0895d0d278cb",
      "Id": "4a63c10bd2a94955939972202e9a89a6",
      "IsHidden": "False"
    },
    {
      "Start": "f05097eea7c5471387da5b36dc1575e4",
      "End": "3973042d09014f5eb556b18b160395eb",
      "Id": "11392f26eb6743988c32b0ffce4117e9",
      "IsHidden": "False"
    },
    {
      "Start": "2b25c5f912104ebcb10f5ccd1850b3ef",
      "End": "c21fc99f5809494a8e616f5f259b780a",
      "Id": "7823e43b972448b4a429cef8abf2c02f",
      "IsHidden": "False"
    },
    {
      "Start": "0853e08af6b94966a1a34bab026156e6",
      "End": "d538e6f681584263b58644b25d32083c",
      "Id": "8383086797b74e06a05a3318efb9b2d2",
      "IsHidden": "False"
    },
    {
      "Start": "234b7845e65346dbace5e32dd85b2b30",
      "End": "92ba852ba03147c7a2eac7f434b5ffbf",
      "Id": "7a398e9a50b64d8c9ddfda5fbd037603",
      "IsHidden": "False"
    },
    {
      "Start": "234b7845e65346dbace5e32dd85b2b30",
      "End": "f8a9a322ea494a8b9880911de360797b",
      "Id": "609c4f83d94540769614a7f12e0a1b23",
      "IsHidden": "False"
    },
    {
      "Start": "5b25a29c8c28434aa7ca0fca714c0be8",
      "End": "7edea94220aa41469bfe134ce5598a2d",
      "Id": "8eb54e262f5847ce836a463e3eb713b4",
      "IsHidden": "False"
    },
    {
      "Start": "c0b3cbc59ea34a12b35183e49e7b1c01",
      "End": "1153ae5d4aa9417b845931171267363d",
      "Id": "b2d840f5c8ff4573bfb0234382b97242",
      "IsHidden": "False"
    },
    {
      "Start": "58963c8d403144df804a95c632874b8c",
      "End": "eafc413fbbfa414b96127cd56b27d3ec",
      "Id": "12a8532518cf418faab8533305069ffa",
      "IsHidden": "False"
    },
    {
      "Start": "3d419ad5b7f649f4855182cd01ec33fa",
      "End": "2e7559bd1d984c84bc8d637ca1bdf5e9",
      "Id": "d98d111f07114fe69a2ea8bcd112f530",
      "IsHidden": "False"
    },
    {
      "Start": "ce484a6448ec41b68b9aaf7ceab7cf3d",
      "End": "7b92e3e5ed914100972fb98872057bf3",
      "Id": "7af7a23ad446476f92e6741ac028c090",
      "IsHidden": "False"
    },
    {
      "Start": "5a1ca008563c41f38ca9fb95c533746d",
      "End": "b04bb955924d47efa4de9f957d3acb96",
      "Id": "10a4774b1944429fa3a156243031d379",
      "IsHidden": "False"
    },
    {
      "Start": "831f42d087ab48dcaaf5a3c823061ec3",
      "End": "033de1f7b35947e5b34b26f57a29d114",
      "Id": "ee91234d4ded4668b4a52f4d984e13e7",
      "IsHidden": "False"
    },
    {
      "Start": "c4d86afd27e844649e413060274d93c5",
      "End": "c460368247cd41ccb1d6edd12a32091a",
      "Id": "d610c482c08e436ba62b9561b6ba9d45",
      "IsHidden": "False"
    },
    {
      "Start": "c4d86afd27e844649e413060274d93c5",
      "End": "81525dc705c7496086ad9745ee621337",
      "Id": "5167bbf376ec4bc38032d9e4832229f8",
      "IsHidden": "False"
    },
    {
      "Start": "a0cb28e544df42c29cc8ea8e2bc065ee",
      "End": "52edaaabe40042cd8a4ec72892a35c2f",
      "Id": "7d98b1ab6db24aa58f8f0d46df8c996d",
      "IsHidden": "False"
    },
    {
      "Start": "eaec6c534f09402999132a8fedc19917",
      "End": "12981ca5fdc44b039272fc20fd072d06",
      "Id": "65803b6efc8c41a4977a3c4734aaee3d",
      "IsHidden": "False"
    },
    {
      "Start": "9e2bba49b808407b980fed7da315b67a",
      "End": "972a0cbc3d964052b8d6a254b44355c4",
      "Id": "b7b035b92a8a46eab988458f15f4d57e",
      "IsHidden": "False"
    },
    {
      "Start": "7edac3ec73054a1ebed2f189a199e048",
      "End": "265a2996072446d6ada76d37a582e197",
      "Id": "4fa2e596523f4f608c91e183ce8334e1",
      "IsHidden": "False"
    },
    {
      "Start": "36fa05e36b864556ae8e3d79a2ba9171",
      "End": "204d1f073836479ba840ce4a515bdd63",
      "Id": "629fbd2d1a314d9fb4827d80a5e66e5d",
      "IsHidden": "False"
    },
    {
      "Start": "4e724114da14403ba8119c10a9e0ab9e",
      "End": "688acdfcd94a46f49ef5315149910834",
      "Id": "c5d226ed56c641e485baf8ab857b0eeb",
      "IsHidden": "False"
    },
    {
      "Start": "ef4f4efb739d4ec68a86fb396398a8f1",
      "End": "3bbd14f0ddcd4513bc64cd00ffa9fdd7",
      "Id": "38a43a601a5b4f59abecb33b85fe87bc",
      "IsHidden": "False"
    },
    {
      "Start": "273591eef7ef4e73a67f6e99a16b53f5",
      "End": "8a262b40a06a4fcdace87a8bf2e2bd88",
      "Id": "5da58111c6e64987abe5e19a55b800fe",
      "IsHidden": "False"
    },
    {
      "Start": "1422b317f4cb48abb970de424b864c6f",
      "End": "fdb7915392654d4096d49af37d46cf0a",
      "Id": "6b3b090053bf4bbdbb73614911f1081a",
      "IsHidden": "False"
    },
    {
      "Start": "1422b317f4cb48abb970de424b864c6f",
      "End": "5308854c91fe4403a29edf03cf8934c5",
      "Id": "50827a8c8985461a96f7bef2cba18ef5",
      "IsHidden": "False"
    },
    {
      "Start": "7d612d0630e942c89c2403bd85743678",
      "End": "220ad2a392c643da8a2ce1f17805d71f",
      "Id": "e43dfac13d0040d098c24b7ffe4d247e",
      "IsHidden": "False"
    },
    {
      "Start": "54e30df995a34eb4bce30535f7be38b5",
      "End": "d3258a7013264e9a90b839bf3d56d2b2",
      "Id": "cbb1a04337b64a4892176f09d4b2227b",
      "IsHidden": "False"
    },
    {
      "Start": "141eed266dfa4e5d82885c66cb3b5adf",
      "End": "925acb47371247ddb7bb41e8943e066c",
      "Id": "cce07e1f2c5846029ea955eb794bbe4a",
      "IsHidden": "False"
    },
    {
      "Start": "c1fa0d9d3bef4adfb4a1171215e7e8fd",
      "End": "f9f7ede6bb03439d8000d11df3b0860c",
      "Id": "eb9d902482f441a39e4b2ffdf467c68d",
      "IsHidden": "False"
    },
    {
      "Start": "91819bb9b9a248e088db11b01ef2ef75",
      "End": "751596bbddc34d84a92b7aa75e4dc368",
      "Id": "745692e09af84d679cd42b3eac9ee690",
      "IsHidden": "False"
    },
    {
      "Start": "9cae6a8a45024a34a5d179a1b1d20d74",
      "End": "0af7b821a504461f85cf1bac1da5f816",
      "Id": "2272ed5d144141b28e3ae81932f5328a",
      "IsHidden": "False"
    },
    {
      "Start": "088e8eb3ad95444a80645c67af394d98",
      "End": "a3d2d2a0878b47a69f629258ad94919c",
      "Id": "ca7e690c89a7467a89dbe288fbedf978",
      "IsHidden": "False"
    },
    {
      "Start": "5cafd931577c4afcaac9705d7f3ed2b7",
      "End": "b0a5dbc32a264d53b517cfa4afcdc201",
      "Id": "e86eca14449a414e8b8085db65393162",
      "IsHidden": "False"
    },
    {
      "Start": "a102319ef8b8439899225f9a3454d0de",
      "End": "027112159fe34a75b795ca1fd79280db",
      "Id": "b7dcf35401fa4ba4bab20620f3672ebe",
      "IsHidden": "False"
    },
    {
      "Start": "9ee30e4398fe4050a6d507e49a9ed6e2",
      "End": "1c84bc19960e46f98be60603f60a50cb",
      "Id": "12349f1f581a4cd39757051951d50702",
      "IsHidden": "False"
    },
    {
      "Start": "151bd1d7120443768397659853e29f76",
      "End": "79757e6f36ae41db912a71b567893d82",
      "Id": "460a3bd9fa9b4c95b89af1012933e79f",
      "IsHidden": "False"
    },
    {
      "Start": "4e40336191af4df589b306aa31e8a3ed",
      "End": "ea00899eca3540a4990aa08473db08b7",
      "Id": "f7d69dbd0ac843939f0996790cf88696",
      "IsHidden": "False"
    },
    {
      "Start": "7e155812503541078481b8881fba8134",
      "End": "5d47d345a13c4e45909dc58ea58ba32c",
      "Id": "0c5d53b65cfc4132a83d361f7b86c519",
      "IsHidden": "False"
    },
    {
      "Start": "7e155812503541078481b8881fba8134",
      "End": "cd652924ceb94eeb8aac1c056634a856",
      "Id": "ce500168aafd4ad1a71dac127eba12bc",
      "IsHidden": "False"
    },
    {
      "Start": "7e155812503541078481b8881fba8134",
      "End": "31a33b9403074278bdb5d92de4da3311",
      "Id": "d7bd09701e7940c4b4e9d587c43168b9",
      "IsHidden": "False"
    },
    {
      "Start": "5ac4a2c465994191af45f4f77ed70088",
      "End": "5b6c6d337cdc47119cc38ae23d54b03a",
      "Id": "e1aeff941e704d5e87bc4ea692009702",
      "IsHidden": "False"
    },
    {
      "Start": "5ac4a2c465994191af45f4f77ed70088",
      "End": "8f63623e6ad440329e419a497ad150ba",
      "Id": "d1a0db068f6648feb1b3eb3491edf5f8",
      "IsHidden": "False"
    },
    {
      "Start": "5ac4a2c465994191af45f4f77ed70088",
      "End": "ac76d3c5dcef444eb18b3455b9d82277",
      "Id": "10c5175c04df47aab844851265893d52",
      "IsHidden": "False"
    },
    {
      "Start": "11149d7fe04748e79eb080b753d15949",
      "End": "87ba448b7b614765ad4d47fb2251d5c2",
      "Id": "eb866f482e0d462c825edc1d8965c0eb",
      "IsHidden": "False"
    },
    {
      "Start": "749e863c13e94985a7fd58f6de69a578",
      "End": "0d8c353620ef45feaac2080843bd26aa",
      "Id": "2fea8f3e9d9c499583a52906860b0cd2",
      "IsHidden": "False"
    },
    {
      "Start": "749e863c13e94985a7fd58f6de69a578",
      "End": "5e6de892d3744368be95d5d150b413a4",
      "Id": "f2ebdf92723a4ecfa2582a21aaead269",
      "IsHidden": "False"
    },
    {
      "Start": "f09f57ebd5944118bcd07354ad11de23",
      "End": "b25e8320e93f4e87805c552bd8d95fe6",
      "Id": "9d323f1eb4704defb8497338711cbd15",
      "IsHidden": "False"
    },
    {
      "Start": "d9ec63036dda44f0a07d5dbc5d2132db",
      "End": "80cff19d51824c6cab9d333ac24c5ede",
      "Id": "e97252929a4e46cba1086634f1a0a218",
      "IsHidden": "False"
    },
    {
      "Start": "d9ec63036dda44f0a07d5dbc5d2132db",
      "End": "dcf2ece369094458b864b1ed8b3b1ea3",
      "Id": "f95f662fd5bc4ea88f9037cbd45f66b0",
      "IsHidden": "False"
    },
    {
      "Start": "d9ec63036dda44f0a07d5dbc5d2132db",
      "End": "f878bb216826419588d36beed3e2ace7",
      "Id": "fdcde419e8e84ff48d5e311efafab03c",
      "IsHidden": "False"
    },
    {
      "Start": "9d60280eeebc4fb9bbb1daadc97ee5aa",
      "End": "3c173e3723484ab39441655fe1555224",
      "Id": "6c16bfc3a1f249d6a407badb5147ce70",
      "IsHidden": "False"
    },
    {
      "Start": "9d60280eeebc4fb9bbb1daadc97ee5aa",
      "End": "743c52e3c78647498273e717532f704c",
      "Id": "b3273e9b4c1441ddacf440dde4a7d125",
      "IsHidden": "False"
    },
    {
      "Start": "d21c79ac979540899bf528bf9ec0f4a1",
      "End": "0765d114870545cab0078f3c93bdc648",
      "Id": "76c2f3025e43436988aee1132579a692",
      "IsHidden": "False"
    },
    {
      "Start": "8c439e2e682d4f63b59ea95be2cb7d81",
      "End": "f9ec35dc67c5445392e60eea8a0167c5",
      "Id": "3df50277f591449fbd7aea70a3651f3d",
      "IsHidden": "False"
    },
    {
      "Start": "97b7daad959f4079a3cd637b10a09eae",
      "End": "a795765c2b0049808f5d212ea66205e4",
      "Id": "cb63cdcdcdb14375a69bdadb922cb1f5",
      "IsHidden": "False"
    },
    {
      "Start": "97b7daad959f4079a3cd637b10a09eae",
      "End": "2b45f8349e9640cc9ac1b3e43ee71b35",
      "Id": "4741f0bcd0c7480eb59af78337841edf",
      "IsHidden": "False"
    },
    {
      "Start": "cc3859c92a81447d83f6b5b6764c8dc0",
      "End": "e27c4bc9a44747e9b97de52c60a4679c",
      "Id": "d75da40f3f8f4bf3a1794691aca4221f",
      "IsHidden": "False"
    },
    {
      "Start": "2cb34b7b946040858dd402392e524877",
      "End": "3e0e941f0ec141a18dc44b45536c6ec7",
      "Id": "4184c052cd104e8aa63da473b92e9982",
      "IsHidden": "False"
    },
    {
      "Start": "dc25ed5c7ce143db8ca13c5f1ab9c140",
      "End": "13f15e720d7949c2ac809f81fe566258",
      "Id": "d3e4e19941cd42dc8a4bcdc4d039596e",
      "IsHidden": "False"
    },
    {
      "Start": "a3991ea4155b492cb0c1e95409551c64",
      "End": "7f3a001842114962b3a09e805c381621",
      "Id": "91d71048e8a246159e1c34013abb7347",
      "IsHidden": "False"
    },
    {
      "Start": "a3991ea4155b492cb0c1e95409551c64",
      "End": "e9cbe12fdf794c37b0724718d20cfa74",
      "Id": "26edbc6296ef4cae82ba98d0f57bf006",
      "IsHidden": "False"
    },
    {
      "Start": "72d7a98c4f31413f8d2bd1e07ad4fe38",
      "End": "0ef2f9def5b040f1841ed73c2bf6be37",
      "Id": "8147d5b3b2d54e0dac7f324f963d6adf",
      "IsHidden": "False"
    },
    {
      "Start": "fda423761fb944548f1909dae159f711",
      "End": "3a659bd114ed4ce99621f478b8089583",
      "Id": "4f13e1d7250c443497839b41774a727b",
      "IsHidden": "False"
    },
    {
      "Start": "6d8ad8dd94bf4b089026a8dcd3f45e07",
      "End": "e081950312e848ef8ef27870c030d4e4",
      "Id": "d2b666de76494a3cb3901ebf81cdc8c3",
      "IsHidden": "False"
    },
    {
      "Start": "b854e3bca18248ce8766a7fa7b45a485",
      "End": "d0c49aeebd34466d88fc63024f464a47",
      "Id": "229ced2a177a479da363f59aeaab4fc4",
      "IsHidden": "False"
    },
    {
      "Start": "673f2e413bb54d759ef2ff056d6ec5bf",
      "End": "6b436653466b4cd1b8512377eb06e6e8",
      "Id": "08428bdd5f1544078dd187760eaeafed",
      "IsHidden": "False"
    },
    {
      "Start": "673f2e413bb54d759ef2ff056d6ec5bf",
      "End": "f8fd0cfc132a4cd3b0c2f36af0662ad6",
      "Id": "2ca92d30728b479ab151b6a155a6e918",
      "IsHidden": "False"
    },
    {
      "Start": "1ebc3f27361344508cae05633e3ae8a3",
      "End": "e167867126ad43568d1d205f5620cb90",
      "Id": "a4fc188bb72540168bdeca53845d1957",
      "IsHidden": "False"
    },
    {
      "Start": "1ebc3f27361344508cae05633e3ae8a3",
      "End": "a6e06c1ac35643dda3625d813f6d1588",
      "Id": "db28d963e6254e8ab4ec2b60332b9b6b",
      "IsHidden": "False"
    },
    {
      "Start": "77c89018ab6041819ff8a0e037b432d6",
      "End": "94e47038c698472fb2544428fc43ed69",
      "Id": "828ca431ce6246d18381aa1d7cc1dd82",
      "IsHidden": "False"
    },
    {
      "Start": "77c89018ab6041819ff8a0e037b432d6",
      "End": "6705523ae4f2440c8a56fd77dfe2a81d",
      "Id": "d9607fcc38ed4c6587de8bbda50f26e9",
      "IsHidden": "False"
    },
    {
      "Start": "dfa25c6d78b14ae38aa629f3accf3c1a",
      "End": "244787f736414818a4eefc36c7318372",
      "Id": "7088ff2caaab4f74b122ad96746314cf",
      "IsHidden": "False"
    },
    {
      "Start": "fa229ce868ea4fb3bdd080a5aae42f65",
      "End": "883eabb54f664f79909d26325e33b27c",
      "Id": "598cc1b72a8f4dcebb27c9d57c155f40",
      "IsHidden": "False"
    },
    {
      "Start": "44eb89999f5d497a8ada1938568f5a45",
      "End": "cf78692d77a141589db5129ffbdefc03",
      "Id": "c2e82bd2456a4fd390c13b7258fa27c9",
      "IsHidden": "False"
    },
    {
      "Start": "54d0ed829e9749caa08f1a6102276119",
      "End": "78f2bd89d69940ff8ca590a4b630d8f3",
      "Id": "e388eebcb99044729da8dfa5a3c24540",
      "IsHidden": "False"
    },
    {
      "Start": "5e29affc502046a9b209ec1bdd092f09",
      "End": "0b1e5d3e1ede4f548b9d16ca3a8ecca6",
      "Id": "c521537dcfe441eb9540b66880f0ec32",
      "IsHidden": "False"
    },
    {
      "Start": "f61880eb415d46a895f22ba576522481",
      "End": "890f36b19ae44728ba34023a67aa6aa4",
      "Id": "ba430235c4de4af7b65f0df5bd057a84",
      "IsHidden": "False"
    },
    {
      "Start": "0b475e68e9ea43f1a88d8c39f8b2cb31",
      "End": "2a2ceac0f30e4c0a9f4d3dc38bd65b45",
      "Id": "405abe0012db47ea86b2fc925872db87",
      "IsHidden": "False"
    },
    {
      "Start": "a631be710c2e492c956ada3b0f691ea0",
      "End": "381cba9eb6034e1cbdf40357b10b70de",
      "Id": "fc767372d40e4eea8f46e76fb9f9a1e3",
      "IsHidden": "False"
    },
    {
      "Start": "a631be710c2e492c956ada3b0f691ea0",
      "End": "6c398662fa6149678cc8fabc1f8b4872",
      "Id": "2fca40b8393447ddb37e807bec8e02db",
      "IsHidden": "False"
    },
    {
      "Start": "a631be710c2e492c956ada3b0f691ea0",
      "End": "435b68f70d12414c8680f8df161e8592",
      "Id": "8096b919f6e44034a4131feda11bbdd9",
      "IsHidden": "False"
    },
    {
      "Start": "32df692f068d4ed19cdc022476fe4889",
      "End": "16a1037bc70e4957bbb11e492016ae48",
      "Id": "a251a32dbdcc49b68bd9d7f6c6267f56",
      "IsHidden": "False"
    },
    {
      "Start": "32df692f068d4ed19cdc022476fe4889",
      "End": "806eb9b83bed4f4cb3ecc105193e6cdd",
      "Id": "dd4ae1e7ad7f430cafb8206c6df09a16",
      "IsHidden": "False"
    },
    {
      "Start": "32df692f068d4ed19cdc022476fe4889",
      "End": "253ff9796544441f8789ce86dc524a3d",
      "Id": "cadbd786483b47a09efcd917a4e28400",
      "IsHidden": "False"
    },
    {
      "Start": "413316bb2dc14119ad94a62a8e8c15f2",
      "End": "530ef4e7474c4f0e8b98ccb8649ab813",
      "Id": "48cfb005535e4009848420705587a1c1",
      "IsHidden": "False"
    },
    {
      "Start": "48053f3d7e844ecc8d648a42d9fd87ae",
      "End": "43be417760434b529629620763c7b641",
      "Id": "38f4d77018bd4e4d9fa8d33f0d1357ef",
      "IsHidden": "False"
    },
    {
      "Start": "20e80b34ae294bc78abc00880a9c2bb6",
      "End": "fd527aaf5c6a49249155d1bb997bfe9f",
      "Id": "6bbc318d2a554773bb8214adf6377d04",
      "IsHidden": "False"
    },
    {
      "Start": "c4d27915eb3a47e2941dd0ba55945622",
      "End": "aac2f5dc037f4775823ffc50636fe047",
      "Id": "b8b7e86b5d084efa93488f28507732ea",
      "IsHidden": "False"
    },
    {
      "Start": "aef9929193ef45c3807e6245d03584ac",
      "End": "a601fbcf03bd496bb583d1a3be95e2db",
      "Id": "1f4a86f524634b60a8ff7ae4626a0d29",
      "IsHidden": "False"
    },
    {
      "Start": "e055ec534db6453682ecabf99346e257",
      "End": "4cbbbbaecb25428fb07b05969fa72814",
      "Id": "ba9c9e7164944403b5f81f60d2bc2238",
      "IsHidden": "False"
    },
    {
      "Start": "ec1cf4e7eaac49cba5c62a7729602e9a",
      "End": "81e795e5b42e4311b351d3dce078a693",
      "Id": "1530c28b9a0647f8a4fa0b7006e03468",
      "IsHidden": "False"
    },
    {
      "Start": "39da84c3872b4e409b9684fc8fa6877c",
      "End": "15e469b43d994662bd8ab15f40a189f7",
      "Id": "b337c6c0aab546748e531e8fea622009",
      "IsHidden": "False"
    },
    {
      "Start": "709174d2844b4a90880e99d0da896dc4",
      "End": "6cba9632fe494a7e8a55b605cbcad267",
      "Id": "9cd1d3db64d7465aa19eb0a76e07add0",
      "IsHidden": "False"
    },
    {
      "Start": "3f428734ba634449843f0762c36c102c",
      "End": "9de4ded09dee47e4b978a048410816ec",
      "Id": "b12d8d259cf34147bb07e3bc4cedeafe",
      "IsHidden": "False"
    },
    {
      "Start": "7c9524773ca84175aa03e0715d01bdf6",
      "End": "e86a5d06755144f49ebe4f4e9d2bf01d",
      "Id": "63d2e29831254301a9fd0ecfffa8d8c4",
      "IsHidden": "False"
    },
    {
      "Start": "9a2467533ded4b4a82a8c321b1f1bf4d",
      "End": "2b32af7e5be14ada983821badca0ce1d",
      "Id": "9a2b34d3efbd4e34a267f075b3329e49",
      "IsHidden": "False"
    },
    {
      "Start": "b2bc4cedac86407bacf013630aebbd73",
      "End": "9b09be5abfe74c0586d230095169a48d",
      "Id": "518edf03c7d0444ea06dc74c5557f074",
      "IsHidden": "False"
    },
    {
      "Start": "991709dc8135420f9dca0d2e57c9cea7",
      "End": "e79afc2b23d04cc4b29824b0a33f2f31",
      "Id": "9319538562214b729172b567e640eb65",
      "IsHidden": "False"
    },
    {
      "Start": "991709dc8135420f9dca0d2e57c9cea7",
      "End": "7757b2e08279415a906c1fb138f365fe",
      "Id": "17d00841ffa649cebe9df736c372e339",
      "IsHidden": "False"
    },
    {
      "Start": "991709dc8135420f9dca0d2e57c9cea7",
      "End": "a6c5eb185a3148c7a0fe547fbe29dc3f",
      "Id": "4022b8d61d2f424caa5f60aff90a1760",
      "IsHidden": "False"
    },
    {
      "Start": "991709dc8135420f9dca0d2e57c9cea7",
      "End": "085c4b13d3e84ec0a0c1de5c898004bd",
      "Id": "20ac9c1ec5e7452892b3e8d999dbbf26",
      "IsHidden": "False"
    },
    {
      "Start": "51cdc7d8607740cf8f21b666502a542c",
      "End": "3c4b154f6cd242f1b5110e43efa49772",
      "Id": "33595bca86f1477795faa9de22fbd0cd",
      "IsHidden": "False"
    },
    {
      "Start": "51cdc7d8607740cf8f21b666502a542c",
      "End": "f4aff084fda04a44b35ec8f0ab5cc86c",
      "Id": "9b0e463a48424c41b5b002b77fb96190",
      "IsHidden": "False"
    },
    {
      "Start": "51cdc7d8607740cf8f21b666502a542c",
      "End": "79ba88b2d1144caf9e86809412ad4ad9",
      "Id": "a314299dffd14e8280e3cc40b65c2f85",
      "IsHidden": "False"
    },
    {
      "Start": "51cdc7d8607740cf8f21b666502a542c",
      "End": "0d630f4cf10e416884ea597d5b84f2f6",
      "Id": "e17f7ddb332a4df6b3b1aefb439373d3",
      "IsHidden": "False"
    },
    {
      "Start": "3c81780506534583b52fca3a85d7b80e",
      "End": "2f2ccd7164574261863a540ae6b92534",
      "Id": "b03dbfa331d04960aeb113e24b16ee37",
      "IsHidden": "False"
    },
    {
      "Start": "cac301b8df184cd38569d72f0c68fdb0",
      "End": "bd3a952562d24dd7ad57ce7969008be6",
      "Id": "e1160f30a3144350b3927ae9f3808d30",
      "IsHidden": "False"
    },
    {
      "Start": "cac301b8df184cd38569d72f0c68fdb0",
      "End": "0f1c587ea7a44dc297741c011b8d0efa",
      "Id": "6d3cc9e342f641109fc7d0eb02170228",
      "IsHidden": "False"
    },
    {
      "Start": "48c2d18477184188a3454fc0f615330c",
      "End": "82c4869e490e4e8ea908480806dfb569",
      "Id": "06291dc8fd4c4f5095cc057214884fc2",
      "IsHidden": "False"
    },
    {
      "Start": "94939f722c30424c9d5cb658cf80dcfd",
      "End": "7c680cfd20fa41caa849c67abdce8e26",
      "Id": "589b0e29c6a849ab9052313904f66e67",
      "IsHidden": "False"
    },
    {
      "Start": "c804be629fe4464d94d2bf1032cb314f",
      "End": "47cb1e3f093f4ead8a393d1f9e2e52c7",
      "Id": "a601750a0d474bb2ac5412e88bfec77b",
      "IsHidden": "False"
    },
    {
      "Start": "c804be629fe4464d94d2bf1032cb314f",
      "End": "e9531eb0f2504f3f940b256557373703",
      "Id": "92e2c840ad3e48688337485245e9fa64",
      "IsHidden": "False"
    },
    {
      "Start": "c743328f20ab4f398f1b05584055b441",
      "End": "086664237e6b4d6c880660a4e33fbcd0",
      "Id": "92e14673b4074d78892ee1b19b1e710d",
      "IsHidden": "False"
    },
    {
      "Start": "b95216b8b6574c0c9e3033a54adb1166",
      "End": "30949d0e04194601b578c24ae22f330e",
      "Id": "3064991baada47649828c3d091345a22",
      "IsHidden": "False"
    },
    {
      "Start": "b95216b8b6574c0c9e3033a54adb1166",
      "End": "fcbf5375e63747edb98503b200af1db9",
      "Id": "f458fb8a87af4562a2898b41c5b88c8c",
      "IsHidden": "False"
    },
    {
      "Start": "f85e98893d21441fae7606db707120ea",
      "End": "3510283341ca4e6a9db151012d8cd578",
      "Id": "6c1d14fb508748a7b32360e89cd70b1d",
      "IsHidden": "False"
    },
    {
      "Start": "60b2f73a2c2d4cfbab99b2e1480e2d98",
      "End": "aad24d52d28341c6815c4fed8b4bc105",
      "Id": "d00f59ab74d8482f88f9d56a513e9b7f",
      "IsHidden": "False"
    },
    {
      "Start": "e2928f8affe147beb21b869a74f51a73",
      "End": "bb6f0306eb8a4f7b83a1f89d766d6e7d",
      "Id": "aa3129e8008a46218142d5f18f1dce0a",
      "IsHidden": "False"
    },
    {
      "Start": "92d3b77f64474b99b4246dccfacc5c95",
      "End": "3643b480da084db0a42f3fc76abaf172",
      "Id": "01a0d15cca86444c81b1eb7803b31b5a",
      "IsHidden": "False"
    },
    {
      "Start": "74bc5a7c19ec40b2b9cad6ee66e5dd40",
      "End": "6f8a50b9c00d4c29bdfea3ebd5476fcb",
      "Id": "f13e072748514238aa6fcb13d08f99d2",
      "IsHidden": "False"
    },
    {
      "Start": "74bc5a7c19ec40b2b9cad6ee66e5dd40",
      "End": "ff120902446c4200a6404ccbff720771",
      "Id": "14d70200063b42fea241371675ee3014",
      "IsHidden": "False"
    },
    {
      "Start": "bdbcb50da2024d8f9c94c751980a99c1",
      "End": "89cca748cf0647f5883c85609d80c3be",
      "Id": "d95c59fc81f04c64acdea97d0a0e8938",
      "IsHidden": "False"
    },
    {
      "Start": "bdbcb50da2024d8f9c94c751980a99c1",
      "End": "9f8d38ddb26c408293d1c22607f3609f",
      "Id": "1ee7f8aaac4046bd80a5d5d4b2776a1a",
      "IsHidden": "False"
    },
    {
      "Start": "bdbcb50da2024d8f9c94c751980a99c1",
      "End": "2c7cf6166054466bbd055083fdc4eb13",
      "Id": "5d9f7c3918514344897fde2c4770c13f",
      "IsHidden": "False"
    },
    {
      "Start": "2143589aafa5458a83a084d90a897dad",
      "End": "38b5aca01f944330b9446f39e680d11b",
      "Id": "94ef828d2da74fc683d8b887751c8244",
      "IsHidden": "False"
    },
    {
      "Start": "2143589aafa5458a83a084d90a897dad",
      "End": "76b44519429f4d90a176466260146ccd",
      "Id": "9896d8045b524c5fbaf267a1da0c33cd",
      "IsHidden": "False"
    },
    {
      "Start": "935b4473a52249ffb1581703a731f9a4",
      "End": "2468de41a8244a2d9ec4df2b0cbbc007",
      "Id": "63c83aa0fc2746e5a410ea55496ed532",
      "IsHidden": "False"
    },
    {
      "Start": "935b4473a52249ffb1581703a731f9a4",
      "End": "827f791f248d409881af20fc3553f956",
      "Id": "a5ef62cf7c46442eac3307e249c10a40",
      "IsHidden": "False"
    },
    {
      "Start": "6ce51a99dda546eba0268bfe08856dff",
      "End": "ed6135fc0dbe4f6a8018fe9e0057e8a6",
      "Id": "1136118c07ca480ca49ab0b097d219a3",
      "IsHidden": "False"
    },
    {
      "Start": "042b1fe960e14bb2986bb7d400c48916",
      "End": "4bef136d0b164453b5d3eea7be781e17",
      "Id": "a3250bf852974e219f2ff71f5776b8e5",
      "IsHidden": "False"
    },
    {
      "Start": "3d51f61ce89d4f388f3d1e941a16312e",
      "End": "119ce72e73914acfb7d5e6473a0d08de",
      "Id": "f9a63bb04bcb4d2ebec7b8ff8750717e",
      "IsHidden": "False"
    },
    {
      "Start": "adef2b7ed38a4a50973cf2a4b6d1536f",
      "End": "d79433e566334747b5ca03af661cc055",
      "Id": "f236270346464b85b49751e4d9980799",
      "IsHidden": "False"
    },
    {
      "Start": "adef2b7ed38a4a50973cf2a4b6d1536f",
      "End": "df3e859f289d4002992f06200a529331",
      "Id": "77967dae924e4ddd9c861ed31289774f",
      "IsHidden": "False"
    },
    {
      "Start": "adef2b7ed38a4a50973cf2a4b6d1536f",
      "End": "929db225a77d49c5b64d38b5e7ae21ce",
      "Id": "3119c737130f4e3f92fe62db6b145b4d",
      "IsHidden": "False"
    },
    {
      "Start": "8c9c96c19a5c4aee86903612ac0d9a1b",
      "End": "a874f0a02e41464f97a4a62876e7b638",
      "Id": "1e6044d754fa473b8fadf14a0ed8bf5c",
      "IsHidden": "False"
    },
    {
      "Start": "8c9c96c19a5c4aee86903612ac0d9a1b",
      "End": "6a79fb771703467aaa79f00f78796564",
      "Id": "1094c96efb6046e29c4f943f425552fe",
      "IsHidden": "False"
    },
    {
      "Start": "b78783cafe614644930c49304ef116b9",
      "End": "ca2ee5c79d544b6c8ee9ad26787bac0c",
      "Id": "4d6f46fe241a42698e0a71b6c8bbc49d",
      "IsHidden": "False"
    },
    {
      "Start": "01a95ff6c50047b589857ce05b3e4fa2",
      "End": "229fb56396cb4906b8c8d2952053980f",
      "Id": "f11839f3159c40a2b735e75f958fe97f",
      "IsHidden": "False"
    },
    {
      "Start": "01a95ff6c50047b589857ce05b3e4fa2",
      "End": "e09dd91492614a229179c8e4e8aad0a9",
      "Id": "7e29fba43f634b9db35a7a84a756ab94",
      "IsHidden": "False"
    },
    {
      "Start": "669d3501ef274346b8175df646fcfee4",
      "End": "48f7154dbe5f4a32b58a847ec2cb0de8",
      "Id": "3705447173644526977dd8655e5bb415",
      "IsHidden": "False"
    },
    {
      "Start": "669d3501ef274346b8175df646fcfee4",
      "End": "87e59845ed6149feab7b7a92c1b8d6af",
      "Id": "957be2affb26448bb5401d83f12fe02d",
      "IsHidden": "False"
    },
    {
      "Start": "fdc7450b6a624091933b057af37818c3",
      "End": "aeb5e3d931d941f8b968b6a0bd9ed215",
      "Id": "7153eed0e6ed44e3b570a34a40fae197",
      "IsHidden": "False"
    },
    {
      "Start": "fdc7450b6a624091933b057af37818c3",
      "End": "f7adb7db561e49628ac9d0c7f7ae2ebe",
      "Id": "388989a51d364e7b83d7dd2fef30e063",
      "IsHidden": "False"
    },
    {
      "Start": "beff988b5594404885c865a02fa0e6fa",
      "End": "ea26a6d9a291406ab3a76ee2b16bc581",
      "Id": "637cebe81a5e4013af21375790b8cf28",
      "IsHidden": "False"
    },
    {
      "Start": "beff988b5594404885c865a02fa0e6fa",
      "End": "a2721395cf5d4c63b926898275a1d685",
      "Id": "e084f566d90d4d9b81aa3872dadcdc60",
      "IsHidden": "False"
    },
    {
      "Start": "eaa4c3ab6d9f4edea60d6fb8db8c20d7",
      "End": "205a9b37051447368483809f8dab1d8a",
      "Id": "6bd62779ecb14382ba27a16895f968a7",
      "IsHidden": "False"
    },
    {
      "Start": "fb4bb4c7a2a4406aa3d329402596bccb",
      "End": "9e3ccd34230b4de89c55c9bb0a84f6a9",
      "Id": "9933fafc4c844e2cb5feedfe0bd6aa72",
      "IsHidden": "False"
    },
    {
      "Start": "eccf34f5b4aa4099ad64a2fc292c23eb",
      "End": "6d424bf0a5fe4a539f4c54d45fd05d42",
      "Id": "845e9ca96ce3448fb2db7e2db2cab4ce",
      "IsHidden": "False"
    },
    {
      "Start": "bb9a54b461804e36b2fca8fd33dedd14",
      "End": "3b3bd86a974f45e38333033b8ea64e95",
      "Id": "982d3ed4d5c84a2fb4409f80d3e40bc0",
      "IsHidden": "False"
    },
    {
      "Start": "fd5635f57fdc4d25a8be593582ba5ad6",
      "End": "951d0cb88e194be9a2ff7a2d9b42e913",
      "Id": "a728aa1c34864ca3ac98c776e0971dda",
      "IsHidden": "False"
    },
    {
      "Start": "57ecae6275184308b547fd2248add5b7",
      "End": "b22078a8fb46431195dbed6594cb4e17",
      "Id": "efbb6b71399743f5b8dd1f79f6b9b646",
      "IsHidden": "False"
    },
    {
      "Start": "4d6e83a891374ba29e934e097904f157",
      "End": "93dcd76448704a14b7bb364bc58d4e3e",
      "Id": "16e360d2905e4bb8aaf42ca79e6db462",
      "IsHidden": "False"
    },
    {
      "Start": "0a6809375a72457793040151b44ef951",
      "End": "9251eb7acfde4b7699ba858bea778f07",
      "Id": "d58d28c4c5b04da1bc28264f234feabb",
      "IsHidden": "False"
    },
    {
      "Start": "6741a87ee0eb430f820a7648f492a316",
      "End": "e4496a5ae9a0429eadfe406d23398feb",
      "Id": "ed5f2bb6724247968ae18cac3a86c5bb",
      "IsHidden": "False"
    },
    {
      "Start": "d7c27c50bb6e4ff6a2b642a976cbbdee",
      "End": "59a29c7fa1df46078b9ba728c7d570c1",
      "Id": "92c2ae0fae4246b4bebcbf75f3e6133d",
      "IsHidden": "False"
    },
    {
      "Start": "1c679400b3b0495fadc590230118aed2",
      "End": "0809d0aeadf847b8afb37a665e7997c5",
      "Id": "60d37bc812184c958e48b405047bdec7",
      "IsHidden": "False"
    },
    {
      "Start": "ab965aa0c3e94a1c9900b8488df253a1",
      "End": "b321dce9afc14d0bb40f312a094208f2",
      "Id": "e475cef3e481477bb168b6e1f68b44ab",
      "IsHidden": "False"
    },
    {
      "Start": "d0baa31f7ede4269a3b57d6e04d9444f",
      "End": "1061c0e9fe984337a367dc400fb9e29c",
      "Id": "9c9c81ed3c71493f80f7b5348bb222ce",
      "IsHidden": "False"
    },
    {
      "Start": "9d388651f37c4577b215c1d325e2752f",
      "End": "821aa0ae5a2a494586d5f7f9e342692b",
      "Id": "97dba62035d345269e05239402d58721",
      "IsHidden": "False"
    },
    {
      "Start": "9561f5431c4f42be98d663c668c9840c",
      "End": "cf0b6c47196e475da124140c94e818c4",
      "Id": "54c6c9532c68437392b9ea8c79c3862d",
      "IsHidden": "False"
    },
    {
      "Start": "9561f5431c4f42be98d663c668c9840c",
      "End": "358c9628f9fa44bbbc25eb296b3ca1c3",
      "Id": "69dc7045b54547fcabe7c1b986b32ed6",
      "IsHidden": "False"
    },
    {
      "Start": "9561f5431c4f42be98d663c668c9840c",
      "End": "29d8fac478a6488593f8734c75944b98",
      "Id": "7be769c2ed1c4af1a06ac7261596dfad",
      "IsHidden": "False"
    },
    {
      "Start": "9561f5431c4f42be98d663c668c9840c",
      "End": "41f858706ec44fd0a7a651883dc0a15e",
      "Id": "d1382dcba87242beb216e7672f03bbc8",
      "IsHidden": "False"
    },
    {
      "Start": "5d4bfaf84b2e42938c77201475ec4bfd",
      "End": "9e3ccc89acda4beabebcd67ef2ae9076",
      "Id": "88d93cbbe5ac428d955cf2e1ae93ae76",
      "IsHidden": "False"
    },
    {
      "Start": "5d4bfaf84b2e42938c77201475ec4bfd",
      "End": "0746f8fbb83749a4acb1547e8a86236b",
      "Id": "535645115f754e16bcd88ee3140f90f6",
      "IsHidden": "False"
    },
    {
      "Start": "5d4bfaf84b2e42938c77201475ec4bfd",
      "End": "e0073bafef02456c9a04b27e116039a8",
      "Id": "01fd9f8e1d134f9980add27e89394dd8",
      "IsHidden": "False"
    },
    {
      "Start": "5d4bfaf84b2e42938c77201475ec4bfd",
      "End": "970eb1ea28914542a46e4999a3cd4c75",
      "Id": "564a6e7dfbd04d9faddac508659224a3",
      "IsHidden": "False"
    },
    {
      "Start": "3a63fb12bb6c4313934e902c9f76255b",
      "End": "7264a87fd9bd47489cf85933d58cee53",
      "Id": "1416fa1a53ae4179b904466ff9b9dfe3",
      "IsHidden": "False"
    },
    {
      "Start": "bc1fccfda807406b895b2c25df3b1509",
      "End": "3076f30f9e094b4d9dda42fb21a3eaf1",
      "Id": "fba614fb10cf42f0885b89e7dea4555d",
      "IsHidden": "False"
    },
    {
      "Start": "f4ae32e560084ef39ebeaeaa0c9a6f76",
      "End": "3f4c30486052473ebc5900e3f24db27a",
      "Id": "3d00003912b14b03b8d35bc7c2238c13",
      "IsHidden": "False"
    },
    {
      "Start": "f4ae32e560084ef39ebeaeaa0c9a6f76",
      "End": "12a3324bfc3b42a697708db50b79eb43",
      "Id": "1c4d8b0ff0e244dabbba10b30463d905",
      "IsHidden": "False"
    },
    {
      "Start": "91faa0a8202f483995ea39dc39ed1dc2",
      "End": "ea48c10bfe6e487280e44e8e2336a5a4",
      "Id": "44ae40e868ee4c57929452c8e555ad8f",
      "IsHidden": "False"
    },
    {
      "Start": "0f38756209404a4183e6356168b8ce58",
      "End": "055313bd1fe046e0b05f74781542a6f7",
      "Id": "abd6308275424141a5b5cbb392f054b9",
      "IsHidden": "False"
    },
    {
      "Start": "14378d04e8ae491d8a55c34c8ee5a9f1",
      "End": "229599d42d7c4cd1b53b3a45d35b7b44",
      "Id": "dc041a5412254db28cb7ebfcb908deb7",
      "IsHidden": "False"
    },
    {
      "Start": "14378d04e8ae491d8a55c34c8ee5a9f1",
      "End": "30b7de3c19cb4f15b289b29505a69519",
      "Id": "d1d3c8c58e2d40e4bb88686968a2d408",
      "IsHidden": "False"
    },
    {
      "Start": "03bfc4c9b0e746f7b95cdf9affc4cff9",
      "End": "ddc14dff326a415da7ff1dac3a306616",
      "Id": "da3ab90525a34899a8b87055184970cd",
      "IsHidden": "False"
    },
    {
      "Start": "5248040726394169af7d8d13b48d5157",
      "End": "b779ef0f567b448391a967f3c2584d57",
      "Id": "6f12af83f063442ab7bb19fac5670112",
      "IsHidden": "False"
    },
    {
      "Start": "c723f6d272294625909044cf21bf9f3f",
      "End": "c03209aa4b2a4c0894f49f9717996c80",
      "Id": "725148c8dad041d587cd0d57237d1b18",
      "IsHidden": "False"
    },
    {
      "Start": "c723f6d272294625909044cf21bf9f3f",
      "End": "cef9823d666249649c5509cf56d1aed6",
      "Id": "15d2b2131a9a463db14128e323edaabb",
      "IsHidden": "False"
    },
    {
      "Start": "d138adab39184a51aca553fe1f5bf42d",
      "End": "7a93197f214f4a4c93ce9494e87c9db5",
      "Id": "5d2ec5abbe0c4d8a92834b7dcbda60d0",
      "IsHidden": "False"
    },
    {
      "Start": "ef10d13d28b549659d3f3841ffb49df0",
      "End": "670849877d3e4634a8ef78d91da95208",
      "Id": "1a7379c75b9f40de8013a41843cc6834",
      "IsHidden": "False"
    },
    {
      "Start": "818bd1fdfc6b4d70a19fc8a4ffe0e2b5",
      "End": "f5b9a4982eba4038b260a97ba72d8e59",
      "Id": "31444b8b07e34fff81d6fa2f98d97f0d",
      "IsHidden": "False"
    },
    {
      "Start": "bb3aa4faf2984d5ab24a3ac2b356390b",
      "End": "f0757fdec282450eac45a81c3b6b972d",
      "Id": "dd04f8532bdf4bbaaf141550b3f27dad",
      "IsHidden": "False"
    },
    {
      "Start": "bb3aa4faf2984d5ab24a3ac2b356390b",
      "End": "d354f13f7d704c72967628b7e464c3a3",
      "Id": "d4d3bf337d054d7d97c7a2109ae4d8ae",
      "IsHidden": "False"
    },
    {
      "Start": "78b0cc6343504963b0af3b44da1357f5",
      "End": "e3429a5dc9154928a0c0b408cfd8bf67",
      "Id": "09ab59bc892343fbb6a7b27167f5343a",
      "IsHidden": "False"
    },
    {
      "Start": "a8b8186c782644aa9680a79fee41bfe1",
      "End": "784b6a3aea744fe1ae8082a427d26df5",
      "Id": "cf499671cc7f441f9ed8d60413b00a64",
      "IsHidden": "False"
    },
    {
      "Start": "96fd7aade01b49ceb6e61c90c416cdc5",
      "End": "b36c3bd0643f4644ad59d969334504fe",
      "Id": "fbf1f93dd3ac4fed8d596d6565f3bca0",
      "IsHidden": "False"
    },
    {
      "Start": "96fd7aade01b49ceb6e61c90c416cdc5",
      "End": "ba7bae7d4bdb486ab3eaa3509d2f557f",
      "Id": "4e6a9da9d12743dc970233f17ba682e3",
      "IsHidden": "False"
    },
    {
      "Start": "34f2d3d1aa19425a87080f31533c587d",
      "End": "cf2420e30f7a43c5ae6fa9b92faf518c",
      "Id": "27db182727714831b3493ba7cea35923",
      "IsHidden": "False"
    },
    {
      "Start": "4648c15bd1b5470eb07aed6d79925b0f",
      "End": "f8ff3905f5e64739b72a74f67008cbeb",
      "Id": "bc5ae6c0c24e41d6b12363dff8abc6a6",
      "IsHidden": "False"
    },
    {
      "Start": "4648c15bd1b5470eb07aed6d79925b0f",
      "End": "9be234663f494c5495f1ac7c61900f37",
      "Id": "af225ba083f74ca7949fa62faec9bc4f",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "2f56d88b-a263-45de-b9e5-e074dbe52635",
    "3784aae0-dd38-4cfd-ac57-a87ebe885a81",
    "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
    "65f93a80-674c-4a98-9d0c-db3a138287e5",
    "2a75c2fa-c410-434d-87af-f9d59ee44c4b"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.6.0",
      "ReferenceType": "Package",
      "Nodes": [
        "964c67fc0c814a84a91113e19d8223a7",
        "fea9b2d4d2364d1dbd5e1ed237b0b7fe",
        "5df4fbc938ed4a5d9f9b5090e5edc08e",
        "429440ee8cd547bf8569028e555351ec",
        "5aefebc786da4423b68796ccbd0291ed",
        "7c025db7f0ef4c3aa2ea0e8a10c12ca8",
        "1b0aa7349d9f4f1ba7a670a7751d6f9e",
        "e12499a4685f47c9a1664a7d5b6da72a",
        "5ac67c3ea1ed4ebba3b14e8a1001c215",
        "5cb0c7b0009443f69b38a66dbe74c5f8",
        "b013cc977b414e2fbe8ad1e499587a74",
        "d076945453284774b6353fbe9458492c",
        "3e04a8735b174c58be933722c87c2ace",
        "2d781e2754454080978e39e99df50bff",
        "d8b2f27169cf4ff19e76c1fcda479ff4",
        "9bceecdc76f44afb8d23969c40321a44",
        "be8048c60e4e4294b5e1d5c28712e19a",
        "f8e4bc5a6833499091b9fa17b29d8e1c",
        "a6abddc2e95a401ba9af75488735470c",
        "3acdec91cc294978a358e03b2b63835c",
        "8e2b2679d3124bc1992936e8ddabd04f",
        "5a93a5fe911047878674f9dccc67b4c2",
        "8f4cd686745f4a54834f8dff509c592c",
        "f7d2005e229842be82c73e518c3a3e18"
      ]
    },
    {
      "Name": "spring nodes",
      "Version": "210.1.1",
      "ReferenceType": "Package",
      "Nodes": [
        "726a7c0398904b4c93489f419f22486c",
        "6b8eadca39fb4b4dbb277b0cdcba9853",
        "ff539f8a52f84b02a25af458195427f7",
        "94880211591643c7b7e84c20641f2edf",
        "2480940dbe3f444ab4c1216d45686b59",
        "444e099ce0f34997bfd593c31372668f"
      ]
    },
    {
      "Name": "Rhythm",
      "Version": "2023.9.1",
      "ReferenceType": "Package",
      "Nodes": [
        "1f2b48882c5e4024a43b0cb72713247d",
        "1df1bcd61b8b4bb580c4863957d452ca",
        "30b25f02536f44098e845b6fd766b38e",
        "aae757674dc144c897fa6af4115be329",
        "bf93309d23174a31b39b601666d591ab",
        "457c56611ed548d1ae17816006e128ee"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Element.SetName",
        "ShowGeometry": false,
        "Id": "964c67fc0c814a84a91113e19d8223a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8721.2651972696,
        "Y": 10878.33825175813
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "79b6e10786124e2ea736ecdd4ed1429a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8546.4110028963987,
        "Y": 11285.98570534423
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "29b4bec2eabc4014a95509c8b62e3000",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8502.9031858449016,
        "Y": 10144.76233559703
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "a9b3a79cfca4471d87b7f3336defc256",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8007.8501798885,
        "Y": 11144.094910139731
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "96e93d302753419eb8e797d36d738ea9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8188.5551403772,
        "Y": 11462.497633669331
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "7ca8431af5684ce1897f370d03fad8a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8145.0473233256007,
        "Y": 10321.274263922131
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "62a0e152a29a47adaa84947579ae8367",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7964.3423628368992,
        "Y": 10002.871540392531
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": false,
        "Id": "fea9b2d4d2364d1dbd5e1ed237b0b7fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8677.7573802181,
        "Y": 9734.4738931269
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "0b9302c29f434455b241c0e2f79cee6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7536.4584806745,
        "Y": 11335.294037988231
      },
      {
        "Name": "ꟿ Feet.ToFraction",
        "ShowGeometry": true,
        "Id": "726a7c0398904b4c93489f419f22486c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7414.697411717,
        "Y": 10890.247699218031
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "a935958a3ca44b0a8c582cc6d6c8e43a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7489.435764522,
        "Y": 11177.71886124063
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0532424486ca4c25a4ff51175a3186fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7606.5185903098,
        "Y": 11496.586843957131
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5317240ef6eb42c0ad95cd245080a55a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7563.0107732581992,
        "Y": 10355.363474210031
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "0b73b43e63644b4d810f9c702722514d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7492.9506636230008,
        "Y": 10194.070668241031
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "780629fb6f68480eafb844a92564cbe8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7445.9279474704008,
        "Y": 10036.495491493431
      },
      {
        "Name": "ꟿ Feet.ToFraction",
        "ShowGeometry": true,
        "Id": "6b8eadca39fb4b4dbb277b0cdcba9853",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7371.1895946653995,
        "Y": 9749.0243294708616
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "b4c232158bfd4bd4bd8337c700795441",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7615.3985074291,
        "Y": 8975.1669799048414
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "1f2b48882c5e4024a43b0cb72713247d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6610.7290541724005,
        "Y": 10845.390183747731
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "12a1bda9c314440dbefcade0e91c3831",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6533.3484441034007,
        "Y": 11362.883502022631
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6e65282f2d844176b766a92522c10a56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6489.8406270519,
        "Y": 10221.66013227543
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "1df1bcd61b8b4bb580c4863957d452ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6567.2212371208,
        "Y": 9704.16681400056
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": false,
        "Id": "5df4fbc938ed4a5d9f9b5090e5edc08e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7790.2527018023,
        "Y": 8567.5195263188216
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "5e195ade9da3431b8210090b788e5697",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6605.4459852072005,
        "Y": 9024.4753125488514
      },
      {
        "Name": "ꟿ Feet.ToFraction",
        "ShowGeometry": true,
        "Id": "ff539f8a52f84b02a25af458195427f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6483.6849162495992,
        "Y": 8579.42897377866
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "7bd4e9879b1b4fc0bc65d73096239346",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7076.8376844211007,
        "Y": 8833.27618470036
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "42c622022e314bd499275c5fbc2363b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6558.4232690546005,
        "Y": 8866.90013580125
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "902515992a934f858b0effa8faf238bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7257.5426449098,
        "Y": 9151.67890822998
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bcefc0c44e554813861e055abeb77a58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6675.5060948424007,
        "Y": 9185.76811851782
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "0128af8914f14fb792e91f9463e4f3f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6667.4306024707994,
        "Y": 7882.0603902928406
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "30b25f02536f44098e845b6fd766b38e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5679.7165587049994,
        "Y": 8534.57145830836
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d4ac4aae22254c318248517772c92602",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5602.3359486361,
        "Y": 9052.0647765832309
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": false,
        "Id": "429440ee8cd547bf8569028e555351ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6842.2847968438991,
        "Y": 7474.4129367068108
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "2205df10f7134b3db0215b35f9e1d2cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5657.4780802487994,
        "Y": 7931.3687229368406
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "aae757674dc144c897fa6af4115be329",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4731.7486537467,
        "Y": 7441.464868696351
      },
      {
        "Name": "ꟿ Feet.ToFraction",
        "ShowGeometry": true,
        "Id": "94880211591643c7b7e84c20641f2edf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5535.7170112913,
        "Y": 7486.32238416665
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "fc5b2c07563e4af3b6e4fcfcf66063d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4654.3680436778,
        "Y": 7958.958186971221
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "f25142412648423f8eaca4e30c71e1d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6128.8697794628,
        "Y": 7740.16959508835
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "9b26f7b182fe48aba1274c070edbe66f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5610.4553640962995,
        "Y": 7773.7935461892412
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "eeebfb5428c84510bf2eb236e47c5f9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6309.5747399514994,
        "Y": 8058.5723186179712
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7fb2f5c5b95f4eb79ba10ecc47693a52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5727.5381898841,
        "Y": 8092.66152890581
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "73f3c4f0980a4d7ca0e13c83223f6db7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5052.655765081,
        "Y": 4838.11093032254
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "1af928dd20594c1b973285d8d826d423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4758.7707266068,
        "Y": 4886.2012093455805
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d8b6510f56964548bf913a84604d0fcb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4543.1266847016,
        "Y": 5082.2381566741406
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "f2f125ca97f04029868a0960fd321b44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6130.8211486691007,
        "Y": 10243.599475472331
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "ccfe5cf3162e40dfafda03e07dd16049",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5834.8427437367,
        "Y": 10467.83892471633
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "0da3ef5129844ea3b38b2875f6135ef6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6099.1307158526006,
        "Y": 9712.91584956696
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "b03a1761a59143f9a0e549abfa560727",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5411.5778577343,
        "Y": 10562.588602828831
      },
      {
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Id": "5aefebc786da4423b68796ccbd0291ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5415.9681270486008,
        "Y": 10149.261065712331
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "2858b3f9ee3c4855867be9bb3879add4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5285.1501479139,
        "Y": 9043.76119041839
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "76eb809c3e4243e59ed60f7048d34c8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5250.9185623043,
        "Y": 8513.0775645130016
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "587c959b10214b798fa8e99594fbd9fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4565.9068569791007,
        "Y": 9362.7503177749113
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "7df5c2f2fca14b5cae0d5d8f57ad2385",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4989.1717429815008,
        "Y": 9268.00063966237
      },
      {
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Id": "7c025db7f0ef4c3aa2ea0e8a10c12ca8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4570.2971262934,
        "Y": 8949.42278065838
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "4c03b27c91fa464d86a071ea2d2f8660",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5264.1910478833006,
        "Y": 7123.42141032235
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7b624952459d45a1bdfb2199212ab262",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4682.1544978159009,
        "Y": 7157.5106206101909
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": false,
        "Id": "1b0aa7349d9f4f1ba7a670a7751d6f9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5796.9011047758,
        "Y": 6539.2620284111908
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "4c8725bed1b148c7ac39957f2bc0cf46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5622.0469104026006,
        "Y": 6946.9094819972106
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "afe7eb22adff4bd39a2ed0649d702774",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4612.0943881807007,
        "Y": 6996.2178146412107
      },
      {
        "Name": "ꟿ Feet.ToFraction",
        "ShowGeometry": true,
        "Id": "2480940dbe3f444ab4c1216d45686b59",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4490.3333192231994,
        "Y": 6551.17147587103
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "5aa6337eb43e44b9a173c955d77e0422",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5083.4860873946991,
        "Y": 6805.0186867927305
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "87fe705a8978427fa5208c53b6299b7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4565.0716720281007,
        "Y": 6838.64263789362
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": true,
        "Id": "e12499a4685f47c9a1664a7d5b6da72a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3862.5691384278007,
        "Y": 5366.52847176767
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "3719722ab45e4b5db8bf5bcf0bf43a3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3402.7899060124992,
        "Y": 5429.4229134228208
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "0a1ec4f75b67425d8a9d28b868a47ca6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2981.5880456173008,
        "Y": 5327.2969157434009
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "fe96347ef6b1497e9bc373d8c28231fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2613.2275881350497,
        "Y": 4359.2891249067507
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "fd727c9eedaa42d5b2aaf2e29c285903",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2951.4207732248005,
        "Y": 5545.8277555775212
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "9d579d333ab746929afe5628862b7a81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2825.7407491035,
        "Y": 4519.7593976876205
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "bf93309d23174a31b39b601666d591ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3697.2072292132007,
        "Y": 4860.0491733409908
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "823fab830629470db44ee39db4712368",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3377.7056561811996,
        "Y": 4985.99662502793
      },
      {
        "Name": "ꟿ Feet.ToFraction",
        "ShowGeometry": true,
        "Id": "444e099ce0f34997bfd593c31372668f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4314.1660286958,
        "Y": 4843.3108785865106
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "1c9c221d571d4b56b9892e528e933b99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3263.7743932194,
        "Y": 4521.66736843627
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e9d6b031333b48469f2defc8411caca1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3044.683330633,
        "Y": 4799.389375393831
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "09a2f838d69e4cccb3e72aacfedaa253",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3560.9011631015992,
        "Y": 4416.43176968109
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "80e02e4dc15e4320b4cec567a6c89076",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4854.531654242,
        "Y": 4482.2071756515106
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": true,
        "Id": "5ac67c3ea1ed4ebba3b14e8a1001c215",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5704.8458983904993,
        "Y": 4392.0808852609407
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "94187446c1ff427780d0d624d514d56e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5288.4530726552994,
        "Y": 4697.0985665778107
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "457c56611ed548d1ae17816006e128ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3686.3649616784996,
        "Y": 6506.313960400731
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "050d9c5060c54a8085b93664d47e4962",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3608.9843516096,
        "Y": 7023.8072786756011
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "5e411750872f4f89a1eb99bfd9a2111c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4093.5752980162006,
        "Y": 3546.4570032810207
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "ff04037be1284d539a9354de5e47598c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3673.9023242454996,
        "Y": 3570.6923582177405
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "b46d8ca2ca7d4da39647b7c705d59fe1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3677.6089048170006,
        "Y": 3291.2534226390808
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "e9fe51dcfd8d4e5c893fe3d60a808655",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3378.4223518774006,
        "Y": 3523.7694008719909
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "b1e2b7db732f451dae9d12fd3d2b7846",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4062.9117001471996,
        "Y": 3168.3645534184307
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "70d137dc93974912b3a969ed6c315a90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4544.3271073582991,
        "Y": 3202.6200896243508
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "748431e8e35f46d3bab6e3c46edd1d7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3442.3001735061,
        "Y": 3749.9695170066807
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "a1304d38da1849dfa393af1a4527fd69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2401.2294525300504,
        "Y": 3606.6555266048508
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "4c48455fac8b4b8eb78b6ee2310e1af0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2701.55102746765,
        "Y": 3137.9181095175309
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "0c412d8756984a2e96b97ba84378cc5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4883.0380804121005,
        "Y": 3027.708080091551
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "7f82bc47f2a74c919d2a41cec0843d8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3669.0413038894994,
        "Y": 3050.9900792916806
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": true,
        "Id": "5cb0c7b0009443f69b38a66dbe74c5f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5210.5622202026,
        "Y": 2886.2936856996212
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "10176dd7af16463191710ce4e5363740",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3202.4566380429997,
        "Y": 2888.912259789261
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": true,
        "Id": "b013cc977b414e2fbe8ad1e499587a74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4438.6560473543,
        "Y": 2005.9619221729611
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "47295936f8784b4686afaf53d8ad4d1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4029.4445983654996,
        "Y": 2121.3011565488714
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "19845586f82c4c14a7f0ed3e1468d77a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3665.8850047807,
        "Y": 2077.262589755931
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "eda5b5de9c7d4c2bb4c295893db753f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3655.3171299798005,
        "Y": 2255.1946774361013
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "60ee38c0383e432a873bb8d98f6085ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3319.0980091374995,
        "Y": 2247.5607472722313
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "ca26d41c34dc4bb09e3f392f08ff4aba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3326.6413668726009,
        "Y": 1960.0287266215612
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "478bc734046a41faa69998c05738c633",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2969.0614212857008,
        "Y": 2203.4191203122909
      },
      {
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Id": "d076945453284774b6353fbe9458492c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2598.2044815170893,
        "Y": 2097.7564042001613
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "05ff7b2449964ccc882ea6d65eb3fc1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2668.5780914168909,
        "Y": 2287.0958442442206
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "5d91352f116a448296fbc2045a47b3bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4338.4262559411009,
        "Y": 7972.96965081572
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "0b1afdec327041c2b3c513d19db3236e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3619.1829650063,
        "Y": 8291.95877817224
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "4f39f7fbe7c0490b8b6deb770706445c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4042.4478510087,
        "Y": 8197.20910005969
      },
      {
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Id": "3e04a8735b174c58be933722c87c2ace",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3623.5732343205991,
        "Y": 7878.6312410557111
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "d221fae9acc84ddb9517404da976b3bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4304.1946703314,
        "Y": 7442.2860249103305
      },
      {
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Id": "2d781e2754454080978e39e99df50bff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2420.0340736401004,
        "Y": 7387.7486868436808
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "e0d06655ffa84829913b486b0cdecc89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2986.9757568717005,
        "Y": 7820.8912049733608
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "608b93aa0a9c4f68be11e1979fe9f31b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2776.1612504531704,
        "Y": 7348.0056391931312
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "c79649a178494f55b7ea79343c101ef6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2981.3209924085995,
        "Y": 7607.581976353661
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "fa26860da197435f95a979a347c79281",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3205.0637877293,
        "Y": 7217.3878486843805
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "f6f72cb13e2e46058724ccdb8544ceac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2412.74213861969,
        "Y": 5519.7884150715709
      },
      {
        "Name": "All Family Types Of Category",
        "ShowGeometry": true,
        "Id": "d8b2f27169cf4ff19e76c1fcda479ff4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2176.8743247943903,
        "Y": 2052.0314250918609
      },
      {
        "Name": "All Families Of Category",
        "ShowGeometry": true,
        "Id": "9bceecdc76f44afb8d23969c40321a44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2031.0911635645507,
        "Y": 2949.6322011054308
      },
      {
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Id": "be8048c60e4e4294b5e1d5c28712e19a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2249.9843553586607,
        "Y": 3191.4962613449707
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "b1c5204043c34e86875d4d0eb428c988",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2131.6273321140607,
        "Y": 7138.4155277442505
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "0bbadd7068d048dfbd6fc9268d978385",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3618.9306279020993,
        "Y": 1106.779964124011
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "5ceb8fde2c844cd283132249df2a01d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3325.8969435373992,
        "Y": 1133.826398326481
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "a425b6977f21476ea2cc887df3c0698e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3315.1769376693,
        "Y": 1256.679317383371
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9dce70d3d6d8433f9fa38f508424100e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3733.6143427118996,
        "Y": 973.707605996881
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "ee3ec0dddbe94f53b04847632500a0ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3963.0389740161,
        "Y": 981.24871244207088
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "274e412bf6384f2994906cd1d0de77e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2853.4753179567006,
        "Y": 990.10603877887092
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "4c7c2bb31aad473aa79994a294dfc48b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3087.5070130485992,
        "Y": 1043.418155055771
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "5c1141d1a2894e49b9125d75415596ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1657.1640312303507,
        "Y": 3399.7279977166909
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "725a31a68c2c4f75a6cd27473fae5839",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1945.4716205588602,
        "Y": 3667.9596107230209
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "4bb3678959c243379eb841f10c112ed0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1783.8770226157894,
        "Y": 2100.5707905467407
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "80fd82ad4c6c4c9f9ded7db7adbdf784",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3084.9328788224,
        "Y": 922.743007220811
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "f0abedb1d58a43c1a0093aef9c032d05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4117.5714224468,
        "Y": 603.07618368042
      },
      {
        "Name": "String.Replace",
        "ShowGeometry": true,
        "Id": "e5f5c825cff14c7d977ad0ed1e172bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3460.6447818538009,
        "Y": 766.286310355142
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "1245269aef3c448f943f22a65fee4dff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3897.1551138346995,
        "Y": 670.928097847408
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "3f427c47f3624faeb04f2aee37bae01d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2677.5096041222905,
        "Y": 355.24889769614
      },
      {
        "Name": "Element.SetName",
        "ShowGeometry": true,
        "Id": "f8e4bc5a6833499091b9fa17b29d8e1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4722.8347583401,
        "Y": 335.0
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "84532fe3c8394689a47743bc2ea0943c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3564.2737768241996,
        "Y": 469.45816578464996
      },
      {
        "Name": "String.TrimTrailingWhitespace",
        "ShowGeometry": true,
        "Id": "93662293c1ef4cb5b386768b288a7bf7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4408.9785762644,
        "Y": 506.06019159246
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "cb2f4a92b6584e75a8c7e9999ed9a1d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2176.60399354699,
        "Y": 604.25474742441
      },
      {
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Id": "a6abddc2e95a401ba9af75488735470c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1565.8867019838997,
        "Y": 903.18938879845871
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "0a64d7c01eb3462aa81818fcd168b388",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1876.2824186093903,
        "Y": 1072.9921645117311
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "e8f99579084a4a39b54cca253ec85e7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1893.3757756207206,
        "Y": 5534.5441012062811
      },
      {
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Id": "3acdec91cc294978a358e03b2b63835c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1898.5785785157395,
        "Y": 5245.8663798573807
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "1bdbb7fad5fa42a89dd0c6a727008b64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1861.7433254982998,
        "Y": 7248.139992279901
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "c8af5a3bea6d47c5b551523afba4c7f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1655.5114862076707,
        "Y": 7396.0660789865306
      },
      {
        "Name": "All Families Of Category",
        "ShowGeometry": true,
        "Id": "8e2b2679d3124bc1992936e8ddabd04f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1506.1441296438907,
        "Y": 415.96883901231
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "d7b0bb4db9f84de3881801408c690499",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1420.5245866381892,
        "Y": 1134.2962486299009
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "4f3b92786e6d4acfa99c9f332c6589ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1132.2169973097907,
        "Y": 866.064635623571
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "b774a0a1bd01412faf9497521cabb6c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1079.9806658608095,
        "Y": 5391.2038686881606
      },
      {
        "Name": "All Family Types Of Category",
        "ShowGeometry": true,
        "Id": "5a93a5fe911047878674f9dccc67b4c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1521.7226524262596,
        "Y": 5147.6857656860711
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "03e70b5972a446c18a9462facdd6f7da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1574.4870354098794,
        "Y": 5590.6127096251012
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "e69823b60268464687b25c380540b08b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1162.3374305827701,
        "Y": 7791.874800728131
      },
      {
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Id": "8f4cd686745f4a54834f8dff509c592c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1063.2562946953703,
        "Y": 7329.2344129972907
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "1dcccf567542465ba45de671d4206c1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 610.0,
        "Y": 7391.2576276406908
      },
      {
        "Name": "All Family Types Of Category",
        "ShowGeometry": true,
        "Id": "f7d2005e229842be82c73e518c3a3e18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 624.0908606640096,
        "Y": 7028.44560571145
      }
    ],
    "Annotations": [
      {
        "Id": "d80719c648f54354bbc142d6e2115019",
        "Title": "Interior Stone",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "964c67fc0c814a84a91113e19d8223a7",
          "79b6e10786124e2ea736ecdd4ed1429a",
          "a9b3a79cfca4471d87b7f3336defc256",
          "96e93d302753419eb8e797d36d738ea9",
          "0b9302c29f434455b241c0e2f79cee6d",
          "726a7c0398904b4c93489f419f22486c",
          "a935958a3ca44b0a8c582cc6d6c8e43a",
          "0532424486ca4c25a4ff51175a3186fd",
          "1f2b48882c5e4024a43b0cb72713247d",
          "12a1bda9c314440dbefcade0e91c3831"
        ],
        "HasNestedGroups": false,
        "Left": 6523.3484441034007,
        "Top": 10772.390183747731,
        "Width": 2542.9167531661997,
        "Height": 856.19666020939985,
        "FontSize": 36.0,
        "InitialTop": 10845.390183747731,
        "InitialHeight": 813.19666020939985,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f2843edbc910413c8a47ec6331fd3210",
        "Title": "Stone 4",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "29b4bec2eabc4014a95509c8b62e3000",
          "7ca8431af5684ce1897f370d03fad8a4",
          "62a0e152a29a47adaa84947579ae8367",
          "fea9b2d4d2364d1dbd5e1ed237b0b7fe",
          "5317240ef6eb42c0ad95cd245080a55a",
          "0b73b43e63644b4d810f9c702722514d",
          "780629fb6f68480eafb844a92564cbe8",
          "6b8eadca39fb4b4dbb277b0cdcba9853",
          "6e65282f2d844176b766a92522c10a56",
          "1df1bcd61b8b4bb580c4863957d452ca"
        ],
        "HasNestedGroups": false,
        "Left": 6479.8406270519,
        "Top": 9631.16681400056,
        "Width": 2542.9167531661997,
        "Height": 856.19666020947079,
        "FontSize": 36.0,
        "InitialTop": 9704.16681400056,
        "InitialHeight": 813.19666020947079,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b340d90b7d454e7985aac350d302b4bf",
        "Title": "Stone 3",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b4c232158bfd4bd4bd8337c700795441",
          "5df4fbc938ed4a5d9f9b5090e5edc08e",
          "5e195ade9da3431b8210090b788e5697",
          "ff539f8a52f84b02a25af458195427f7",
          "7bd4e9879b1b4fc0bc65d73096239346",
          "42c622022e314bd499275c5fbc2363b6",
          "902515992a934f858b0effa8faf238bd",
          "bcefc0c44e554813861e055abeb77a58",
          "30b25f02536f44098e845b6fd766b38e",
          "d4ac4aae22254c318248517772c92602"
        ],
        "HasNestedGroups": false,
        "Left": 5592.3359486361,
        "Top": 8461.57145830836,
        "Width": 2542.9167531662006,
        "Height": 856.19666020945988,
        "FontSize": 36.0,
        "InitialTop": 8534.57145830836,
        "InitialHeight": 813.19666020945988,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dc8375ab470d48d6b8e15c395ce21e27",
        "Title": "Stone 2",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0128af8914f14fb792e91f9463e4f3f3",
          "429440ee8cd547bf8569028e555351ec",
          "2205df10f7134b3db0215b35f9e1d2cc",
          "aae757674dc144c897fa6af4115be329",
          "94880211591643c7b7e84c20641f2edf",
          "fc5b2c07563e4af3b6e4fcfcf66063d3",
          "f25142412648423f8eaca4e30c71e1d0",
          "9b26f7b182fe48aba1274c070edbe66f",
          "eeebfb5428c84510bf2eb236e47c5f9e",
          "7fb2f5c5b95f4eb79ba10ecc47693a52"
        ],
        "HasNestedGroups": false,
        "Left": 4644.3680436778,
        "Top": 7368.464868696351,
        "Width": 2542.9167531660987,
        "Height": 856.196660209459,
        "FontSize": 36.0,
        "InitialTop": 7441.464868696351,
        "InitialHeight": 813.196660209459,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8903cd3ceef7443088a0ba79f7381203",
        "Title": "Type Rename",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "73f3c4f0980a4d7ca0e13c83223f6db7",
          "1af928dd20594c1b973285d8d826d423",
          "d8b6510f56964548bf913a84604d0fcb",
          "e12499a4685f47c9a1664a7d5b6da72a",
          "3719722ab45e4b5db8bf5bcf0bf43a3e",
          "0a1ec4f75b67425d8a9d28b868a47ca6",
          "fe96347ef6b1497e9bc373d8c28231fd",
          "fd727c9eedaa42d5b2aaf2e29c285903",
          "9d579d333ab746929afe5628862b7a81",
          "bf93309d23174a31b39b601666d591ab",
          "823fab830629470db44ee39db4712368",
          "444e099ce0f34997bfd593c31372668f",
          "1c9c221d571d4b56b9892e528e933b99",
          "e9d6b031333b48469f2defc8411caca1",
          "09a2f838d69e4cccb3e72aacfedaa253",
          "80e02e4dc15e4320b4cec567a6c89076",
          "5ac67c3ea1ed4ebba3b14e8a1001c215",
          "94187446c1ff427780d0d624d514d56e",
          "f6f72cb13e2e46058724ccdb8544ceac",
          "e8f99579084a4a39b54cca253ec85e7d",
          "3acdec91cc294978a358e03b2b63835c",
          "b774a0a1bd01412faf9497521cabb6c1",
          "5a93a5fe911047878674f9dccc67b4c2",
          "03e70b5972a446c18a9462facdd6f7da"
        ],
        "HasNestedGroups": false,
        "Left": 1069.9806658608095,
        "Top": 4286.2891249067507,
        "Width": 4979.86523252969,
        "Height": 1445.2549762995304,
        "FontSize": 36.0,
        "InitialTop": 4359.2891249067507,
        "InitialHeight": 1402.2549762995304,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "62aa27ad39424fe2bb33c15a23ec83fa",
        "Title": "Stone Switch",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f2f125ca97f04029868a0960fd321b44",
          "ccfe5cf3162e40dfafda03e07dd16049",
          "0da3ef5129844ea3b38b2875f6135ef6",
          "b03a1761a59143f9a0e549abfa560727",
          "5aefebc786da4423b68796ccbd0291ed"
        ],
        "HasNestedGroups": false,
        "Left": 5401.5778577343,
        "Top": 9639.91584956696,
        "Width": 942.55285811830072,
        "Height": 1054.6727532618715,
        "FontSize": 36.0,
        "InitialTop": 9712.91584956696,
        "InitialHeight": 1011.6727532618715,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "a68e2715cb8e4747a3a8c376f2e5c36c",
        "Title": "Stone Switch",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2858b3f9ee3c4855867be9bb3879add4",
          "76eb809c3e4243e59ed60f7048d34c8b",
          "587c959b10214b798fa8e99594fbd9fc",
          "7df5c2f2fca14b5cae0d5d8f57ad2385",
          "7c025db7f0ef4c3aa2ea0e8a10c12ca8"
        ],
        "HasNestedGroups": false,
        "Left": 4555.9068569791007,
        "Top": 8440.0775645130016,
        "Width": 940.01170532519973,
        "Height": 1054.6727532619097,
        "FontSize": 36.0,
        "InitialTop": 8513.0775645130016,
        "InitialHeight": 1011.6727532619097,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "c6bb50449b3744be83cd68a7666240b7",
        "Title": "Stone 1",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4c03b27c91fa464d86a071ea2d2f8660",
          "7b624952459d45a1bdfb2199212ab262",
          "1b0aa7349d9f4f1ba7a670a7751d6f9e",
          "4c8725bed1b148c7ac39957f2bc0cf46",
          "afe7eb22adff4bd39a2ed0649d702774",
          "2480940dbe3f444ab4c1216d45686b59",
          "5aa6337eb43e44b9a173c955d77e0422",
          "87fe705a8978427fa5208c53b6299b7e",
          "457c56611ed548d1ae17816006e128ee",
          "050d9c5060c54a8085b93664d47e4962"
        ],
        "HasNestedGroups": false,
        "Left": 3598.9843516096,
        "Top": 6433.313960400731,
        "Width": 2542.9167531662006,
        "Height": 856.19666020945988,
        "FontSize": 36.0,
        "InitialTop": 6506.313960400731,
        "InitialHeight": 813.19666020945988,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ccd4d680be0c483e95b4b4d9c2821019",
        "Title": "Category Rename",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5e411750872f4f89a1eb99bfd9a2111c",
          "ff04037be1284d539a9354de5e47598c",
          "b46d8ca2ca7d4da39647b7c705d59fe1",
          "e9fe51dcfd8d4e5c893fe3d60a808655",
          "b1e2b7db732f451dae9d12fd3d2b7846",
          "70d137dc93974912b3a969ed6c315a90",
          "748431e8e35f46d3bab6e3c46edd1d7b",
          "a1304d38da1849dfa393af1a4527fd69",
          "4c48455fac8b4b8eb78b6ee2310e1af0",
          "0c412d8756984a2e96b97ba84378cc5c",
          "7f82bc47f2a74c919d2a41cec0843d8e",
          "5cb0c7b0009443f69b38a66dbe74c5f8",
          "10176dd7af16463191710ce4e5363740",
          "9bceecdc76f44afb8d23969c40321a44",
          "be8048c60e4e4294b5e1d5c28712e19a",
          "5c1141d1a2894e49b9125d75415596ca",
          "725a31a68c2c4f75a6cd27473fae5839"
        ],
        "HasNestedGroups": false,
        "Left": 1647.1640312303507,
        "Top": 2813.2936856996212,
        "Width": 3908.398188972249,
        "Height": 1068.6758313070595,
        "FontSize": 36.0,
        "InitialTop": 2886.2936856996212,
        "InitialHeight": 1025.6758313070595,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "25b4d7b879e54a4b85c2caeb8ffd0135",
        "Title": "Type Rename",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b013cc977b414e2fbe8ad1e499587a74",
          "47295936f8784b4686afaf53d8ad4d1e",
          "19845586f82c4c14a7f0ed3e1468d77a",
          "eda5b5de9c7d4c2bb4c295893db753f6",
          "60ee38c0383e432a873bb8d98f6085ba",
          "ca26d41c34dc4bb09e3f392f08ff4aba",
          "478bc734046a41faa69998c05738c633",
          "d076945453284774b6353fbe9458492c",
          "05ff7b2449964ccc882ea6d65eb3fc1d",
          "d8b2f27169cf4ff19e76c1fcda479ff4",
          "4bb3678959c243379eb841f10c112ed0"
        ],
        "HasNestedGroups": false,
        "Left": 1773.8770226157894,
        "Top": 1887.0287266215612,
        "Width": 3009.779024738511,
        "Height": 532.06711762265945,
        "FontSize": 36.0,
        "InitialTop": 1960.0287266215612,
        "InitialHeight": 489.06711762265945,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "a1064efd72a64232a7ed6a5d030c348d",
        "Title": "Stone Switch",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5d91352f116a448296fbc2045a47b3bb",
          "0b1afdec327041c2b3c513d19db3236e",
          "4f39f7fbe7c0490b8b6deb770706445c",
          "3e04a8735b174c58be933722c87c2ace",
          "d221fae9acc84ddb9517404da976b3bb"
        ],
        "HasNestedGroups": false,
        "Left": 3609.1829650063,
        "Top": 7369.2860249103305,
        "Width": 940.01170532509968,
        "Height": 1054.6727532619097,
        "FontSize": 36.0,
        "InitialTop": 7442.2860249103305,
        "InitialHeight": 1011.6727532619097,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "f495b30914d146938c6dc6c25be15ef9",
        "Title": "Walls",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2d781e2754454080978e39e99df50bff",
          "e0d06655ffa84829913b486b0cdecc89",
          "608b93aa0a9c4f68be11e1979fe9f31b",
          "c79649a178494f55b7ea79343c101ef6",
          "fa26860da197435f95a979a347c79281",
          "b1c5204043c34e86875d4d0eb428c988",
          "1bdbb7fad5fa42a89dd0c6a727008b64",
          "c8af5a3bea6d47c5b551523afba4c7f6",
          "e69823b60268464687b25c380540b08b",
          "8f4cd686745f4a54834f8dff509c592c",
          "1dcccf567542465ba45de671d4206c1f",
          "f7d2005e229842be82c73e518c3a3e18"
        ],
        "HasNestedGroups": false,
        "Left": 600.0,
        "Top": 6955.44560571145,
        "Width": 2850.0637877293,
        "Height": 997.4455992619105,
        "FontSize": 36.0,
        "InitialTop": 7028.44560571145,
        "InitialHeight": 954.4455992619105,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "a3bfb7665eaa435f82eb68bebdd4ccc3",
        "Title": "Category Rename",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0bbadd7068d048dfbd6fc9268d978385",
          "5ceb8fde2c844cd283132249df2a01d6",
          "a425b6977f21476ea2cc887df3c0698e",
          "9dce70d3d6d8433f9fa38f508424100e",
          "ee3ec0dddbe94f53b04847632500a0ee",
          "274e412bf6384f2994906cd1d0de77e7",
          "4c7c2bb31aad473aa79994a294dfc48b",
          "80fd82ad4c6c4c9f9ded7db7adbdf784",
          "f0abedb1d58a43c1a0093aef9c032d05",
          "e5f5c825cff14c7d977ad0ed1e172bdd",
          "1245269aef3c448f943f22a65fee4dff",
          "3f427c47f3624faeb04f2aee37bae01d",
          "f8e4bc5a6833499091b9fa17b29d8e1c",
          "84532fe3c8394689a47743bc2ea0943c",
          "93662293c1ef4cb5b386768b288a7bf7",
          "cb2f4a92b6584e75a8c7e9999ed9a1d6",
          "a6abddc2e95a401ba9af75488735470c",
          "0a64d7c01eb3462aa81818fcd168b388",
          "8e2b2679d3124bc1992936e8ddabd04f",
          "d7b0bb4db9f84de3881801408c690499",
          "4f3b92786e6d4acfa99c9f332c6589ff"
        ],
        "HasNestedGroups": false,
        "Left": 1122.2169973097907,
        "Top": 262.0,
        "Width": 3945.6177610303093,
        "Height": 1126.679317383371,
        "FontSize": 36.0,
        "InitialTop": 335.0,
        "InitialHeight": 1083.679317383371,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      }
    ],
    "X": -592.97379809783092,
    "Y": -1134.416419168567,
    "Zoom": 0.49037965435992703
  }
}